{"version":3,"sources":["webpack:///webpack/bootstrap 833af47fc235eb8b1f69","webpack:///./index.js","webpack:///./src/game/init.js","webpack:///./src/core/entities/game.js","webpack:///./src/core/ui/ui-interface.js","webpack:///./src/core/managers/material-manager.js","webpack:///./src/core/managers/product-manager.js","webpack:///./src/core/managers/store-manager.js","webpack:///./src/core/entities/factory.js","webpack:///./src/core/entities/quarterLog.js","webpack:///./src/core/entities/user.js","webpack:///./src/core/strategies/quarter-perception-strategy.js","webpack:///./src/settings.json","webpack:///./src/data/products.json","webpack:///./src/data/materials.json","webpack:///./src/data/stores.json","webpack:///./src/scaffolding/ui-prototype.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACfA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACPA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,oDAAmD,oBAAoB;;AAEvE;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAoB,gCAAgC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C;AAC7C;AACA;AACA;AACA;;AAEA,+DAA8D;AAC9D;AACA,8DAA6D;AAC7D;AACA,4DAA2D;AAC3D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C;AAC/C;AACA;AACA;AACA,+CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA,+DAA8D;AAC9D;AACA;AACA;AACA,8CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C;AAC9C;AACA;AACA;AACA,+CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,8DAA6D;AAC7D;AACA;AACA;AACA,8CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C;AAC5C;AACA;AACA;AACA,+CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,4DAA2D;AAC3D;AACA;AACA;AACA,8CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAmD;AACnD;AACA;AACA;AACA;AACA,mDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA,mDAAkD;AAClD;AACA;AACA,6CAA4C;AAC5C;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AClXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,UAAS;;AAET,QAAO;AACP;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;;;;;;AChRA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B,oCAAoC;AAC9D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA0B,mCAAmC;AAC7D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA0B,iCAAiC;AAC3D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;ACVA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACZA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACpEA;AACA;AACA;AACA,G;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA,G;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,G;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G;;;;;;ACxBA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 833af47fc235eb8b1f69\n **/","/**\n * This is the entry point for the NodeJS application\n */\nif ( console && console.log ) {\n  console.log(\n    'The Julie Ann Wrigley Global Institute of Sustainability\\n' +\n    'Copyright Arizona State University 2015\\n' +\n    'Made by Capstone++\\n'\n  );\n}\n\nvar game  = require( './src/game/init' );\nvar setup = require( './src/scaffolding/ui-prototype' );\n\nsetup();\ngame();\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./index.js\n ** module id = 0\n ** module chunks = 0\n **/","var Game = require( 'core/entities/game' );\n\nvar init = function() {\n  var game = new Game();\n  game.createGame();\n};\n\nmodule.exports = init;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/game/init.js\n ** module id = 1\n ** module chunks = 0\n **/","var UiInterface = require( '../ui/ui-interface' );\n\nvar MaterialManager = require( '../managers/material-manager' );\nvar ProductManager = require( '../managers/product-manager' );\nvar StoreManager = require( '../managers/store-manager' );\n\nvar Factory = require( '../entities/factory' );\nvar QuarterLog = require( '../entities/quarterLog' );\nvar User = require( '../entities/user' );\n\nvar QuarterPerceptionStrategy = require( '../strategies/quarter-perception-strategy' );\n\nvar productsData = require( '../../data/products.json' ).Products;\nvar materialsData = require( '../../data/materials.json' ).Materials;\nvar storesData = require( '../../data/stores.json' ).Stores;\n\n/**\n * A Game\n */\nvar Game = function( options ) {\n  options = options || {};\n\n  this.quartersPast = options.quartersPast || 0;\n  this.user = options.user || new User( 'Tester', { totalIncome:20000 } );\n\n  this.materialManager = null;\n  this.productManager = null;\n  this.storeManager = null;\n\n  UiInterface.setGame( this );\n\n  /**\n   * Set the game up by creating a new factory and loading\n   * all of the assets\n   */\n  this.createGame = function() {\n    this.user.factories.push( new Factory( 'Start Factory' ) );\n\n    this.materialManager = new MaterialManager( materialsData );\n    this.productManager = new ProductManager( productsData );\n    this.storeManager = new StoreManager( storesData );\n\n    UiInterface.rePaint();\n  };\n\n  //Add\n  this.addMaterial = function( material, factory ) {\n    if ( this.materialManager.reserveMaterial( material ) ) {\n      factory.material = material;\n      this.user.materials.push( material );\n\n      UiInterface.rePaint();\n\n      return true;\n    } else {\n      return false;\n    }\n  };\n  this.addProduct = function( product, factory ) {\n    if ( product.setupcost > this.user.totalIncome ) {\n      return false;\n    }\n\n    if ( this.productManager.reserveProduct( product ) ) {\n      this.user.totalIncome -= product.setupCost;\n      factory.product = product;\n\n      UiInterface.rePaint();\n\n      return true;\n    } else {\n      return false;\n    }\n\n  };\n  this.addStore = function( store, factory ) {\n    if ( this.storeManager.reserveStore( store ) ) {\n      factory.store = store;\n      this.user.stores.push( store );\n\n      UiInterface.rePaint();\n\n      return true;\n    } else\n    {\n      return false;\n    }\n  };\n  this.addFactory = function() {\n\n    if ( 10000 > this.user.totalIncome ) {\n      return false;\n    } else {\n      this.user.totalIncome -= 10000;\n      this.user.factories.push( new Factory() );\n\n      UiInterface.rePaint();\n\n      return true;\n    }\n  };\n\n  /**\n   * Get the perception that society has on the user. Starts at 5.\n   *\n   * @return Number The number [1-10] that describes the user perception\n   */\n  this.getPerception = function() {\n    var isFirstQuarter = this.user.quarterLog.length === 0;\n\n    if ( isFirstQuarter ) {\n      return 5;\n    } else {\n      var lastQuarterLog = this.user.quarterLog[ this.user.quarterLog.length - 1 ];\n      var strategy = new QuarterPerceptionStrategy( lastQuarterLog );\n      var perception = strategy.execute();\n\n      return perception;\n    }\n  };\n\n  //Quarter\n  this.runQuarter = function() {\n    console.log( '' );\n    var currentPerception = this.getPerception();\n    var totalPaid = 0;\n    var totalItemsMade = 0;\n    var totalItemsSold = 0;\n    var totalstorePaid = 0;\n    var totalstoreWaste = 0;\n    var totalfactoryWaste = 0;\n\n    //loop though all factories\n    for ( var i = 0; i < this.user.factories.length; i++ ) {\n      var factory  = this.user.factories[ i ];\n      var paid = 0;\n      var itemsMade = 0;\n      var itemsSold = 0;\n      var storePaid = 0;\n      var storeWaste = 0;\n      var factoryWaste = 0;\n      var factoryStartInventory = factory.totalInventory;\n      var startIncome = this.user.totalIncome;\n\n      if ( factory.store != null ) {\n\n        //Requested From Store\n        var totalRequested =\n            Math.floor( factory.store.baseBuyRateForProducts * ( currentPerception / 5 ) );\n\n        //Make Products\n        var costPerProductSet =\n            factory.material.costPerPound * factory.product.materialDependency.amount *\n            factory.product.totalOutput;\n\n        while ( factory.totalInventory < totalRequested &&\n        costPerProductSet <= this.user.totalIncome ) {\n          this.user.totalIncome -= costPerProductSet;\n          factory.totalInventory += factory.product.totalOutput;\n\n          //Logging\n          totalItemsMade += factory.product.totalOutput;\n          paid += costPerProductSet;\n          factoryWaste += factory.material.wastePerPound *\n              factory.product.materialDependency.amount;\n        }\n\n        //Sell To Store\n        var amount = 0;\n        if ( factory.totalInventory > totalRequested ) {\n          amount = totalRequested;\n        } else {\n          amount = this.user.factories[ i ].totalInventory;\n        }\n        this.user.totalIncome += factory.store.pricePerProduct * amount;\n        factory.totalInventory -= amount;\n\n        //Logging\n        itemsSold += amount;\n        storePaid += factory.store.pricePerProduct * amount;\n        storeWaste += factory.store.wastePerProduct * amount;\n\n        console.log( 'Total Quarter Logs: ' + this.user.quarterLog.length );\n        console.log( 'Perception: ' + currentPerception );\n        console.log( 'baseBuyRateForProducts: ' + factory.store.baseBuyRateForProducts );\n        console.log( 'Requested: ' + totalRequested );\n        console.log( 'Start Inventory: ' + factoryStartInventory );\n        console.log( 'User.totalIncome: ' + startIncome );\n        console.log( 'Items Per Set: ' + factory.product.totalOutput );\n        console.log( 'Cost Per Product Set: ' + costPerProductSet );\n        console.log( 'Items Made: ' + totalItemsMade );\n        console.log( 'Paid: ' + totalItemsMade );\n        console.log( 'Factory Waste: ' + factoryWaste );\n        console.log( 'End Inventory: ' + factory.totalInventory );\n        console.log( 'ItemsSold: ' + amount );\n        console.log( 'Store Paid: ' + storePaid );\n        console.log( 'Store Waste: ' + storeWaste );\n        console.log( 'User.totalIncome: ' + this.user.totalIncome );\n        totalPaid += paid;\n        totalItemsMade += itemsMade;\n        totalItemsSold += itemsSold;\n        totalstorePaid += storePaid;\n        totalstoreWaste += storeWaste;\n        totalfactoryWaste += factoryWaste;\n\n      }\n\n    }\n    console.log( '' );\n    this.user.totalWaste += totalstoreWaste + totalfactoryWaste;\n\n    //Generate Quarter Log\n    var quarterLog = new QuarterLog( totalPaid, totalItemsMade,\n        totalItemsSold, totalstorePaid, totalstoreWaste, totalfactoryWaste );\n    console.log( 'QuarterLog: ' + quarterLog );\n    this.user.quarterLog.push( quarterLog );\n\n    //Quarters Past\n    this.quartersPast++;\n\n    UiInterface.rePaint();\n  };\n\n  //Tests\n  this.runTest = function() {\n    this.showGameObject();\n    this.checkSetup();\n    this.checkLoadJson();\n    this.checkAddMaterial();\n    this.checkAddProduct();\n    this.checkAddStore();\n    this.checkAddFactory();\n    this.checkRunQuarter();\n    this.checkRunQuarter();\n    this.checkRunQuarter();\n  };\n\n  this.showGameObject = function() {\n    console.log( 'Game [Live Pointer]' );\n    console.log( '---------' );\n\n    console.log( this );\n    console.log( '' );\n  };\n  this.checkSetup = function() {\n    console.log( 'Setup ' );\n    console.log( '---------' );\n    console.log( 'User' );\n    var userCurrent = jQuery.extend( true, {}, this.user );\n    console.log( userCurrent );\n    console.log( '' );\n  };\n  this.checkLoadJson = function() {\n\n    var getAvailableMaterialsCurrent = jQuery.extend( true, {},\n        this.materialManager.getAvailableMaterials()  );\n    var getAvailableProductsCurrent = jQuery.extend( true, {},\n        this.productManager.getAvailableProducts()  );\n    var getAvailableStoresCurrent = jQuery.extend( true, {},\n        this.storeManager.getAvailableStores()  );\n\n    console.log( 'Load Json' );\n    console.log( '---------' );\n    console.log( 'Materials' );\n    console.log( getAvailableMaterialsCurrent );\n    console.log( 'Products' );\n    console.log( getAvailableProductsCurrent );\n    console.log( 'Stores' );\n    console.log( getAvailableStoresCurrent );\n    console.log( '' );\n  };\n  this.checkAddMaterial = function() {\n    console.log( 'Add Material' );\n    console.log( '---------' );\n    console.log( 'Material' );\n    var firstMaterial = jQuery.extend( true, {},\n        this.materialManager.getAvailableMaterials()[ 0 ] );\n    console.log( firstMaterial );\n    console.log( 'Factory' );\n    var firstFactory = jQuery.extend( true, {}, this.user.factories[ 0 ] );\n    console.log( firstFactory );\n    console.log( 'AddMaterial()' );\n    this.addMaterial( this.materialManager.getAvailableMaterials()[ 0 ],\n        this.user.factories[ 0 ] );\n    console.log( 'Available Materials' );\n    var getAvailableMaterialsCurrent = jQuery.extend( true, {},\n        this.materialManager.getAvailableMaterials() );\n    console.log( getAvailableMaterialsCurrent );\n    console.log( 'User' );\n    var userCurrent = jQuery.extend( true, {}, this.user );\n    console.log( userCurrent );\n    console.log( '' );\n  };\n  this.checkAddProduct = function() {\n    console.log( 'Add Product' );\n    console.log( '---------' );\n    console.log( 'Product' );\n    var firstProduct = jQuery.extend( true, {},\n        this.productManager.getAvailableProducts()[ 0 ] );\n    console.log(  firstProduct );\n    console.log( 'Factory' );\n    var firstFactory = jQuery.extend( true, {},\n        this.user.factories[ 0 ] );\n    console.log( firstFactory );\n    console.log( 'AddProduct()' );\n    this.addProduct( this.productManager.getAvailableProducts()[ 0 ],\n        this.user.factories[ 0 ] );\n    console.log( 'Available Products' );\n    var getAvailableProductsCurrent = jQuery.extend( true, {},\n        this.productManager.getAvailableProducts() );\n    console.log( getAvailableProductsCurrent );\n    console.log( 'User' );\n    var userCurrent = jQuery.extend( true, {}, this.user );\n    console.log( userCurrent );\n    console.log( '' );\n  };\n  this.checkAddStore = function() {\n    console.log( 'Add Store' );\n    console.log( '---------' );\n    console.log( 'Store' );\n    var firstStore = jQuery.extend( true, {},\n        this.storeManager.getAvailableStores()[ 0 ] );\n    console.log( firstStore );\n    console.log( 'Factory' );\n    var firstFactory = jQuery.extend( true, {},\n        this.user.factories[ 0 ] );\n    console.log( firstFactory );\n    console.log( 'AddStore()' );\n    this.addStore( this.storeManager.getAvailableStores()[ 0 ],\n        this.user.factories[ 0 ] );\n    console.log( 'Available Stores' );\n    var getAvailableStoresCurrent = jQuery.extend( true, {},\n        this.storeManager.getAvailableStores() );\n    console.log( getAvailableStoresCurrent );\n    console.log( 'User' );\n    var userCurrent = jQuery.extend( true, {}, this.user );\n    console.log( userCurrent );\n    console.log( '' );\n  };\n  this.checkAddFactory = function() {\n    console.log( 'Add Factory' );\n    console.log( '---------' );\n    console.log( 'User' );\n    var userCurrentBefore = jQuery.extend( true, {}, this.user );\n    console.log( userCurrentBefore );\n    console.log( 'AddFactory()' );\n    this.addFactory();\n    console.log( 'User' );\n    var userCurrentAfter = jQuery.extend( true, {}, this.user );\n    console.log( userCurrentAfter );\n    console.log( '' );\n  };\n  this.checkRunQuarter = function() {\n    console.log( 'Run Quarter' );\n    console.log( '---------' );\n    var userCurrent = jQuery.extend( true, {}, this.user );\n    console.log( 'User' );\n    console.log(  userCurrent );\n    console.log( 'RunQuaterLog' );\n    this.runQuarter();\n    console.log( 'User' );\n    var userCurrentAfter = jQuery.extend( true, {}, this.user );\n    console.log( userCurrentAfter );\n    console.log( 'QuaterLog' );\n    var quarterLog = jQuery.extend( true, {},\n        this.user.quarterLog[ this.user.quarterLog.length - 1 ] );\n    console.log( quarterLog );\n    console.log( '' );\n  };\n};\n\nmodule.exports = Game;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/core/entities/game.js\n ** module id = 2\n ** module chunks = 0\n **/","\nvar UIInterface = ( function() {\n  var _game = null;\n  var _user = null;\n  var $menu = '<div id=\"menu\">' +\n      '<div id=\"redSquare\"></div>' +\n      '<button id=\"closeButton\">X</button>' +\n      '<ul id=\"topMenu\"></ul>' +\n      '</div>';\n\n  var setGame = function( game ) {\n    _game = game;\n    _user = game.User;\n  };\n\n  // TODO get the factory by it's id and get appropriate menu items\n  var getMenuItemList = function( factoryId ) {\n    var mFactory = _game.user.factories[ factoryId ];\n    var itemsArray = [];\n    if ( mFactory.material == null ) {\n      itemsArray.push( 'Material Sources' );\n    }\n    if ( mFactory.product == null ) {\n      itemsArray.push( 'Products' );\n    }\n    if ( mFactory.store == null ) {\n      itemsArray.push( 'Distribution Channels' );\n    }\n    if ( itemsArray.length == 0 ) {\n      itemsArray.push( 'No Options Available' );\n    }\n\n    return itemsArray;\n\n  };\n\n  var rePaint = function() {\n    drawFactories();\n    setQuarterValue( _game.quartersPast );\n    setYearValue( _game.quartersPast );\n    setPerceptionValue( _game.getPerception() );\n    setIncomeValue( _game.user.totalIncome );\n    setWasteValue( _game.user.totalWaste );\n  };\n\n  var setWasteValue = function( totalWaste ) {\n    $( '#wasteValue' ).text( totalWaste );\n  };\n\n  var setIncomeValue = function( income ) {\n    $( '#totalFundsValue' ).text( income );\n  };\n\n  // Sets the Quarter value in the UI\n  var setQuarterValue = function( quarter ) {\n    quarter++;\n    $( '#quarterValue' ).text( quarter );\n  };\n\n  // Sets the Year value in the UI\n  var setYearValue = function( quarters ) {\n    var year = Math.ceil( quarters / 4 );\n    $( '#yearValue' ).text( year );\n  };\n\n  // Sets the \"Bar Graph\" value in the UI. Currently treated as a percentage\n  var setTimeProgressValue = function( percent ) {\n    $( '#timeProgressValue' ).text( percent );\n  };\n\n  // Sets the \"Bar Graph\" value in the UI. Currently treated as a percentage\n  var setPerceptionValue = function( perception ) {\n    $( '#perceptionValue' ).text( perception );\n  };\n\n  var setGoals = function( goals ) {\n    goals.forEach( function( goal ) {\n      $( '#goalsValue' ).append( '<div>' + goal + '</div>' );\n    } );\n  };\n\n  var nextTick = function() {\n  };\n\n  var nextQuarter = function() {\n    _game.runQuarter();\n  };\n\n  var drawFactories = function() {\n    $( '#factoryContainer' ).empty();\n    console.log( 'UI Game Here' );\n    console.log( _game );\n    var factories = _game.user.factories;\n    console.log( 'Game in UI' );\n    var factoryIndex = 0;\n    factories.forEach( function( factory ) {\n      var factoryProduct = factory.product == null ? 'none' : factory.product.name;\n      var factoryMaterial = factory.material == null ? 'none' : factory.material.name;\n      var factoryStore = factory.store == null ? 'none' : factory.store.name;\n      var $factoryEntity = $( '<div />',\n          {\n            class: 'factory_entity',\n            html: '<span>Factory ' + factoryIndex + '</span>' +\n            '<span><b>Product:</b> ' + factoryProduct + '</span><br>' +\n            '<span><b>Material:</b> ' + factoryMaterial + '</span><br>' +\n            '<span><b>Store:</b> ' + factoryStore + '</span><br>',\n            id: factoryIndex\n          } );\n      factoryIndex++;\n      $factoryEntity.click( function() {\n        $( '#menu' ).remove();\n        var currentFactoryID = this.id;\n        var menuItemList = getMenuItemList( currentFactoryID );\n        $factoryEntity.append( $menu );\n\n        menuItemList.forEach( function( item ) {\n          $( '#topMenu' ).append( '<li class=\"topMenuItem\">' + item + '</li>' );\n        } );\n\n        $( '.topMenuItem' ).click( function( e ) {\n          var item = e.currentTarget;\n          $( '.topMenuItem' ).removeClass( 'selected' );\n          $( item ).addClass( 'selected' );\n          doSecondLevelMenu( $( item ).text(), currentFactoryID );\n          e.stopPropagation();\n        } );\n\n        $( '#closeButton' ).click( function( e ) {\n          $( '#menu' ).remove();\n          e.stopPropagation();\n        } );\n\n      } );\n      $( '#factoryContainer' ).append( $factoryEntity );\n    } );\n\n    var doSecondLevelMenu = function( name, currentFactoryID ) {\n      $( '#secondMenu' ).remove();\n      var $secondMenu = '<ul id=\"secondMenu\">' +\n\n          '</ul>';\n      $( '#menu' ).append( $secondMenu );\n      switch ( name ){\n        case 'Material Sources' :\n          var materials = _game.materialManager.getAvailableMaterials();\n          materials.forEach( function( material, index ) {\n            $( '#secondMenu' ).append( '<li class=\"secondMenuItem\" data-index=\"' + index +\n              '\">' + material.name + '</li>' );\n          } );\n          $( '.secondMenuItem ' ).click( function( e ) {\n            var index = $( e.currentTarget ).data( 'index' );\n            doMaterialConfirmation( _game.materialManager.getAvailableMaterials()[ index ],\n                currentFactoryID );\n            e.stopPropagation();\n          } );\n          break;\n\n        case 'Products' :\n          var products = _game.productManager.getAvailableProducts();\n          products.forEach( function( product, index ) {\n            $( '#secondMenu' ).append( '<li class=\"secondMenuItem\" data-index=\"' + index +\n                '\">' + product.name + '</li>' );\n          } );\n          $( '.secondMenuItem ' ).click( function( e ) {\n            var index = $( e.currentTarget ).data( 'index' );\n            doProductConfirmation( _game.productManager.getAvailableProducts()[ index ],\n                currentFactoryID );\n            e.stopPropagation();\n          } );\n          break;\n\n        case 'Distribution Channels' :\n          var stores = _game.storeManager.getAvailableStores();\n          stores.forEach( function( store, index ) {\n            $( '#secondMenu' ).append( '<li class=\"secondMenuItem\" data-index=\"' + index +\n                '\">' + store.name + '</li>' );\n          } );\n          $( '.secondMenuItem ' ).click( function( e ) {\n            var index = $( e.currentTarget ).data( 'index' );\n            doStoreConfirmation( _game.storeManager.getAvailableStores()[ index ],\n                currentFactoryID );\n            e.stopPropagation();\n          } );\n          break;\n      }\n    };\n\n    var doMaterialConfirmation = function( material, currentFactoryID ) {\n      if ( confirm( 'Are you sure you would like to purchase ' +\n              material.name + ' for your factory?' +\n              '\\n\\n Cost Per Pound: $' + material.costPerPound +\n              '\\n\\n Waste Per Pound: ' + material.wastePerPound\n          ) ) {\n        $( '#menu' ).remove();\n        _game.addMaterial( material, _game.user.factories[ currentFactoryID ] );\n        console.log( _game );\n      }\n\n    };\n\n    var doProductConfirmation = function( product, currentFactoryID ) {\n      var mFactory = _game.user.factories[ currentFactoryID ];\n      if ( confirm( 'Are you sure you would like to purchase ' +\n              product.name + ' for your factory?' +\n              '\\n\\n Setup Cost: $' + product.setupCost +\n              '\\n\\n Material Required: ' + product.materialDependency.name +\n              '\\n\\n Output: ' + product.totalOutput + ' units'\n          ) ) {\n        $( '#menu' ).remove();\n        if ( mFactory.material == null ||\n            mFactory.material.name != product.materialDependency.name ) {\n          alert( 'Error: This product can not be made without Material: ' +\n              product.materialDependency.name + '.' );\n          return;\n        }\n\n        if ( _game.addProduct( product, mFactory ) == false ) {\n          alert( 'Error: You do not have enough money to setup this product' );\n        }\n\n        console.log( _game );\n      }\n\n    };\n\n    var doStoreConfirmation = function( store, currentFactoryID ) {\n      var mFactory = _game.user.factories[ currentFactoryID ];\n      if ( confirm( 'Are you sure you would like to purchase ' +\n              store.name + ' for your factory?' +\n              '\\n\\n Product Required: ' + store.product +\n              '\\n\\n Price per Product: $' + store.pricePerProduct +\n              '\\n\\n Base Buy Rate: $' + store.baseBuyRateForProducts +\n              '\\n\\n Waste per Product: ' + store.wastePerProduct\n          ) ) {\n        $( '#menu' ).remove();\n        if ( mFactory.product == null || mFactory.product.name != store.product ) {\n          alert( 'Error: This Store can not be contracted without Product: ' +\n              store.product + '.' );\n          return;\n        }\n\n        if ( _game.addStore( store, mFactory ) == false ) {\n          alert( 'Error: You do not have enough money to setup this product' );\n        }\n\n        console.log( _game );\n      }\n      console.log( store );\n    };\n  };\n\n  var addNewFactory = function() {\n    if ( !_game.addFactory() ) {\n      alert( 'Error: You do not have enough money to purcahse a new Factory.' );\n    }\n  };\n\n  return {\n    getMenuItemList: getMenuItemList,\n    rePaint: rePaint,\n    setQuarterValue: setQuarterValue,\n    setYearValue: setYearValue,\n    setTimeProgressValue: setTimeProgressValue,\n    setPerceptionValue: setPerceptionValue,\n    setGoals: setGoals,\n    nextTick: nextTick,\n    nextQuarter: nextQuarter,\n    setGame: setGame,\n    addNewFactory: addNewFactory\n  };\n} )();\n\nmodule.exports = UIInterface;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/core/ui/ui-interface.js\n ** module id = 3\n ** module chunks = 0\n **/","/**\n * A Material Manager\n */\nvar MaterialManager = function( materials ) {\n  var _materials = materials;\n  var _availableMaterials = materials;\n\n  /**\n   * If the material is available, returns true and\n   * removes the function from the available materials\n   *\n   * Otherwise, return false.\n   */\n  var reserveMaterial = function( material ) {\n    if ( _availableMaterials != null ) {\n      for ( var index = 0; index < _availableMaterials.length; index++ ) {\n        if ( _availableMaterials[ index ] === material ) {\n          _availableMaterials.splice( index, 1 );\n\n          return true;\n        }\n      }\n    }\n\n    return false;\n  };\n\n  var getAvailableMaterials = function() {\n    return _availableMaterials;\n  };\n\n  return {\n    reserveMaterial: reserveMaterial,\n    getAvailableMaterials: getAvailableMaterials\n  };\n};\n\nmodule.exports = MaterialManager;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/core/managers/material-manager.js\n ** module id = 4\n ** module chunks = 0\n **/","/**\n * A Product Manager\n */\nvar ProductManager = function( products ) {\n  var _products = products;\n  var _availableProducts = products;\n\n  var reserveProduct = function( product ) {\n    if ( _availableProducts  != null ) {\n      for ( var index = 0; index < _availableProducts.length; index++ ) {\n        if ( _availableProducts[ index ] === product ) {\n          _availableProducts.splice( index, 1 );\n\n          return true;\n        }\n      }\n    }\n\n    return false;\n  };\n\n  var getAvailableProducts = function() {\n    return _availableProducts;\n  };\n\n  return {\n    reserveProduct: reserveProduct,\n    getAvailableProducts: getAvailableProducts\n  };\n};\n\nmodule.exports = ProductManager;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/core/managers/product-manager.js\n ** module id = 5\n ** module chunks = 0\n **/","/**\n * A Store Manager\n */\nvar StoreManager = function( stores ) {\n  var _stores = stores;\n  var _availableStores = stores;\n\n  var reserveStore = function( store ) {\n    if ( _availableStores  != null ) {\n      for ( var index = 0; index < _availableStores.length; index++ ) {\n        if ( _availableStores[ index ] === store ) {\n          _availableStores.splice( index, 1 );\n\n          return true;\n        }\n      }\n    }\n\n    return false;\n  };\n\n  var getAvailableStores = function() {\n    return _availableStores;\n  };\n\n  return {\n    reserveStore: reserveStore,\n    getAvailableStores: getAvailableStores\n  };\n};\nmodule.exports = StoreManager;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/core/managers/store-manager.js\n ** module id = 6\n ** module chunks = 0\n **/","/**\n * A Factory game entity, not an algorithm structure\n * Contains data for Factory game entities. Only\n * the name is required\n *\n * @param name String\n * @param options Object Optional\n * - product\n * - material\n * - store\n * - totalInventory\n */\nvar Factory = function( name, options ) {\n  options = options || {};\n\n  this.name = name;\n  this.product = options.product || null;\n  this.material = options.material || null;\n  this.store = options.store || null;\n  this.totalInventory = options.totalInventory || 0;\n};\n\nmodule.exports = Factory;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/core/entities/factory.js\n ** module id = 7\n ** module chunks = 0\n **/","var QuarterLog = function( paid, itemsMade, itemsSold,\n                           storePaid, storeWaste, factoryWaste ) {\n  this.paid = paid;\n  this.itemsMade = itemsMade;\n  this.itemsSold = itemsSold;\n  this.storePaid = storePaid;\n  this.storeWaste = storeWaste;\n  this.factoryWaste = factoryWaste;\n\n};\nmodule.exports = QuarterLog;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/core/entities/quarterLog.js\n ** module id = 8\n ** module chunks = 0\n **/","var User = function( name, options ) {\n  options = options || {};\n\n  this.name = name;\n  this.quarterLog = options.quarterLog || [];\n  this.factories = options.factories || [];\n  this.materials = options.materials || [];\n  this.stores = options.stores || [];\n  this.totalIncome = options.totalIncome || 0;\n  this.totalWaste = options.totalWaste || 0;\n};\n\nmodule.exports = User;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/core/entities/user.js\n ** module id = 9\n ** module chunks = 0\n **/","var settings = require( '../../settings.json' );\n\n/**\n * Determine the perception for the given last quarter\n *\n * The perception is based on the average of the factory and\n * store waste to their respective number of items produced and\n * consumed.\n *\n * @param lastQuarterLog Object has the following: factoryWaste, itemsMade, storeWaste, itemsSold\n */\nvar QuarterPerceptionStrategy = function( lastQuarterLog ) {\n  var _wasteRate = .5;\n  var _factoryRate = 0;\n  var _storeRate = 0;\n  var _totalRates = 0;\n\n  var _between = function( wasteRate, min, max ) {\n    return wasteRate >= min && wasteRate <= max;\n  };\n\n  var execute = function() {\n    if ( lastQuarterLog.itemsMade != 0 ) {\n      _factoryRate = ( lastQuarterLog.factoryWaste / lastQuarterLog.itemsMade );\n      _totalRates++;\n    }\n\n    if ( lastQuarterLog.itemsSold != 0 ) {\n      _storeRate = ( lastQuarterLog.storeWaste / lastQuarterLog.itemsSold );\n      _totalRates++;\n    }\n\n    if ( _totalRates != 0 ) {\n      _wasteRate = ( _factoryRate + _storeRate ) / 2;\n    }\n\n    if ( settings.verbose ) {\n      console.log( 'Waste Rate:' +  _wasteRate );\n    }\n\n    if ( _wasteRate === 0 ) {\n      return 10;\n    } else if ( _between( _wasteRate, 0.00001, 0.1 ) ) {\n      return 9;\n    } else if ( _between( _wasteRate, 0.1, 0.2 ) ) {\n      return 8;\n    } else if ( _between( _wasteRate, 0.2, 0.3 ) ) {\n      return 7;\n    } else if ( _between( _wasteRate, 0.3, 0.4 ) ) {\n      return 6;\n    } else if ( _between( _wasteRate, 0.4, 0.5 ) ) {\n      return 5;\n    } else if ( _between( _wasteRate, 0.5, 0.6 ) ) {\n      return 4;\n    } else if ( _between( _wasteRate, 0.6, 0.8 ) ) {\n      return 3;\n    } else if ( _between( _wasteRate, 0.8, 1 ) ) {\n      return 2;\n    } else {\n      return 1;\n    }\n  };\n\n  return {\n    execute: execute\n  };\n};\n\nmodule.exports = QuarterPerceptionStrategy;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/core/strategies/quarter-perception-strategy.js\n ** module id = 10\n ** module chunks = 0\n **/","module.exports = {\n\t\"environment\": \"debug\",\n\t\"verbose\": false\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/settings.json\n ** module id = 11\n ** module chunks = 0\n **/","module.exports = {\n\t\"Products\": [\n\t\t{\n\t\t\t\"name\": \"Coke\",\n\t\t\t\"setupCost\": 2000,\n\t\t\t\"materialDependency\": {\n\t\t\t\t\"name\": \"Aluminum\",\n\t\t\t\t\"amount\": 20\n\t\t\t},\n\t\t\t\"totalOutput\": 20\n\t\t},\n\t\t{\n\t\t\t\"name\": \"Fanta\",\n\t\t\t\"setupCost\": 2000,\n\t\t\t\"materialDependency\": {\n\t\t\t\t\"name\": \"Glass\",\n\t\t\t\t\"amount\": 30\n\t\t\t},\n\t\t\t\"totalOutput\": 30\n\t\t},\n\t\t{\n\t\t\t\"name\": \"Pepsi\",\n\t\t\t\"setupCost\": 1900,\n\t\t\t\"materialDependency\": {\n\t\t\t\t\"name\": \"Plastic\",\n\t\t\t\t\"amount\": 25\n\t\t\t},\n\t\t\t\"totalOutput\": 25\n\t\t}\n\t]\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/data/products.json\n ** module id = 12\n ** module chunks = 0\n **/","module.exports = {\n\t\"Materials\": [\n\t\t{\n\t\t\t\"name\": \"Aluminum\",\n\t\t\t\"wastePerPound\": 0.3,\n\t\t\t\"costPerPound\": 0.3\n\t\t},\n\t\t{\n\t\t\t\"name\": \"Glass\",\n\t\t\t\"wastePerPound\": 0.6,\n\t\t\t\"costPerPound\": 0.35\n\t\t},\n\t\t{\n\t\t\t\"name\": \"Plastic\",\n\t\t\t\"wastePerPound\": 0.3,\n\t\t\t\"costPerPound\": 0.4\n\t\t}\n\t]\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/data/materials.json\n ** module id = 13\n ** module chunks = 0\n **/","module.exports = {\n\t\"Stores\": [\n\t\t{\n\t\t\t\"name\": \"coke liker\",\n\t\t\t\"product\": \"Coke\",\n\t\t\t\"pricePerProduct\": 20,\n\t\t\t\"wastePerProduct\": 0.5,\n\t\t\t\"baseBuyRateForProducts\": 16\n\t\t},\n\t\t{\n\t\t\t\"name\": \"health store\",\n\t\t\t\"product\": \"Pepsi\",\n\t\t\t\"pricePerProduct\": 21,\n\t\t\t\"wastePerProduct\": 0.4,\n\t\t\t\"baseBuyRateForProducts\": 26\n\t\t},\n\t\t{\n\t\t\t\"name\": \"super Fanta\",\n\t\t\t\"product\": \"Fanta\",\n\t\t\t\"pricePerProduct\": 19,\n\t\t\t\"wastePerProduct\": 1,\n\t\t\t\"baseBuyRateForProducts\": 42\n\t\t}\n\t]\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/data/stores.json\n ** module id = 14\n ** module chunks = 0\n **/","var UiInterface = require( 'core/ui/ui-interface' );\n\nvar setup = function() {\n  var $gameContainer = $( '#game-container' );\n  var $quarterYear = '<div>Quarter <span id=\"quarterValue\">1</span> / ' +\n      'Year <span id=\"yearValue\">0</span> ';\n\n  var $funds = '<div>Funds $<span id=\"totalFundsValue\">000000</span></div>';\n\n  var $waste = '<div>Waste: <span id=\"wasteValue\">0</span></div>';\n\n  var $perception = '<div>Perception: <span id=\"perceptionValue\">1</span></div>';\n\n  // var $goals = '<div id=\"goalsValue\">Goals: <div>none</div></div>';\n\n  var $addFactory = $( '<button />',\n      {\n        text: 'Add Factory'\n      } );\n  $addFactory.click( function() {\n    UiInterface.addNewFactory();\n  } );\n\n  var $nextQuarter = $( '<button />',\n      {\n        text: 'Next Quarter'\n      } );\n\n  $nextQuarter.click( function() {\n    UiInterface.nextQuarter();\n  } );\n\n  $gameContainer.append( '<div id=\"factoryContainer\"></div>' );\n  $gameContainer.append( '<hr>', $quarterYear, $funds, $waste, $perception );\n  $gameContainer.append( $addFactory, $nextQuarter );\n};\n\nmodule.exports = setup;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/scaffolding/ui-prototype.js\n ** module id = 15\n ** module chunks = 0\n **/"],"sourceRoot":""}