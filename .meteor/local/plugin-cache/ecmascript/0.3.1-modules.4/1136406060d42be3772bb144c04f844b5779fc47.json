{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"var newView = function (test) {\n  var results = [];\n  var view = new DDPServer._SessionCollectionView('test', {\n    added: function (collection, id, fields) {\n      results.push({ fun: 'added', id: id, fields: fields });\n    },\n    changed: function (collection, id, changed) {\n      if (_.isEmpty(changed)) return;\n      results.push({ fun: 'changed', id: id, changed: changed });\n    },\n    removed: function (collection, id) {\n      results.push({ fun: 'removed', id: id });\n    }\n  });\n  var v = {\n    view: view,\n    results: results\n  };\n  _.each([\"added\", \"changed\", \"removed\"], function (it) {\n    v[it] = _.bind(view[it], view);\n  });\n  v.expectResult = function (result) {\n    test.equal(results.shift(), result);\n  };\n  v.expectNoResult = function () {\n    test.equal(results, []);\n  };\n  v.drain = function () {\n    var ret = results;\n    results = [];\n    return ret;\n  };\n  return v;\n};\n\nTinytest.add('livedata - sessionview - exists reveal', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", {});\n  v.expectResult({ fun: 'added', id: \"A1\", fields: {} });\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", {});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n\n  v.removed(\"B\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - added a second field in another sub', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { a: \"foo\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { a: \"foo\" } });\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", { a: \"foo\", b: \"bar\" });\n  v.expectResult({ fun: 'changed', 'id': \"A1\", changed: { b: \"bar\" } });\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n\n  v.removed(\"B\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - field reveal', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", { foo: \"baz\" });\n  v.removed(\"A\", \"A1\");\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { foo: \"baz\" } });\n  v.expectNoResult();\n  // Somewhere in here we must have changed foo to baz. Legal either on the\n  // added or on the removed, but only once.\n\n  v.removed(\"B\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - field change', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", { foo: \"baz\" }, []);\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { foo: \"baz\" } });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - field clear', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", { foo: undefined });\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { foo: undefined } });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - change makes a new field', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", { baz: \"quux\" });\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { baz: \"quux\" } });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - add, remove, add', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - field clear reveal', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", { foo: \"baz\" });\n  v.changed(\"A\", \"A1\", { foo: undefined });\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { foo: \"baz\" } });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - change to canonical value produces no change', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", { foo: \"baz\" });\n  var canon = \"bar\";\n  var maybeResults = v.drain();\n  if (!_.isEmpty(maybeResults)) {\n    // if something happened, it was a change message to baz.\n    // if nothing did, canon is still bar.\n    test.length(maybeResults, 1);\n    test.equal(maybeResults[0], { fun: 'changed', id: \"A1\", changed: { foo: \"baz\" } });\n    canon = \"baz\";\n  }\n  v.changed(\"B\", \"A1\", { foo: canon });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - new field of canonical value produces no change', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", {});\n\n  v.changed(\"B\", \"A1\", { foo: \"bar\" });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - clear all clears only once', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", { foo: \"bar\" });\n  v.added(\"C\", \"A1\", { foo: \"bar\" });\n  v.changed(\"A\", \"A1\", { foo: undefined });\n  v.changed(\"B\", \"A1\", { foo: undefined });\n  v.changed(\"C\", \"A1\", { foo: undefined });\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { foo: undefined } });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - change all changes only once', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", { foo: \"bar\" });\n  v.added(\"C\", \"A1\", { foo: \"bar\" });\n  v.changed(\"B\", \"A1\", { foo: \"baz\" });\n  v.changed(\"A\", \"A1\", { foo: \"baz\" });\n  v.changed(\"C\", \"A1\", { foo: \"baz\" });\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { foo: \"baz\" } });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - multiple operations at once in a change', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\", baz: \"quux\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\", baz: \"quux\" } });\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", { foo: \"baz\" });\n  v.changed(\"A\", \"A1\", { thing: \"stuff\", foo: undefined, baz: undefined });\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { foo: \"baz\", thing: \"stuff\", baz: undefined } });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { thing: undefined } });\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - more than one document', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\", baz: \"quux\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\", baz: \"quux\" } });\n  v.expectNoResult();\n\n  v.added(\"A\", \"A2\", { foo: \"baz\" });\n  v.expectResult({ fun: 'added', id: \"A2\", fields: { foo: \"baz\" } });\n  v.changed(\"A\", \"A1\", { thing: \"stuff\", foo: undefined, baz: undefined });\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { thing: \"stuff\", foo: undefined, baz: undefined } });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n  v.removed(\"A\", \"A2\");\n  v.expectResult({ fun: 'removed', id: \"A2\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - multiple docs removed', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\", baz: \"quux\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\", baz: \"quux\" } });\n  v.expectNoResult();\n\n  v.added(\"A\", \"A2\", { foo: \"baz\" });\n  v.expectResult({ fun: 'added', id: \"A2\", fields: { foo: \"baz\" } });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.removed(\"A\", \"A2\");\n  v.expectResult({ fun: 'removed', id: \"A2\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - complicated sequence', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\", baz: \"quux\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\", baz: \"quux\" } });\n  v.expectNoResult();\n\n  v.added(\"A\", \"A2\", { foo: \"eats\" });\n  v.expectResult({ fun: 'added', id: \"A2\", fields: { foo: \"eats\" } });\n\n  v.added(\"B\", \"A1\", { foo: \"baz\" });\n  v.changed(\"A\", \"A1\", { thing: \"stuff\", foo: undefined, baz: undefined });\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { foo: \"baz\", thing: \"stuff\", baz: undefined } });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.removed(\"A\", \"A2\");\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { thing: undefined } });\n  v.expectResult({ fun: 'removed', id: \"A2\" });\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - added becomes changed', function (test) {\n  var v = newView(test);\n\n  v.added('A', \"A1\", { foo: 'bar' });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: 'bar' } });\n\n  v.added('B', \"A1\", { hi: 'there' });\n  v.expectResult({ fun: 'changed', id: 'A1', changed: { hi: 'there' } });\n\n  v.removed('A', 'A1');\n  v.expectResult({ fun: 'changed', id: 'A1', changed: { foo: undefined } });\n\n  v.removed('B', 'A1');\n  v.expectResult({ fun: 'removed', id: 'A1' });\n});\n\nTinytest.add('livedata - sessionview - weird key names', function (test) {\n  var v = newView(test);\n\n  v.added('A', \"A1\", {});\n  v.expectResult({ fun: 'added', id: \"A1\", fields: {} });\n\n  v.changed('A', \"A1\", { constructor: 'bla' });\n  v.expectResult({ fun: 'changed', id: 'A1', changed: { constructor: 'bla' } });\n});\n\nTinytest.add('livedata - sessionview - clear undefined value', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { field: \"value\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { field: \"value\" } });\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", { field: undefined });\n  v.expectResult({ fun: 'changed', id: 'A1', changed: { field: undefined } });\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", { field: undefined });\n  v.expectNoResult();\n});","ast":null,"map":{"version":3,"sources":["/packages/ddp-server/session_view_tests.js"],"names":[],"mappings":"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","file":"/packages/ddp-server/session_view_tests.js.map","sourcesContent":["var newView = function(test) {\n  var results = [];\n  var view = new DDPServer._SessionCollectionView('test', {\n    added: function (collection, id, fields) {\n      results.push({fun: 'added', id: id, fields: fields});\n    },\n    changed: function (collection, id, changed) {\n      if (_.isEmpty(changed))\n        return;\n      results.push({fun: 'changed', id: id, changed: changed});\n    },\n    removed: function (collection, id) {\n      results.push({fun: 'removed', id: id});\n    }\n  });\n  var v = {\n    view: view,\n    results: results\n  };\n  _.each([\"added\", \"changed\", \"removed\"], function (it) {\n    v[it] = _.bind(view[it], view);\n  });\n  v.expectResult = function (result) {\n    test.equal(results.shift(), result);\n  };\n  v.expectNoResult = function () {\n    test.equal(results, []);\n  };\n  v.drain = function() {\n    var ret = results;\n    results = [];\n    return ret;\n  };\n  return v;\n};\n\nTinytest.add('livedata - sessionview - exists reveal', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", {});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {}});\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", {});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n\n  v.removed(\"B\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - added a second field in another sub', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", {a: \"foo\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {a: \"foo\"}});\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", {a: \"foo\", b: \"bar\"});\n  v.expectResult({fun: 'changed', 'id': \"A1\", changed: {b: \"bar\"}});\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n\n  v.removed(\"B\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\n\nTinytest.add('livedata - sessionview - field reveal', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n  v.added(\"B\",  \"A1\", {foo: \"baz\"});\n  v.removed(\"A\", \"A1\");\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {foo: \"baz\"}});\n  v.expectNoResult();\n  // Somewhere in here we must have changed foo to baz. Legal either on the\n  // added or on the removed, but only once.\n\n  v.removed(\"B\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - field change', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", {foo: \"baz\"}, []);\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {foo: \"baz\"}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - field clear', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", {foo: undefined});\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {foo: undefined}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - change makes a new field', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", {baz:\"quux\"});\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {baz: \"quux\"}});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - add, remove, add', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n});\n\nTinytest.add('livedata - sessionview - field clear reveal', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n\n  v.added(\"B\",  \"A1\", {foo: \"baz\"});\n  v.changed(\"A\", \"A1\", {foo: undefined});\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {foo: \"baz\"}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - change to canonical value produces no change', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n\n  v.added(\"B\",  \"A1\", {foo: \"baz\"});\n  var canon = \"bar\";\n  var maybeResults = v.drain();\n  if (!_.isEmpty(maybeResults)) {\n    // if something happened, it was a change message to baz.\n    // if nothing did, canon is still bar.\n    test.length(maybeResults, 1);\n    test.equal(maybeResults[0], {fun: 'changed', id: \"A1\", changed: {foo: \"baz\"}});\n    canon = \"baz\";\n  }\n  v.changed(\"B\", \"A1\", {foo: canon});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - new field of canonical value produces no change', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n\n  v.added(\"B\",  \"A1\", {});\n\n  v.changed(\"B\", \"A1\", {foo: \"bar\"});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - clear all clears only once', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n  v.added(\"B\",  \"A1\", {foo: \"bar\"});\n  v.added(\"C\",  \"A1\", {foo: \"bar\"});\n  v.changed(\"A\", \"A1\", {foo: undefined});\n  v.changed(\"B\", \"A1\", {foo: undefined});\n  v.changed(\"C\", \"A1\", {foo: undefined});\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {foo: undefined}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - change all changes only once', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n  v.added(\"B\",  \"A1\", {foo: \"bar\"});\n  v.added(\"C\",  \"A1\", {foo: \"bar\"});\n  v.changed(\"B\", \"A1\", {foo: \"baz\"});\n  v.changed(\"A\", \"A1\", {foo: \"baz\"});\n  v.changed(\"C\", \"A1\", {foo: \"baz\"});\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {foo: \"baz\"}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - multiple operations at once in a change', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\", baz: \"quux\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\", baz: \"quux\"}});\n  v.expectNoResult();\n\n\n  v.added(\"B\",  \"A1\", {foo: \"baz\"});\n  v.changed(\"A\", \"A1\", {thing: \"stuff\", foo: undefined, baz: undefined});\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {foo: \"baz\", thing: \"stuff\", baz: undefined}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {thing: undefined}});\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - more than one document', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\", baz: \"quux\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\", baz: \"quux\"}});\n  v.expectNoResult();\n\n\n  v.added(\"A\", \"A2\", {foo: \"baz\"});\n  v.expectResult({fun: 'added', id: \"A2\", fields: {foo: \"baz\"}});\n  v.changed(\"A\", \"A1\", {thing: \"stuff\", foo: undefined, baz: undefined});\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {thing: \"stuff\", foo: undefined, baz: undefined}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n  v.removed(\"A\", \"A2\");\n  v.expectResult({fun: 'removed', id: \"A2\"});\n  v.expectNoResult();\n\n});\n\nTinytest.add('livedata - sessionview - multiple docs removed', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\", baz: \"quux\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\", baz: \"quux\"}});\n  v.expectNoResult();\n\n\n  v.added(\"A\", \"A2\", {foo: \"baz\"});\n  v.expectResult({fun: 'added', id: \"A2\", fields: {foo: \"baz\"}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.removed(\"A\", \"A2\");\n  v.expectResult({fun: 'removed', id: \"A2\"});\n  v.expectNoResult();\n});\n\n\nTinytest.add('livedata - sessionview - complicated sequence', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\", baz: \"quux\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\", baz: \"quux\"}});\n  v.expectNoResult();\n\n  v.added(\"A\", \"A2\", {foo: \"eats\"});\n  v.expectResult({fun: 'added', id: \"A2\", fields: {foo: \"eats\"}});\n\n  v.added(\"B\",  \"A1\", {foo: \"baz\"});\n  v.changed(\"A\", \"A1\", {thing: \"stuff\", foo: undefined, baz: undefined});\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {foo: \"baz\", thing: \"stuff\", baz: undefined}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.removed(\"A\", \"A2\");\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {thing: undefined}});\n  v.expectResult({fun: 'removed', id: \"A2\"});\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - added becomes changed', function (test) {\n  var v = newView(test);\n\n  v.added('A',  \"A1\", {foo: 'bar'});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: 'bar'}});\n\n  v.added('B',  \"A1\", {hi: 'there'});\n  v.expectResult({fun: 'changed', id: 'A1', changed: {hi: 'there'}});\n\n  v.removed('A', 'A1');\n  v.expectResult({fun: 'changed', id: 'A1', changed: {foo: undefined}});\n\n  v.removed('B', 'A1');\n  v.expectResult({fun: 'removed', id: 'A1'});\n});\n\nTinytest.add('livedata - sessionview - weird key names', function (test) {\n  var v = newView(test);\n\n  v.added('A',  \"A1\", {});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {}});\n\n  v.changed('A',  \"A1\", {constructor: 'bla'});\n  v.expectResult({fun: 'changed', id: 'A1', changed: {constructor: 'bla'}});\n});\n\nTinytest.add('livedata - sessionview - clear undefined value', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", {field: \"value\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {field: \"value\"}});\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", {field: undefined});\n  v.expectResult({fun: 'changed', id: 'A1', changed: {field: undefined}});\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", {field: undefined});\n  v.expectNoResult();\n\n});\n"]},"hash":"1136406060d42be3772bb144c04f844b5779fc47"}
