{"metadata":{"modules":{"imports":[{"source":"./definition/builder","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Builder"}]},{"source":"../models/company","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Company"}]}],"exports":{"exported":["CompanyBuilder"],"specifiers":[{"kind":"local","local":"CompanyBuilder","exported":"default"}]}},"usedHelpers":["inherits","class-call-check","interop-require-default"]},"ignored":false,"code":"exports.__esModule = true;\n\nvar _definitionBuilder = require('./definition/builder');\n\nvar _definitionBuilder2 = babelHelpers.interopRequireDefault(_definitionBuilder);\n\nvar _modelsCompany = require('../models/company');\n\nvar _modelsCompany2 = babelHelpers.interopRequireDefault(_modelsCompany);\n\n/**\n * The Company Builder allows you to lazily build\n * companies.\n *\n * @type {Builder}\n */\n\nvar CompanyBuilder = (function (_Builder) {\n  babelHelpers.inherits(CompanyBuilder, _Builder);\n\n  function CompanyBuilder() {\n    babelHelpers.classCallCheck(this, CompanyBuilder);\n\n    _Builder.call(this);\n\n    this.options = {};\n    this.options.name = 'Default Name';\n    this.options.capital = 10000000;\n    this.options.industry = {}; // TODO a real default\n    this.options.goal = {}; // TODO a real default\n    this.options.marketPenetration = 0.001;\n    this.options.numberOfFactories = 1;\n    this.options.averageFactoryEfficiency = 0.8;\n    this.options.programCosts = 0;\n    this.options.companySatisfaction = 0.5;\n    this.options.customerSatisfaction = 0.5;\n  }\n\n  CompanyBuilder.prototype.setName = (function () {\n    function setName(name) {\n      this.options.name = name;\n    }\n\n    return setName;\n  })();\n\n  CompanyBuilder.prototype.setCapital = (function () {\n    function setCapital(capital) {\n      this.options.capital = capital;\n    }\n\n    return setCapital;\n  })();\n\n  CompanyBuilder.prototype.setIndustry = (function () {\n    function setIndustry(industry) {\n      // TODO check typeof industry\n      this.options.industry = industry;\n    }\n\n    return setIndustry;\n  })();\n\n  CompanyBuilder.prototype.setGoal = (function () {\n    function setGoal(goal) {\n      // TODO check typeof goal\n      this.options.goal = goal;\n    }\n\n    return setGoal;\n  })();\n\n  CompanyBuilder.prototype.setMarketPenetration = (function () {\n    function setMarketPenetration(marketPenetration) {\n      this.options.marketPenetration = marketPenetration;\n    }\n\n    return setMarketPenetration;\n  })();\n\n  CompanyBuilder.prototype.setNumberOfFactories = (function () {\n    function setNumberOfFactories(numberOfFactories) {\n      this.options.numberOfFactories = numberOfFactories;\n    }\n\n    return setNumberOfFactories;\n  })();\n\n  CompanyBuilder.prototype.setAverageFactoryEfficiency = (function () {\n    function setAverageFactoryEfficiency(averageFactoryEfficiency) {\n      this.options.averageFactoryEfficiency = averageFactoryEfficiency;\n    }\n\n    return setAverageFactoryEfficiency;\n  })();\n\n  CompanyBuilder.prototype.setProgramCosts = (function () {\n    function setProgramCosts(programCosts) {\n      this.options.programCosts = programCosts;\n    }\n\n    return setProgramCosts;\n  })();\n\n  CompanyBuilder.prototype.setCompanySatisfaction = (function () {\n    function setCompanySatisfaction(companySatisfaction) {\n      this.options.companySatisfaction = companySatisfaction;\n    }\n\n    return setCompanySatisfaction;\n  })();\n\n  CompanyBuilder.prototype.setCustomerSatisfaction = (function () {\n    function setCustomerSatisfaction(customerSatisfaction) {\n      this.options.customerSatisfaction = customerSatisfaction;\n    }\n\n    return setCustomerSatisfaction;\n  })();\n\n  /**\n   * @override\n   * @return {Company}\n   */\n\n  CompanyBuilder.prototype.build = (function () {\n    function build() {\n      return new _modelsCompany2['default'](this.options);\n    }\n\n    return build;\n  })();\n\n  return CompanyBuilder;\n})(_definitionBuilder2['default']);\n\nexports['default'] = CompanyBuilder;\nmodule.exports = exports['default'];","ast":null,"map":{"version":3,"sources":["/client/builders/company-builder.js"],"names":[],"mappings":";;iCAAmC,sBAAsB;;;;6BACtB,mBAAmB;;;;;;;;;;;IAQjC,cAAc;wBAAd,cAAc;;AACtB,WADQ,cAAc,GACnB;sCADK,cAAc;;AAE/B,uBAAO,CAAC;;AAER,QAAI,CAAC,OAAO,GAAG,EAAE,CAAC;AAClB,QAAI,CAAC,OAAO,CAAC,IAAI,GAAG,cAAc,CAAC;AACnC,QAAI,CAAC,OAAO,CAAC,OAAO,GAAG,QAAQ,CAAC;AAChC,QAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,EAAE,CAAC;AAC3B,QAAI,CAAC,OAAO,CAAC,IAAI,GAAG,EAAE,CAAC;AACvB,QAAI,CAAC,OAAO,CAAC,iBAAiB,GAAG,KAAK,CAAC;AACvC,QAAI,CAAC,OAAO,CAAC,iBAAiB,GAAG,CAAC,CAAC;AACnC,QAAI,CAAC,OAAO,CAAC,wBAAwB,GAAG,GAAG,CAAC;AAC5C,QAAI,CAAC,OAAO,CAAC,YAAY,GAAG,CAAC,CAAC;AAC9B,QAAI,CAAC,OAAO,CAAC,mBAAmB,GAAG,GAAG,CAAC;AACvC,QAAI,CAAC,OAAO,CAAC,oBAAoB,GAAG,GAAG,CAAC;GACzC;;AAfkB,gBAAc,WAiBjC,OAAO;AAAA,qBAAC,IAAI,EAAE;AACZ,UAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;KAC1B;;;;;AAnBkB,gBAAc,WAqBjC,UAAU;AAAA,wBAAC,OAAO,EAAE;AAClB,UAAI,CAAC,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC;KAChC;;;;;AAvBkB,gBAAc,WAyBjC,WAAW;AAAA,yBAAE,QAAQ,EAAG;;AAEtB,UAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAClC;;;;;AA5BkB,gBAAc,WA8BjC,OAAO;AAAA,qBAAE,IAAI,EAAG;;AAEd,UAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;KAC1B;;;;;AAjCkB,gBAAc,WAmCjC,oBAAoB;AAAA,kCAAE,iBAAiB,EAAG;AACxC,UAAI,CAAC,OAAO,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;KACpD;;;;;AArCkB,gBAAc,WAuCjC,oBAAoB;AAAA,kCAAE,iBAAiB,EAAG;AACxC,UAAI,CAAC,OAAO,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;KACpD;;;;;AAzCkB,gBAAc,WA2CjC,2BAA2B;AAAA,yCAAE,wBAAwB,EAAG;AACtD,UAAI,CAAC,OAAO,CAAC,wBAAwB,GAAG,wBAAwB,CAAC;KAClE;;;;;AA7CkB,gBAAc,WA+CjC,eAAe;AAAA,6BAAE,YAAY,EAAG;AAC9B,UAAI,CAAC,OAAO,CAAC,YAAY,GAAG,YAAY,CAAC;KAC1C;;;;;AAjDkB,gBAAc,WAmDjC,sBAAsB;AAAA,oCAAE,mBAAmB,EAAG;AAC5C,UAAI,CAAC,OAAO,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;KACxD;;;;;AArDkB,gBAAc,WAuDjC,uBAAuB;AAAA,qCAAE,oBAAoB,EAAG;AAC9C,UAAI,CAAC,OAAO,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;KAC1D;;;;;;;;;;AAzDkB,gBAAc,WA+DjC,KAAK;AAAA,qBAAG;AACN,aAAO,+BAAY,IAAI,CAAC,OAAO,CAAC,CAAC;KAClC;;;;;SAjEkB,cAAc;;;qBAAd,cAAc","file":"/client/builders/company-builder.js.map","sourcesContent":["import { default as Builder } from './definition/builder';\nimport { default as Company } from '../models/company';\n\n/**\n * The Company Builder allows you to lazily build\n * companies.\n *\n * @type {Builder}\n */\nexport default class CompanyBuilder extends Builder {\n  constructor() {\n    super();\n\n    this.options = {};\n    this.options.name = 'Default Name';\n    this.options.capital = 10000000;\n    this.options.industry = {}; // TODO a real default\n    this.options.goal = {}; // TODO a real default\n    this.options.marketPenetration = 0.001;\n    this.options.numberOfFactories = 1;\n    this.options.averageFactoryEfficiency = 0.8;\n    this.options.programCosts = 0;\n    this.options.companySatisfaction = 0.5;\n    this.options.customerSatisfaction = 0.5;\n  }\n\n  setName(name) {\n    this.options.name = name;\n  }\n\n  setCapital(capital) {\n    this.options.capital = capital;\n  }\n\n  setIndustry( industry ) {\n    // TODO check typeof industry\n    this.options.industry = industry;\n  }\n\n  setGoal( goal ) {\n    // TODO check typeof goal\n    this.options.goal = goal;\n  }\n\n  setMarketPenetration( marketPenetration ) {\n    this.options.marketPenetration = marketPenetration;\n  }\n\n  setNumberOfFactories( numberOfFactories ) {\n    this.options.numberOfFactories = numberOfFactories;\n  }\n\n  setAverageFactoryEfficiency( averageFactoryEfficiency ) {\n    this.options.averageFactoryEfficiency = averageFactoryEfficiency;\n  }\n\n  setProgramCosts( programCosts ) {\n    this.options.programCosts = programCosts;\n  }\n\n  setCompanySatisfaction( companySatisfaction ) {\n    this.options.companySatisfaction = companySatisfaction;\n  }\n\n  setCustomerSatisfaction( customerSatisfaction ) {\n    this.options.customerSatisfaction = customerSatisfaction;\n  }\n\n  /**\n   * @override\n   * @return {Company}\n   */\n  build() {\n    return new Company(this.options);\n  }\n}\n"]},"hash":"8964ff5221893662d6b95fa8c11fe76a2af443bf"}
