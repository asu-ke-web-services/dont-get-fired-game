{"metadata":{"modules":{"imports":[{"source":"./definition/rule","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Rule"}]}],"exports":{"exported":["QuarterCostsRule"],"specifiers":[{"kind":"local","local":"QuarterCostsRule","exported":"default"}]}},"usedHelpers":["inherits","class-call-check","interop-require-default"]},"ignored":false,"code":"exports.__esModule = true;\n\nvar _definitionRule = require('./definition/rule');\n\nvar _definitionRule2 = babelHelpers.interopRequireDefault(_definitionRule);\n\n/**\n * Calculates the total costs for the company\n */\n\nvar QuarterCostsRule = (function (_Rule) {\n  babelHelpers.inherits(QuarterCostsRule, _Rule);\n\n  function QuarterCostsRule() {\n    babelHelpers.classCallCheck(this, QuarterCostsRule);\n\n    _Rule.apply(this, arguments);\n  }\n\n  QuarterCostsRule.prototype.calculate = (function () {\n    function calculate(costPerFactory, numberOfFactories, averageFactoryEfficiency, materialCosts, programCosts) {\n      var factoryCost = costPerFactory * numberOfFactories;\n      var factoryMaterialCosts = 1.0 / Number(averageFactoryEfficiency) * materialCosts;\n\n      return factoryCost + factoryMaterialCosts + programCosts;\n    }\n\n    return calculate;\n  })();\n\n  return QuarterCostsRule;\n})(_definitionRule2['default']);\n\nexports['default'] = QuarterCostsRule;\nmodule.exports = exports['default'];","ast":null,"map":{"version":3,"sources":["/client/rules/quarter-costs-rule.js"],"names":[],"mappings":";;8BAAiB,mBAAmB;;;;;;;;IAKf,gBAAgB;wBAAhB,gBAAgB;;WAAhB,gBAAgB;sCAAhB,gBAAgB;;;;;AAAhB,kBAAgB,WACnC,SAAS;AAAA,uBACL,cAAc,EACd,iBAAiB,EACjB,wBAAwB,EACxB,aAAa,EACb,YAAY,EACd;AACA,UAAI,WAAW,GAAG,cAAc,GAAG,iBAAiB,CAAC;AACrD,UAAI,oBAAoB,GAAG,AAAC,GAAG,GAAG,MAAM,CAAC,wBAAwB,CAAC,GAAI,aAAa,CAAC;;AAEpF,aAAO,WAAW,GAAG,oBAAoB,GAAG,YAAY,CAAC;KAC1D;;;;;SAZkB,gBAAgB;;;qBAAhB,gBAAgB","file":"/client/rules/quarter-costs-rule.js.map","sourcesContent":["import Rule from './definition/rule';\n\n/**\n * Calculates the total costs for the company\n */\nexport default class QuarterCostsRule extends Rule {\n  calculate(\n      costPerFactory,\n      numberOfFactories,\n      averageFactoryEfficiency,\n      materialCosts,\n      programCosts\n  ) {\n    var factoryCost = costPerFactory * numberOfFactories;\n    var factoryMaterialCosts = (1.0 / Number(averageFactoryEfficiency)) * materialCosts;\n\n    return factoryCost + factoryMaterialCosts + programCosts;\n  }\n}\n"]},"hash":"b4aab89943bc12a75abb25753a065454eb487197"}
