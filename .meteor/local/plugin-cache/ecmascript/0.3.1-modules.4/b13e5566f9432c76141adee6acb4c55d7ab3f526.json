{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"// This is a magic collection that fails its writes on the server when\n// the selector (or inserted document) contains fail: true.\n\nvar TRANSFORMS = {};\n\n// We keep track of the collections, so we can refer to them by name\nvar COLLECTIONS = {};\n\nif (Meteor.isServer) {\n  Meteor.methods({\n    createInsecureCollection: function (name, options) {\n      check(name, String);\n      check(options, Match.Optional({\n        transformName: Match.Optional(String),\n        idGeneration: Match.Optional(String)\n      }));\n\n      if (options && options.transformName) {\n        options.transform = TRANSFORMS[options.transformName];\n      }\n      var c = new Mongo.Collection(name, options);\n      COLLECTIONS[name] = c;\n      c._insecure = true;\n      Meteor.publish('c-' + name, function () {\n        return c.find();\n      });\n    },\n    dropInsecureCollection: function (name) {\n      var c = COLLECTIONS[name];\n      c._dropCollection();\n    }\n  });\n}\n\n// We store the generated id, keyed by collection, for each insert\n// This is so we can test the stub and the server generate the same id\nvar INSERTED_IDS = {};\n\nMeteor.methods({\n  insertObjects: function (collectionName, doc, count) {\n    var c = COLLECTIONS[collectionName];\n    var ids = [];\n    for (var i = 0; i < count; i++) {\n      var id = c.insert(doc);\n      INSERTED_IDS[collectionName] = (INSERTED_IDS[collectionName] || []).concat([id]);\n      ids.push(id);\n    }\n    return ids;\n  },\n  upsertObject: function (collectionName, selector, modifier) {\n    var c = COLLECTIONS[collectionName];\n    return c.upsert(selector, modifier);\n  },\n  doMeteorCall: function (name /*, arguments */) {\n    var args = Array.prototype.slice.call(arguments);\n\n    return Meteor.call.apply(null, args);\n  }\n});\n\nvar runInFence = function (f) {\n  if (Meteor.isClient) {\n    f();\n  } else {\n    var fence = new DDPServer._WriteFence();\n    DDPServer._CurrentWriteFence.withValue(fence, f);\n    fence.armAndWait();\n  }\n};\n\n// Helpers for upsert tests\n\nvar stripId = function (obj) {\n  delete obj._id;\n};\n\nvar compareResults = function (test, skipIds, actual, expected) {\n  if (skipIds) {\n    _.map(actual, stripId);\n    _.map(expected, stripId);\n  }\n  // (technically should ignore order in comparison)\n  test.equal(actual, expected);\n};\n\nvar upsert = function (coll, useUpdate, query, mod, options, callback) {\n  if (!callback && typeof options === \"function\") {\n    callback = options;\n    options = {};\n  }\n\n  if (useUpdate) {\n    if (callback) return coll.update(query, mod, _.extend({ upsert: true }, options), function (err, result) {\n      callback(err, !err && {\n        numberAffected: result\n      });\n    });\n    return {\n      numberAffected: coll.update(query, mod, _.extend({ upsert: true }, options))\n    };\n  } else {\n    return coll.upsert(query, mod, options, callback);\n  }\n};\n\nvar upsertTestMethod = \"livedata_upsert_test_method\";\nvar upsertTestMethodColl;\n\n// This is the implementation of the upsert test method on both the client and\n// the server. On the client, we get a test object. On the server, we just throw\n// errors if something doesn't go according to plan, and when the client\n// receives those errors it will cause the test to fail.\n//\n// Client-side exceptions in here will NOT cause the test to fail! Because it's\n// a stub, those exceptions will get caught and logged.\nvar upsertTestMethodImpl = function (coll, useUpdate, test) {\n  coll.remove({});\n  var result1 = upsert(coll, useUpdate, { foo: \"bar\" }, { foo: \"bar\" });\n\n  if (!test) {\n    test = {\n      equal: function (a, b) {\n        if (!EJSON.equals(a, b)) throw new Error(\"Not equal: \" + JSON.stringify(a) + \", \" + JSON.stringify(b));\n      },\n      isTrue: function (a) {\n        if (!a) throw new Error(\"Not truthy: \" + JSON.stringify(a));\n      },\n      isFalse: function (a) {\n        if (a) throw new Error(\"Not falsey: \" + JSON.stringify(a));\n      }\n    };\n  }\n\n  // if we don't test this, then testing result1.numberAffected will throw,\n  // which will get caught and logged and the whole test will pass!\n  test.isTrue(result1);\n\n  test.equal(result1.numberAffected, 1);\n  if (!useUpdate) test.isTrue(result1.insertedId);\n  var fooId = result1.insertedId;\n  var obj = coll.findOne({ foo: \"bar\" });\n  test.isTrue(obj);\n  if (!useUpdate) test.equal(obj._id, result1.insertedId);\n  var result2 = upsert(coll, useUpdate, { _id: fooId }, { $set: { foo: \"baz \" } });\n  test.isTrue(result2);\n  test.equal(result2.numberAffected, 1);\n  test.isFalse(result2.insertedId);\n};\n\nif (Meteor.isServer) {\n  var m = {};\n  m[upsertTestMethod] = function (run, useUpdate, options) {\n    check(run, String);\n    check(useUpdate, Boolean);\n    upsertTestMethodColl = new Mongo.Collection(upsertTestMethod + \"_collection_\" + run, options);\n    upsertTestMethodImpl(upsertTestMethodColl, useUpdate);\n  };\n  Meteor.methods(m);\n}\n\nMeteor._FailureTestCollection = new Mongo.Collection(\"___meteor_failure_test_collection\");\n\n// For test \"document with a custom type\"\nvar Dog = function (name, color, actions) {\n  var self = this;\n  self.color = color;\n  self.name = name;\n  self.actions = actions || [{ name: \"wag\" }, { name: \"swim\" }];\n};\n_.extend(Dog.prototype, {\n  getName: function () {\n    return this.name;\n  },\n  getColor: function () {\n    return this.name;\n  },\n  equals: function (other) {\n    return other.name === this.name && other.color === this.color && EJSON.equals(other.actions, this.actions);\n  },\n  toJSONValue: function () {\n    return { color: this.color, name: this.name, actions: this.actions };\n  },\n  typeName: function () {\n    return \"dog\";\n  },\n  clone: function () {\n    return new Dog(this.name, this.color);\n  },\n  speak: function () {\n    return \"woof\";\n  }\n});\nEJSON.addType(\"dog\", function (o) {\n  return new Dog(o.name, o.color, o.actions);\n});\n\n// Parameterize tests.\n_.each(['STRING', 'MONGO'], function (idGeneration) {\n\n  var collectionOptions = { idGeneration: idGeneration };\n\n  testAsyncMulti(\"mongo-livedata - database error reporting. \" + idGeneration, [function (test, expect) {\n    var ftc = Meteor._FailureTestCollection;\n\n    var exception = function (err, res) {\n      test.instanceOf(err, Error);\n    };\n\n    _.each([\"insert\", \"remove\", \"update\"], function (op) {\n      var arg = op === \"insert\" ? {} : 'bla';\n      var arg2 = {};\n\n      var callOp = function (callback) {\n        if (op === \"update\") {\n          ftc[op](arg, arg2, callback);\n        } else {\n          ftc[op](arg, callback);\n        }\n      };\n\n      if (Meteor.isServer) {\n        test.throws(function () {\n          callOp();\n        });\n\n        callOp(expect(exception));\n      }\n\n      if (Meteor.isClient) {\n        callOp(expect(exception));\n\n        // This would log to console in normal operation.\n        Meteor._suppress_log(1);\n        callOp();\n      }\n    });\n  }]);\n\n  Tinytest.addAsync(\"mongo-livedata - basics, \" + idGeneration, function (test, onComplete) {\n    var run = test.runId();\n    var coll, coll2;\n    if (Meteor.isClient) {\n      coll = new Mongo.Collection(null, collectionOptions); // local, unmanaged\n      coll2 = new Mongo.Collection(null, collectionOptions); // local, unmanaged\n    } else {\n        coll = new Mongo.Collection(\"livedata_test_collection_\" + run, collectionOptions);\n        coll2 = new Mongo.Collection(\"livedata_test_collection_2_\" + run, collectionOptions);\n      }\n\n    var log = '';\n    var obs = coll.find({ run: run }, { sort: [\"x\"] }).observe({\n      addedAt: function (doc, before_index, before) {\n        log += 'a(' + doc.x + ',' + before_index + ',' + before + ')';\n      },\n      changedAt: function (new_doc, old_doc, at_index) {\n        log += 'c(' + new_doc.x + ',' + at_index + ',' + old_doc.x + ')';\n      },\n      movedTo: function (doc, old_index, new_index) {\n        log += 'm(' + doc.x + ',' + old_index + ',' + new_index + ')';\n      },\n      removedAt: function (doc, at_index) {\n        log += 'r(' + doc.x + ',' + at_index + ')';\n      }\n    });\n\n    var captureObserve = function (f) {\n      if (Meteor.isClient) {\n        f();\n      } else {\n        var fence = new DDPServer._WriteFence();\n        DDPServer._CurrentWriteFence.withValue(fence, f);\n        fence.armAndWait();\n      }\n\n      var ret = log;\n      log = '';\n      return ret;\n    };\n\n    var expectObserve = function (expected, f) {\n      if (!(expected instanceof Array)) expected = [expected];\n\n      test.include(expected, captureObserve(f));\n    };\n\n    test.equal(coll.find({ run: run }).count(), 0);\n    test.equal(coll.findOne(\"abc\"), undefined);\n    test.equal(coll.findOne({ run: run }), undefined);\n\n    expectObserve('a(1,0,null)', function () {\n      var id = coll.insert({ run: run, x: 1 });\n      test.equal(coll.find({ run: run }).count(), 1);\n      test.equal(coll.findOne(id).x, 1);\n      test.equal(coll.findOne({ run: run }).x, 1);\n    });\n\n    expectObserve('a(4,1,null)', function () {\n      var id2 = coll.insert({ run: run, x: 4 });\n      test.equal(coll.find({ run: run }).count(), 2);\n      test.equal(coll.find({ _id: id2 }).count(), 1);\n      test.equal(coll.findOne(id2).x, 4);\n    });\n\n    test.equal(coll.findOne({ run: run }, { sort: [\"x\"], skip: 0 }).x, 1);\n    test.equal(coll.findOne({ run: run }, { sort: [\"x\"], skip: 1 }).x, 4);\n    test.equal(coll.findOne({ run: run }, { sort: { x: -1 }, skip: 0 }).x, 4);\n    test.equal(coll.findOne({ run: run }, { sort: { x: -1 }, skip: 1 }).x, 1);\n\n    var cur = coll.find({ run: run }, { sort: [\"x\"] });\n    var total = 0;\n    var index = 0;\n    var context = {};\n    cur.forEach(function (doc, i, cursor) {\n      test.equal(i, index++);\n      test.isTrue(cursor === cur);\n      test.isTrue(context === this);\n      total *= 10;\n      if (Meteor.isServer) {\n        // Verify that the callbacks from forEach run sequentially and that\n        // forEach waits for them to complete (issue# 321). If they do not run\n        // sequentially, then the second callback could execute during the first\n        // callback's sleep sleep and the *= 10 will occur before the += 1, then\n        // total (at test.equal time) will be 5. If forEach does not wait for the\n        // callbacks to complete, then total (at test.equal time) will be 0.\n        Meteor._sleepForMs(5);\n      }\n      total += doc.x;\n      // verify the meteor environment is set up here\n      coll2.insert({ total: total });\n    }, context);\n    test.equal(total, 14);\n\n    index = 0;\n    test.equal(cur.map(function (doc, i, cursor) {\n      // XXX we could theoretically make map run its iterations in parallel or\n      // something which would make this fail\n      test.equal(i, index++);\n      test.isTrue(cursor === cur);\n      test.isTrue(context === this);\n      return doc.x * 2;\n    }, context), [2, 8]);\n\n    test.equal(_.pluck(coll.find({ run: run }, { sort: { x: -1 } }).fetch(), \"x\"), [4, 1]);\n\n    expectObserve('', function () {\n      var count = coll.update({ run: run, x: -1 }, { $inc: { x: 2 } }, { multi: true });\n      test.equal(count, 0);\n    });\n\n    expectObserve('c(3,0,1)c(6,1,4)', function () {\n      var count = coll.update({ run: run }, { $inc: { x: 2 } }, { multi: true });\n      test.equal(count, 2);\n      test.equal(_.pluck(coll.find({ run: run }, { sort: { x: -1 } }).fetch(), \"x\"), [6, 3]);\n    });\n\n    expectObserve(['c(13,0,3)m(13,0,1)', 'm(6,1,0)c(13,1,3)', 'c(13,0,3)m(6,1,0)', 'm(3,0,1)c(13,1,3)'], function () {\n      coll.update({ run: run, x: 3 }, { $inc: { x: 10 } }, { multi: true });\n      test.equal(_.pluck(coll.find({ run: run }, { sort: { x: -1 } }).fetch(), \"x\"), [13, 6]);\n    });\n\n    expectObserve('r(13,1)', function () {\n      var count = coll.remove({ run: run, x: { $gt: 10 } });\n      test.equal(count, 1);\n      test.equal(coll.find({ run: run }).count(), 1);\n    });\n\n    expectObserve('r(6,0)', function () {\n      coll.remove({ run: run });\n      test.equal(coll.find({ run: run }).count(), 0);\n    });\n\n    expectObserve('', function () {\n      var count = coll.remove({ run: run });\n      test.equal(count, 0);\n      test.equal(coll.find({ run: run }).count(), 0);\n    });\n\n    obs.stop();\n    onComplete();\n  });\n\n  Tinytest.addAsync(\"mongo-livedata - fuzz test, \" + idGeneration, function (test, onComplete) {\n\n    var run = Random.id();\n    var coll;\n    if (Meteor.isClient) {\n      coll = new Mongo.Collection(null, collectionOptions); // local, unmanaged\n    } else {\n        coll = new Mongo.Collection(\"livedata_test_collection_\" + run, collectionOptions);\n      }\n\n    // fuzz test of observe(), especially the server-side diffing\n    var actual = [];\n    var correct = [];\n    var counters = { add: 0, change: 0, move: 0, remove: 0 };\n\n    var obs = coll.find({ run: run }, { sort: [\"x\"] }).observe({\n      addedAt: function (doc, before_index) {\n        counters.add++;\n        actual.splice(before_index, 0, doc.x);\n      },\n      changedAt: function (new_doc, old_doc, at_index) {\n        counters.change++;\n        test.equal(actual[at_index], old_doc.x);\n        actual[at_index] = new_doc.x;\n      },\n      movedTo: function (doc, old_index, new_index) {\n        counters.move++;\n        test.equal(actual[old_index], doc.x);\n        actual.splice(old_index, 1);\n        actual.splice(new_index, 0, doc.x);\n      },\n      removedAt: function (doc, at_index) {\n        counters.remove++;\n        test.equal(actual[at_index], doc.x);\n        actual.splice(at_index, 1);\n      }\n    });\n\n    if (Meteor.isServer) {\n      // For now, has to be polling (not oplog) because it is ordered observe.\n      test.isTrue(obs._multiplexer._observeDriver._suspendPolling);\n    }\n\n    var step = 0;\n\n    // Use non-deterministic randomness so we can have a shorter fuzz\n    // test (fewer iterations).  For deterministic (fully seeded)\n    // randomness, remove the call to Random.fraction().\n    var seededRandom = new SeededRandom(\"foobard\" + Random.fraction());\n    // Random integer in [0,n)\n    var rnd = function (n) {\n      return seededRandom.nextIntBetween(0, n - 1);\n    };\n\n    var finishObserve = function (f) {\n      if (Meteor.isClient) {\n        f();\n      } else {\n        var fence = new DDPServer._WriteFence();\n        DDPServer._CurrentWriteFence.withValue(fence, f);\n        fence.armAndWait();\n      }\n    };\n\n    var doStep = function () {\n      if (step++ === 5) {\n        // run N random tests\n        obs.stop();\n        onComplete();\n        return;\n      }\n\n      var max_counters = _.clone(counters);\n\n      finishObserve(function () {\n        if (Meteor.isServer) obs._multiplexer._observeDriver._suspendPolling();\n\n        // Do a batch of 1-10 operations\n        var batch_count = rnd(10) + 1;\n        for (var i = 0; i < batch_count; i++) {\n          // 25% add, 25% remove, 25% change in place, 25% change and move\n          var op = rnd(4);\n          var which = rnd(correct.length);\n          if (op === 0 || step < 2 || !correct.length) {\n            // Add\n            var x = rnd(1000000);\n            coll.insert({ run: run, x: x });\n            correct.push(x);\n            max_counters.add++;\n          } else if (op === 1 || op === 2) {\n            var x = correct[which];\n            if (op === 1)\n              // Small change, not likely to cause a move\n              var val = x + (rnd(2) ? -1 : 1);else\n              // Large change, likely to cause a move\n              var val = rnd(1000000);\n            coll.update({ run: run, x: x }, { $set: { x: val } });\n            correct[which] = val;\n            max_counters.change++;\n            max_counters.move++;\n          } else {\n            coll.remove({ run: run, x: correct[which] });\n            correct.splice(which, 1);\n            max_counters.remove++;\n          }\n        }\n        if (Meteor.isServer) obs._multiplexer._observeDriver._resumePolling();\n      });\n\n      // Did we actually deliver messages that mutated the array in the\n      // right way?\n      correct.sort(function (a, b) {\n        return a - b;\n      });\n      test.equal(actual, correct);\n\n      // Did we limit ourselves to one 'moved' message per change,\n      // rather than O(results) moved messages?\n      _.each(max_counters, function (v, k) {\n        test.isTrue(max_counters[k] >= counters[k], k);\n      });\n\n      Meteor.defer(doStep);\n    };\n\n    doStep();\n  });\n\n  Tinytest.addAsync(\"mongo-livedata - scribbling, \" + idGeneration, function (test, onComplete) {\n    var run = test.runId();\n    var coll;\n    if (Meteor.isClient) {\n      coll = new Mongo.Collection(null, collectionOptions); // local, unmanaged\n    } else {\n        coll = new Mongo.Collection(\"livedata_test_collection_\" + run, collectionOptions);\n      }\n\n    var numAddeds = 0;\n    var handle = coll.find({ run: run }).observe({\n      addedAt: function (o) {\n        // test that we can scribble on the object we get back from Mongo without\n        // breaking anything.  The worst possible scribble is messing with _id.\n        delete o._id;\n        numAddeds++;\n      }\n    });\n    _.each([123, 456, 789], function (abc) {\n      runInFence(function () {\n        coll.insert({ run: run, abc: abc });\n      });\n    });\n    handle.stop();\n    // will be 6 (1+2+3) if we broke diffing!\n    test.equal(numAddeds, 3);\n\n    onComplete();\n  });\n\n  Tinytest.addAsync(\"mongo-livedata - stop handle in callback, \" + idGeneration, function (test, onComplete) {\n    var run = Random.id();\n    var coll;\n    if (Meteor.isClient) {\n      coll = new Mongo.Collection(null, collectionOptions); // local, unmanaged\n    } else {\n        coll = new Mongo.Collection(\"stopHandleInCallback-\" + run, collectionOptions);\n      }\n\n    var output = [];\n\n    var handle = coll.find().observe({\n      added: function (doc) {\n        output.push({ added: doc._id });\n      },\n      changed: function (newDoc) {\n        output.push('changed');\n        handle.stop();\n      }\n    });\n\n    test.equal(output, []);\n\n    // Insert a document. Observe that the added callback is called.\n    var docId;\n    runInFence(function () {\n      docId = coll.insert({ foo: 42 });\n    });\n    test.length(output, 1);\n    test.equal(output.shift(), { added: docId });\n\n    // Update it. Observe that the changed callback is called. This should also\n    // stop the observation.\n    runInFence(function () {\n      coll.update(docId, { $set: { bar: 10 } });\n    });\n    test.length(output, 1);\n    test.equal(output.shift(), 'changed');\n\n    // Update again. This shouldn't call the callback because we stopped the\n    // observation.\n    runInFence(function () {\n      coll.update(docId, { $set: { baz: 40 } });\n    });\n    test.length(output, 0);\n\n    test.equal(coll.find().count(), 1);\n    test.equal(coll.findOne(docId), { _id: docId, foo: 42, bar: 10, baz: 40 });\n\n    onComplete();\n  });\n\n  // This behavior isn't great, but it beats deadlock.\n  if (Meteor.isServer) {\n    Tinytest.addAsync(\"mongo-livedata - recursive observe throws, \" + idGeneration, function (test, onComplete) {\n      var run = test.runId();\n      var coll = new Mongo.Collection(\"observeInCallback-\" + run, collectionOptions);\n\n      var callbackCalled = false;\n      var handle = coll.find({}).observe({\n        added: function (newDoc) {\n          callbackCalled = true;\n          test.throws(function () {\n            coll.find({}).observe();\n          });\n        }\n      });\n      test.isFalse(callbackCalled);\n      // Insert a document. Observe that the added callback is called.\n      runInFence(function () {\n        coll.insert({ foo: 42 });\n      });\n      test.isTrue(callbackCalled);\n\n      handle.stop();\n\n      onComplete();\n    });\n\n    Tinytest.addAsync(\"mongo-livedata - cursor dedup, \" + idGeneration, function (test, onComplete) {\n      var run = test.runId();\n      var coll = new Mongo.Collection(\"cursorDedup-\" + run, collectionOptions);\n\n      var observer = function (noAdded) {\n        var output = [];\n        var callbacks = {\n          changed: function (newDoc) {\n            output.push({ changed: newDoc._id });\n          }\n        };\n        if (!noAdded) {\n          callbacks.added = function (doc) {\n            output.push({ added: doc._id });\n          };\n        }\n        var handle = coll.find({ foo: 22 }).observe(callbacks);\n        return { output: output, handle: handle };\n      };\n\n      // Insert a doc and start observing.\n      var docId1 = coll.insert({ foo: 22 });\n      var o1 = observer();\n      // Initial add.\n      test.length(o1.output, 1);\n      test.equal(o1.output.shift(), { added: docId1 });\n\n      // Insert another doc (blocking until observes have fired).\n      var docId2;\n      runInFence(function () {\n        docId2 = coll.insert({ foo: 22, bar: 5 });\n      });\n      // Observed add.\n      test.length(o1.output, 1);\n      test.equal(o1.output.shift(), { added: docId2 });\n\n      // Second identical observe.\n      var o2 = observer();\n      // Initial adds.\n      test.length(o2.output, 2);\n      test.include([docId1, docId2], o2.output[0].added);\n      test.include([docId1, docId2], o2.output[1].added);\n      test.notEqual(o2.output[0].added, o2.output[1].added);\n      o2.output.length = 0;\n      // Original observe not affected.\n      test.length(o1.output, 0);\n\n      // White-box test: both observes should share an ObserveMultiplexer.\n      var observeMultiplexer = o1.handle._multiplexer;\n      test.isTrue(observeMultiplexer);\n      test.isTrue(observeMultiplexer === o2.handle._multiplexer);\n\n      // Update. Both observes fire.\n      runInFence(function () {\n        coll.update(docId1, { $set: { x: 'y' } });\n      });\n      test.length(o1.output, 1);\n      test.length(o2.output, 1);\n      test.equal(o1.output.shift(), { changed: docId1 });\n      test.equal(o2.output.shift(), { changed: docId1 });\n\n      // Stop first handle. Second handle still around.\n      o1.handle.stop();\n      test.length(o1.output, 0);\n      test.length(o2.output, 0);\n\n      // Another update. Just the second handle should fire.\n      runInFence(function () {\n        coll.update(docId2, { $set: { z: 'y' } });\n      });\n      test.length(o1.output, 0);\n      test.length(o2.output, 1);\n      test.equal(o2.output.shift(), { changed: docId2 });\n\n      // Stop second handle. Nothing should happen, but the multiplexer should\n      // be stopped.\n      test.isTrue(observeMultiplexer._handles); // This will change.\n      o2.handle.stop();\n      test.length(o1.output, 0);\n      test.length(o2.output, 0);\n      // White-box: ObserveMultiplexer has nulled its _handles so you can't\n      // accidentally join to it.\n      test.isNull(observeMultiplexer._handles);\n\n      // Start yet another handle on the same query.\n      var o3 = observer();\n      // Initial adds.\n      test.length(o3.output, 2);\n      test.include([docId1, docId2], o3.output[0].added);\n      test.include([docId1, docId2], o3.output[1].added);\n      test.notEqual(o3.output[0].added, o3.output[1].added);\n      // Old observers not called.\n      test.length(o1.output, 0);\n      test.length(o2.output, 0);\n      // White-box: Different ObserveMultiplexer.\n      test.isTrue(observeMultiplexer !== o3.handle._multiplexer);\n\n      // Start another handle with no added callback. Regression test for #589.\n      var o4 = observer(true);\n\n      o3.handle.stop();\n      o4.handle.stop();\n\n      onComplete();\n    });\n\n    Tinytest.addAsync(\"mongo-livedata - async server-side insert, \" + idGeneration, function (test, onComplete) {\n      // Tests that insert returns before the callback runs. Relies on the fact\n      // that mongo does not run the callback before spinning off the event loop.\n      var cname = Random.id();\n      var coll = new Mongo.Collection(cname);\n      var doc = { foo: \"bar\" };\n      var x = 0;\n      coll.insert(doc, function (err, result) {\n        test.equal(err, null);\n        test.equal(x, 1);\n        onComplete();\n      });\n      x++;\n    });\n\n    Tinytest.addAsync(\"mongo-livedata - async server-side update, \" + idGeneration, function (test, onComplete) {\n      // Tests that update returns before the callback runs.\n      var cname = Random.id();\n      var coll = new Mongo.Collection(cname);\n      var doc = { foo: \"bar\" };\n      var x = 0;\n      var id = coll.insert(doc);\n      coll.update(id, { $set: { foo: \"baz\" } }, function (err, result) {\n        test.equal(err, null);\n        test.equal(result, 1);\n        test.equal(x, 1);\n        onComplete();\n      });\n      x++;\n    });\n\n    Tinytest.addAsync(\"mongo-livedata - async server-side remove, \" + idGeneration, function (test, onComplete) {\n      // Tests that remove returns before the callback runs.\n      var cname = Random.id();\n      var coll = new Mongo.Collection(cname);\n      var doc = { foo: \"bar\" };\n      var x = 0;\n      var id = coll.insert(doc);\n      coll.remove(id, function (err, result) {\n        test.equal(err, null);\n        test.isFalse(coll.findOne(id));\n        test.equal(x, 1);\n        onComplete();\n      });\n      x++;\n    });\n\n    // compares arrays a and b w/o looking at order\n    var setsEqual = function (a, b) {\n      a = _.map(a, EJSON.stringify);\n      b = _.map(b, EJSON.stringify);\n      return _.isEmpty(_.difference(a, b)) && _.isEmpty(_.difference(b, a));\n    };\n\n    // This test mainly checks the correctness of oplog code dealing with limited\n    // queries. Compitablity with poll-diff is added as well.\n    Tinytest.addAsync(\"mongo-livedata - observe sorted, limited \" + idGeneration, function (test, onComplete) {\n      var run = test.runId();\n      var coll = new Mongo.Collection(\"observeLimit-\" + run, collectionOptions);\n\n      var observer = function () {\n        var state = {};\n        var output = [];\n        var callbacks = {\n          changed: function (newDoc) {\n            output.push({ changed: newDoc._id });\n            state[newDoc._id] = newDoc;\n          },\n          added: function (newDoc) {\n            output.push({ added: newDoc._id });\n            state[newDoc._id] = newDoc;\n          },\n          removed: function (oldDoc) {\n            output.push({ removed: oldDoc._id });\n            delete state[oldDoc._id];\n          }\n        };\n        var handle = coll.find({ foo: 22 }, { sort: { bar: 1 }, limit: 3 }).observe(callbacks);\n\n        return { output: output, handle: handle, state: state };\n      };\n      var clearOutput = function (o) {\n        o.output.splice(0, o.output.length);\n      };\n\n      var ins = function (doc) {\n        var id;runInFence(function () {\n          id = coll.insert(doc);\n        });\n        return id;\n      };\n      var rem = function (sel) {\n        runInFence(function () {\n          coll.remove(sel);\n        });\n      };\n      var upd = function (sel, mod, opt) {\n        runInFence(function () {\n          coll.update(sel, mod, opt);\n        });\n      };\n      // tests '_id' subfields for all documents in oplog buffer\n      var testOplogBufferIds = function (ids) {\n        if (!usesOplog) return;\n        var bufferIds = [];\n        o.handle._multiplexer._observeDriver._unpublishedBuffer.forEach(function (x, id) {\n          bufferIds.push(id);\n        });\n\n        test.isTrue(setsEqual(ids, bufferIds), \"expected: \" + ids + \"; got: \" + bufferIds);\n      };\n      var testSafeAppendToBufferFlag = function (expected) {\n        if (!usesOplog) return;\n        test.equal(o.handle._multiplexer._observeDriver._safeAppendToBuffer, expected);\n      };\n\n      // We'll describe our state as follows.  5:1 means \"the document with\n      // _id=docId1 and bar=5\".  We list documents as\n      //   [ currently published | in the buffer ] outside the buffer\n      // If safeToAppendToBuffer is true, we'll say ]! instead.\n\n      // Insert a doc and start observing.\n      var docId1 = ins({ foo: 22, bar: 5 });\n      waitUntilOplogCaughtUp();\n\n      // State: [ 5:1 | ]!\n      var o = observer();\n      var usesOplog = o.handle._multiplexer._observeDriver._usesOplog;\n      // Initial add.\n      test.length(o.output, 1);\n      test.equal(o.output.shift(), { added: docId1 });\n      testSafeAppendToBufferFlag(true);\n\n      // Insert another doc (blocking until observes have fired).\n      // State: [ 5:1 6:2 | ]!\n      var docId2 = ins({ foo: 22, bar: 6 });\n      // Observed add.\n      test.length(o.output, 1);\n      test.equal(o.output.shift(), { added: docId2 });\n      testSafeAppendToBufferFlag(true);\n\n      var docId3 = ins({ foo: 22, bar: 3 });\n      // State: [ 3:3 5:1 6:2 | ]!\n      test.length(o.output, 1);\n      test.equal(o.output.shift(), { added: docId3 });\n      testSafeAppendToBufferFlag(true);\n\n      // Add a non-matching document\n      ins({ foo: 13 });\n      // It shouldn't be added\n      test.length(o.output, 0);\n\n      // Add something that matches but is too big to fit in\n      var docId4 = ins({ foo: 22, bar: 7 });\n      // State: [ 3:3 5:1 6:2 | 7:4 ]!\n      // It shouldn't be added but should end up in the buffer.\n      test.length(o.output, 0);\n      testOplogBufferIds([docId4]);\n      testSafeAppendToBufferFlag(true);\n\n      // Let's add something small enough to fit in\n      var docId5 = ins({ foo: 22, bar: -1 });\n      // State: [ -1:5 3:3 5:1 | 6:2 7:4 ]!\n      // We should get an added and a removed events\n      test.length(o.output, 2);\n      // doc 2 was removed from the published set as it is too big to be in\n      test.isTrue(setsEqual(o.output, [{ added: docId5 }, { removed: docId2 }]));\n      clearOutput(o);\n      testOplogBufferIds([docId2, docId4]);\n      testSafeAppendToBufferFlag(true);\n\n      // Now remove something and that doc 2 should be right back\n      rem(docId5);\n      // State: [ 3:3 5:1 6:2 | 7:4 ]!\n      test.length(o.output, 2);\n      test.isTrue(setsEqual(o.output, [{ removed: docId5 }, { added: docId2 }]));\n      clearOutput(o);\n      testOplogBufferIds([docId4]);\n      testSafeAppendToBufferFlag(true);\n\n      // Add some negative numbers overflowing the buffer.\n      // New documents will take the published place, [3 5 6] will take the buffer\n      // and 7 will be outside of the buffer in MongoDB.\n      var docId6 = ins({ foo: 22, bar: -1 });\n      var docId7 = ins({ foo: 22, bar: -2 });\n      var docId8 = ins({ foo: 22, bar: -3 });\n      // State: [ -3:8 -2:7 -1:6 | 3:3 5:1 6:2 ] 7:4\n      test.length(o.output, 6);\n      var expected = [{ added: docId6 }, { removed: docId2 }, { added: docId7 }, { removed: docId1 }, { added: docId8 }, { removed: docId3 }];\n      test.isTrue(setsEqual(o.output, expected));\n      clearOutput(o);\n      testOplogBufferIds([docId1, docId2, docId3]);\n      testSafeAppendToBufferFlag(false);\n\n      // If we update first 3 docs (increment them by 20), it would be\n      // interesting.\n      upd({ bar: { $lt: 0 } }, { $inc: { bar: 20 } }, { multi: true });\n      // State: [ 3:3 5:1 6:2 | ] 7:4 17:8 18:7 19:6\n      //   which triggers re-poll leaving us at\n      // State: [ 3:3 5:1 6:2 | 7:4 17:8 18:7 ] 19:6\n\n      // The updated documents can't find their place in published and they can't\n      // be buffered as we are not aware of the situation outside of the buffer.\n      // But since our buffer becomes empty, it will be refilled partially with\n      // updated documents.\n      test.length(o.output, 6);\n      var expectedRemoves = [{ removed: docId6 }, { removed: docId7 }, { removed: docId8 }];\n      var expectedAdds = [{ added: docId3 }, { added: docId1 }, { added: docId2 }];\n\n      test.isTrue(setsEqual(o.output, expectedAdds.concat(expectedRemoves)));\n      clearOutput(o);\n      testOplogBufferIds([docId4, docId7, docId8]);\n      testSafeAppendToBufferFlag(false);\n\n      // Remove first 4 docs (3, 1, 2, 4) forcing buffer to become empty and\n      // schedule a repoll.\n      rem({ bar: { $lt: 10 } });\n      // State: [ 17:8 18:7 19:6 | ]!\n\n      // XXX the oplog code analyzes the events one by one: one remove after\n      // another. Poll-n-diff code, on the other side, analyzes the batch action\n      // of multiple remove. Because of that difference, expected outputs differ.\n      if (usesOplog) {\n        var expectedRemoves = [{ removed: docId3 }, { removed: docId1 }, { removed: docId2 }, { removed: docId4 }];\n        var expectedAdds = [{ added: docId4 }, { added: docId8 }, { added: docId7 }, { added: docId6 }];\n\n        test.length(o.output, 8);\n      } else {\n        var expectedRemoves = [{ removed: docId3 }, { removed: docId1 }, { removed: docId2 }];\n        var expectedAdds = [{ added: docId8 }, { added: docId7 }, { added: docId6 }];\n\n        test.length(o.output, 6);\n      }\n\n      test.isTrue(setsEqual(o.output, expectedAdds.concat(expectedRemoves)));\n      clearOutput(o);\n      testOplogBufferIds([]);\n      testSafeAppendToBufferFlag(true);\n\n      var docId9 = ins({ foo: 22, bar: 21 });\n      var docId10 = ins({ foo: 22, bar: 31 });\n      var docId11 = ins({ foo: 22, bar: 41 });\n      var docId12 = ins({ foo: 22, bar: 51 });\n      // State: [ 17:8 18:7 19:6 | 21:9 31:10 41:11 ] 51:12\n\n      testOplogBufferIds([docId9, docId10, docId11]);\n      testSafeAppendToBufferFlag(false);\n      test.length(o.output, 0);\n      upd({ bar: { $lt: 20 } }, { $inc: { bar: 5 } }, { multi: true });\n      // State: [ 21:9 22:8 23:7 | 24:6 31:10 41:11 ] 51:12\n      test.length(o.output, 4);\n      test.isTrue(setsEqual(o.output, [{ removed: docId6 }, { added: docId9 }, { changed: docId7 }, { changed: docId8 }]));\n      clearOutput(o);\n      testOplogBufferIds([docId6, docId10, docId11]);\n      testSafeAppendToBufferFlag(false);\n\n      rem(docId9);\n      // State: [ 22:8 23:7 24:6 | 31:10 41:11 ] 51:12\n      test.length(o.output, 2);\n      test.isTrue(setsEqual(o.output, [{ removed: docId9 }, { added: docId6 }]));\n      clearOutput(o);\n      testOplogBufferIds([docId10, docId11]);\n      testSafeAppendToBufferFlag(false);\n\n      upd({ bar: { $gt: 25 } }, { $inc: { bar: -7.5 } }, { multi: true });\n      // State: [ 22:8 23:7 23.5:10 | 24:6 ] 33.5:11 43.5:12\n      // 33.5 doesn't update in-place in buffer, because it the driver is not sure\n      // it can do it: because the buffer does not have the safe append flag set,\n      // for all it knows there is a different doc which is less than 33.5.\n      test.length(o.output, 2);\n      test.isTrue(setsEqual(o.output, [{ removed: docId6 }, { added: docId10 }]));\n      clearOutput(o);\n      testOplogBufferIds([docId6]);\n      testSafeAppendToBufferFlag(false);\n\n      // Force buffer objects to be moved into published set so we can check them\n      rem(docId7);\n      rem(docId8);\n      rem(docId10);\n      // State: [ 24:6 | ] 33.5:11 43.5:12\n      //    triggers repoll\n      // State: [ 24:6 33.5:11 43.5:12 | ]!\n      test.length(o.output, 6);\n      test.isTrue(setsEqual(o.output, [{ removed: docId7 }, { removed: docId8 }, { removed: docId10 }, { added: docId6 }, { added: docId11 }, { added: docId12 }]));\n\n      test.length(_.keys(o.state), 3);\n      test.equal(o.state[docId6], { _id: docId6, foo: 22, bar: 24 });\n      test.equal(o.state[docId11], { _id: docId11, foo: 22, bar: 33.5 });\n      test.equal(o.state[docId12], { _id: docId12, foo: 22, bar: 43.5 });\n      clearOutput(o);\n      testOplogBufferIds([]);\n      testSafeAppendToBufferFlag(true);\n\n      var docId13 = ins({ foo: 22, bar: 50 });\n      var docId14 = ins({ foo: 22, bar: 51 });\n      var docId15 = ins({ foo: 22, bar: 52 });\n      var docId16 = ins({ foo: 22, bar: 53 });\n      // State: [ 24:6 33.5:11 43.5:12 | 50:13 51:14 52:15 ] 53:16\n      test.length(o.output, 0);\n      testOplogBufferIds([docId13, docId14, docId15]);\n      testSafeAppendToBufferFlag(false);\n\n      // Update something that's outside the buffer to be in the buffer, writing\n      // only to the sort key.\n      upd(docId16, { $set: { bar: 10 } });\n      // State: [ 10:16 24:6 33.5:11 | 43.5:12 50:13 51:14 ] 52:15\n      test.length(o.output, 2);\n      test.isTrue(setsEqual(o.output, [{ removed: docId12 }, { added: docId16 }]));\n      clearOutput(o);\n      testOplogBufferIds([docId12, docId13, docId14]);\n      testSafeAppendToBufferFlag(false);\n\n      o.handle.stop();\n      onComplete();\n    });\n\n    Tinytest.addAsync(\"mongo-livedata - observe sorted, limited, sort fields \" + idGeneration, function (test, onComplete) {\n      var run = test.runId();\n      var coll = new Mongo.Collection(\"observeLimit-\" + run, collectionOptions);\n\n      var observer = function () {\n        var state = {};\n        var output = [];\n        var callbacks = {\n          changed: function (newDoc) {\n            output.push({ changed: newDoc._id });\n            state[newDoc._id] = newDoc;\n          },\n          added: function (newDoc) {\n            output.push({ added: newDoc._id });\n            state[newDoc._id] = newDoc;\n          },\n          removed: function (oldDoc) {\n            output.push({ removed: oldDoc._id });\n            delete state[oldDoc._id];\n          }\n        };\n        var handle = coll.find({}, { sort: { x: 1 },\n          limit: 2,\n          fields: { y: 1 } }).observe(callbacks);\n\n        return { output: output, handle: handle, state: state };\n      };\n      var clearOutput = function (o) {\n        o.output.splice(0, o.output.length);\n      };\n      var ins = function (doc) {\n        var id;runInFence(function () {\n          id = coll.insert(doc);\n        });\n        return id;\n      };\n      var rem = function (id) {\n        runInFence(function () {\n          coll.remove(id);\n        });\n      };\n\n      var o = observer();\n\n      var docId1 = ins({ x: 1, y: 1222 });\n      var docId2 = ins({ x: 5, y: 5222 });\n\n      test.length(o.output, 2);\n      test.equal(o.output, [{ added: docId1 }, { added: docId2 }]);\n      clearOutput(o);\n\n      var docId3 = ins({ x: 7, y: 7222 });\n      test.length(o.output, 0);\n\n      var docId4 = ins({ x: -1, y: -1222 });\n\n      // Becomes [docId4 docId1 | docId2 docId3]\n      test.length(o.output, 2);\n      test.isTrue(setsEqual(o.output, [{ added: docId4 }, { removed: docId2 }]));\n\n      test.equal(_.size(o.state), 2);\n      test.equal(o.state[docId4], { _id: docId4, y: -1222 });\n      test.equal(o.state[docId1], { _id: docId1, y: 1222 });\n      clearOutput(o);\n\n      rem(docId2);\n      // Becomes [docId4 docId1 | docId3]\n      test.length(o.output, 0);\n\n      rem(docId4);\n      // Becomes [docId1 docId3]\n      test.length(o.output, 2);\n      test.isTrue(setsEqual(o.output, [{ added: docId3 }, { removed: docId4 }]));\n\n      test.equal(_.size(o.state), 2);\n      test.equal(o.state[docId3], { _id: docId3, y: 7222 });\n      test.equal(o.state[docId1], { _id: docId1, y: 1222 });\n      clearOutput(o);\n\n      onComplete();\n    });\n\n    Tinytest.addAsync(\"mongo-livedata - observe sorted, limited, big initial set\" + idGeneration, function (test, onComplete) {\n      var run = test.runId();\n      var coll = new Mongo.Collection(\"observeLimit-\" + run, collectionOptions);\n\n      var observer = function () {\n        var state = {};\n        var output = [];\n        var callbacks = {\n          changed: function (newDoc) {\n            output.push({ changed: newDoc._id });\n            state[newDoc._id] = newDoc;\n          },\n          added: function (newDoc) {\n            output.push({ added: newDoc._id });\n            state[newDoc._id] = newDoc;\n          },\n          removed: function (oldDoc) {\n            output.push({ removed: oldDoc._id });\n            delete state[oldDoc._id];\n          }\n        };\n        var handle = coll.find({}, { sort: { x: 1, y: 1 }, limit: 3 }).observe(callbacks);\n\n        return { output: output, handle: handle, state: state };\n      };\n      var clearOutput = function (o) {\n        o.output.splice(0, o.output.length);\n      };\n      var ins = function (doc) {\n        var id;runInFence(function () {\n          id = coll.insert(doc);\n        });\n        return id;\n      };\n      var rem = function (id) {\n        runInFence(function () {\n          coll.remove(id);\n        });\n      };\n      // tests '_id' subfields for all documents in oplog buffer\n      var testOplogBufferIds = function (ids) {\n        var bufferIds = [];\n        o.handle._multiplexer._observeDriver._unpublishedBuffer.forEach(function (x, id) {\n          bufferIds.push(id);\n        });\n\n        test.isTrue(setsEqual(ids, bufferIds), \"expected: \" + ids + \"; got: \" + bufferIds);\n      };\n      var testSafeAppendToBufferFlag = function (expected) {\n        if (expected) test.isTrue(o.handle._multiplexer._observeDriver._safeAppendToBuffer);else test.isFalse(o.handle._multiplexer._observeDriver._safeAppendToBuffer);\n      };\n\n      var ids = {};\n      _.each([2, 4, 1, 3, 5, 5, 9, 1, 3, 2, 5], function (x, i) {\n        ids[i] = ins({ x: x, y: i });\n      });\n\n      // Ensure that we are past all the 'i' entries before we run the query, so\n      // that we get the expected phase transitions.\n      waitUntilOplogCaughtUp();\n\n      var o = observer();\n      var usesOplog = o.handle._multiplexer._observeDriver._usesOplog;\n      //  x: [1 1 2 | 2 3 3] 4 5 5 5  9\n      // id: [2 7 0 | 9 3 8] 1 4 5 10 6\n\n      test.length(o.output, 3);\n      test.isTrue(setsEqual([{ added: ids[2] }, { added: ids[7] }, { added: ids[0] }], o.output));\n      usesOplog && testOplogBufferIds([ids[9], ids[3], ids[8]]);\n      usesOplog && testSafeAppendToBufferFlag(false);\n      clearOutput(o);\n\n      rem(ids[0]);\n      //  x: [1 1 2 | 3 3] 4 5 5 5  9\n      // id: [2 7 9 | 3 8] 1 4 5 10 6\n      test.length(o.output, 2);\n      test.isTrue(setsEqual([{ removed: ids[0] }, { added: ids[9] }], o.output));\n      usesOplog && testOplogBufferIds([ids[3], ids[8]]);\n      usesOplog && testSafeAppendToBufferFlag(false);\n      clearOutput(o);\n\n      rem(ids[7]);\n      //  x: [1 2 3 | 3] 4 5 5 5  9\n      // id: [2 9 3 | 8] 1 4 5 10 6\n      test.length(o.output, 2);\n      test.isTrue(setsEqual([{ removed: ids[7] }, { added: ids[3] }], o.output));\n      usesOplog && testOplogBufferIds([ids[8]]);\n      usesOplog && testSafeAppendToBufferFlag(false);\n      clearOutput(o);\n\n      rem(ids[3]);\n      //  x: [1 2 3 | 4 5 5] 5  9\n      // id: [2 9 8 | 1 4 5] 10 6\n      test.length(o.output, 2);\n      test.isTrue(setsEqual([{ removed: ids[3] }, { added: ids[8] }], o.output));\n      usesOplog && testOplogBufferIds([ids[1], ids[4], ids[5]]);\n      usesOplog && testSafeAppendToBufferFlag(false);\n      clearOutput(o);\n\n      rem({ x: { $lt: 4 } });\n      //  x: [4 5 5 | 5  9]\n      // id: [1 4 5 | 10 6]\n      test.length(o.output, 6);\n      test.isTrue(setsEqual([{ removed: ids[2] }, { removed: ids[9] }, { removed: ids[8] }, { added: ids[5] }, { added: ids[4] }, { added: ids[1] }], o.output));\n      usesOplog && testOplogBufferIds([ids[10], ids[6]]);\n      usesOplog && testSafeAppendToBufferFlag(true);\n      clearOutput(o);\n\n      onComplete();\n    });\n  }\n\n  testAsyncMulti('mongo-livedata - empty documents, ' + idGeneration, [function (test, expect) {\n    this.collectionName = Random.id();\n    if (Meteor.isClient) {\n      Meteor.call('createInsecureCollection', this.collectionName);\n      Meteor.subscribe('c-' + this.collectionName, expect());\n    }\n  }, function (test, expect) {\n    var coll = new Mongo.Collection(this.collectionName, collectionOptions);\n\n    coll.insert({}, expect(function (err, id) {\n      test.isFalse(err);\n      test.isTrue(id);\n      var cursor = coll.find();\n      test.equal(cursor.count(), 1);\n    }));\n  }]);\n\n  // Regression test for #2413.\n  testAsyncMulti('mongo-livedata - upsert without callback, ' + idGeneration, [function (test, expect) {\n    this.collectionName = Random.id();\n    if (Meteor.isClient) {\n      Meteor.call('createInsecureCollection', this.collectionName);\n      Meteor.subscribe('c-' + this.collectionName, expect());\n    }\n  }, function (test, expect) {\n    var coll = new Mongo.Collection(this.collectionName, collectionOptions);\n\n    // No callback!  Before fixing #2413, this method never returned and\n    // so no future DDP methods worked either.\n    coll.upsert('foo', { bar: 1 });\n    // Do something else on the same method and expect it to actually work.\n    // (If the bug comes back, this will 'async batch timeout'.)\n    coll.insert({}, expect(function () {}));\n  }]);\n\n  // See https://github.com/meteor/meteor/issues/594.\n  testAsyncMulti('mongo-livedata - document with length, ' + idGeneration, [function (test, expect) {\n    this.collectionName = Random.id();\n    if (Meteor.isClient) {\n      Meteor.call('createInsecureCollection', this.collectionName, collectionOptions);\n      Meteor.subscribe('c-' + this.collectionName, expect());\n    }\n  }, function (test, expect) {\n    var self = this;\n    var coll = self.coll = new Mongo.Collection(self.collectionName, collectionOptions);\n\n    coll.insert({ foo: 'x', length: 0 }, expect(function (err, id) {\n      test.isFalse(err);\n      test.isTrue(id);\n      self.docId = id;\n      test.equal(coll.findOne(self.docId), { _id: self.docId, foo: 'x', length: 0 });\n    }));\n  }, function (test, expect) {\n    var self = this;\n    var coll = self.coll;\n    coll.update(self.docId, { $set: { length: 5 } }, expect(function (err) {\n      test.isFalse(err);\n      test.equal(coll.findOne(self.docId), { _id: self.docId, foo: 'x', length: 5 });\n    }));\n  }]);\n\n  testAsyncMulti('mongo-livedata - document with a date, ' + idGeneration, [function (test, expect) {\n    this.collectionName = Random.id();\n    if (Meteor.isClient) {\n      Meteor.call('createInsecureCollection', this.collectionName, collectionOptions);\n      Meteor.subscribe('c-' + this.collectionName, expect());\n    }\n  }, function (test, expect) {\n\n    var coll = new Mongo.Collection(this.collectionName, collectionOptions);\n    var docId;\n    coll.insert({ d: new Date(1356152390004) }, expect(function (err, id) {\n      test.isFalse(err);\n      test.isTrue(id);\n      docId = id;\n      var cursor = coll.find();\n      test.equal(cursor.count(), 1);\n      test.equal(coll.findOne().d.getFullYear(), 2012);\n    }));\n  }]);\n\n  testAsyncMulti('mongo-livedata - document goes through a transform, ' + idGeneration, [function (test, expect) {\n    var self = this;\n    var seconds = function (doc) {\n      doc.seconds = function () {\n        return doc.d.getSeconds();\n      };\n      return doc;\n    };\n    TRANSFORMS[\"seconds\"] = seconds;\n    self.collectionOptions = {\n      idGeneration: idGeneration,\n      transform: seconds,\n      transformName: \"seconds\"\n    };\n    this.collectionName = Random.id();\n    if (Meteor.isClient) {\n      Meteor.call('createInsecureCollection', this.collectionName, collectionOptions);\n      Meteor.subscribe('c-' + this.collectionName, expect());\n    }\n  }, function (test, expect) {\n    var self = this;\n    self.coll = new Mongo.Collection(self.collectionName, self.collectionOptions);\n    var obs;\n    var expectAdd = expect(function (doc) {\n      test.equal(doc.seconds(), 50);\n    });\n    var expectRemove = expect(function (doc) {\n      test.equal(doc.seconds(), 50);\n      obs.stop();\n    });\n    self.coll.insert({ d: new Date(1356152390004) }, expect(function (err, id) {\n      test.isFalse(err);\n      test.isTrue(id);\n      var cursor = self.coll.find();\n      obs = cursor.observe({\n        added: expectAdd,\n        removed: expectRemove\n      });\n      test.equal(cursor.count(), 1);\n      test.equal(cursor.fetch()[0].seconds(), 50);\n      test.equal(self.coll.findOne().seconds(), 50);\n      test.equal(self.coll.findOne({}, { transform: null }).seconds, undefined);\n      test.equal(self.coll.findOne({}, {\n        transform: function (doc) {\n          return { seconds: doc.d.getSeconds() };\n        }\n      }).seconds, 50);\n      self.coll.remove(id);\n    }));\n  }, function (test, expect) {\n    var self = this;\n    self.coll.insert({ d: new Date(1356152390004) }, expect(function (err, id) {\n      test.isFalse(err);\n      test.isTrue(id);\n      self.id1 = id;\n    }));\n    self.coll.insert({ d: new Date(1356152391004) }, expect(function (err, id) {\n      test.isFalse(err);\n      test.isTrue(id);\n      self.id2 = id;\n    }));\n  }]);\n\n  testAsyncMulti('mongo-livedata - transform sets _id if not present, ' + idGeneration, [function (test, expect) {\n    var self = this;\n    var justId = function (doc) {\n      return _.omit(doc, '_id');\n    };\n    TRANSFORMS[\"justId\"] = justId;\n    var collectionOptions = {\n      idGeneration: idGeneration,\n      transform: justId,\n      transformName: \"justId\"\n    };\n    this.collectionName = Random.id();\n    if (Meteor.isClient) {\n      Meteor.call('createInsecureCollection', this.collectionName, collectionOptions);\n      Meteor.subscribe('c-' + this.collectionName, expect());\n    }\n  }, function (test, expect) {\n    var self = this;\n    self.coll = new Mongo.Collection(this.collectionName, collectionOptions);\n    self.coll.insert({}, expect(function (err, id) {\n      test.isFalse(err);\n      test.isTrue(id);\n      test.equal(self.coll.findOne()._id, id);\n    }));\n  }]);\n\n  var bin = Base64.decode(\"TWFuIGlzIGRpc3Rpbmd1aXNoZWQsIG5vdCBvbmx5IGJ5IGhpcyBy\" + \"ZWFzb24sIGJ1dCBieSB0aGlzIHNpbmd1bGFyIHBhc3Npb24gZnJv\" + \"bSBvdGhlciBhbmltYWxzLCB3aGljaCBpcyBhIGx1c3Qgb2YgdGhl\" + \"IG1pbmQsIHRoYXQgYnkgYSBwZXJzZXZlcmFuY2Ugb2YgZGVsaWdo\" + \"dCBpbiB0aGUgY29udGludWVkIGFuZCBpbmRlZmF0aWdhYmxlIGdl\" + \"bmVyYXRpb24gb2Yga25vd2xlZGdlLCBleGNlZWRzIHRoZSBzaG9y\" + \"dCB2ZWhlbWVuY2Ugb2YgYW55IGNhcm5hbCBwbGVhc3VyZS4=\");\n\n  testAsyncMulti('mongo-livedata - document with binary data, ' + idGeneration, [function (test, expect) {\n    // XXX probably shouldn't use EJSON's private test symbols\n    this.collectionName = Random.id();\n    if (Meteor.isClient) {\n      Meteor.call('createInsecureCollection', this.collectionName, collectionOptions);\n      Meteor.subscribe('c-' + this.collectionName, expect());\n    }\n  }, function (test, expect) {\n    var coll = new Mongo.Collection(this.collectionName, collectionOptions);\n    var docId;\n    coll.insert({ b: bin }, expect(function (err, id) {\n      test.isFalse(err);\n      test.isTrue(id);\n      docId = id;\n      var cursor = coll.find();\n      test.equal(cursor.count(), 1);\n      var inColl = coll.findOne();\n      test.isTrue(EJSON.isBinary(inColl.b));\n      test.equal(inColl.b, bin);\n    }));\n  }]);\n\n  testAsyncMulti('mongo-livedata - document with a custom type, ' + idGeneration, [function (test, expect) {\n    this.collectionName = Random.id();\n    if (Meteor.isClient) {\n      Meteor.call('createInsecureCollection', this.collectionName, collectionOptions);\n      Meteor.subscribe('c-' + this.collectionName, expect());\n    }\n  }, function (test, expect) {\n    var self = this;\n    self.coll = new Mongo.Collection(this.collectionName, collectionOptions);\n    var docId;\n    // Dog is implemented at the top of the file, outside of the idGeneration\n    // loop (so that we only call EJSON.addType once).\n    var d = new Dog(\"reginald\", \"purple\");\n    self.coll.insert({ d: d }, expect(function (err, id) {\n      test.isFalse(err);\n      test.isTrue(id);\n      docId = id;\n      self.docId = docId;\n      var cursor = self.coll.find();\n      test.equal(cursor.count(), 1);\n      var inColl = self.coll.findOne();\n      test.isTrue(inColl);\n      inColl && test.equal(inColl.d.speak(), \"woof\");\n    }));\n  }, function (test, expect) {\n    var self = this;\n    self.coll.insert(new Dog(\"rover\", \"orange\"), expect(function (err, id) {\n      test.isTrue(err);\n      test.isFalse(id);\n    }));\n  }, function (test, expect) {\n    var self = this;\n    self.coll.update(self.docId, new Dog(\"rover\", \"orange\"), expect(function (err) {\n      test.isTrue(err);\n    }));\n  }]);\n\n  if (Meteor.isServer) {\n    Tinytest.addAsync(\"mongo-livedata - update return values, \" + idGeneration, function (test, onComplete) {\n      var run = test.runId();\n      var coll = new Mongo.Collection(\"livedata_update_result_\" + run, collectionOptions);\n\n      coll.insert({ foo: \"bar\" });\n      coll.insert({ foo: \"baz\" });\n      test.equal(coll.update({}, { $set: { foo: \"qux\" } }, { multi: true }), 2);\n      coll.update({}, { $set: { foo: \"quux\" } }, { multi: true }, function (err, result) {\n        test.isFalse(err);\n        test.equal(result, 2);\n        onComplete();\n      });\n    });\n\n    Tinytest.addAsync(\"mongo-livedata - remove return values, \" + idGeneration, function (test, onComplete) {\n      var run = test.runId();\n      var coll = new Mongo.Collection(\"livedata_update_result_\" + run, collectionOptions);\n\n      coll.insert({ foo: \"bar\" });\n      coll.insert({ foo: \"baz\" });\n      test.equal(coll.remove({}), 2);\n      coll.insert({ foo: \"bar\" });\n      coll.insert({ foo: \"baz\" });\n      coll.remove({}, function (err, result) {\n        test.isFalse(err);\n        test.equal(result, 2);\n        onComplete();\n      });\n    });\n\n    Tinytest.addAsync(\"mongo-livedata - id-based invalidation, \" + idGeneration, function (test, onComplete) {\n      var run = test.runId();\n      var coll = new Mongo.Collection(\"livedata_invalidation_collection_\" + run, collectionOptions);\n\n      coll.allow({\n        update: function () {\n          return true;\n        },\n        remove: function () {\n          return true;\n        }\n      });\n\n      var id1 = coll.insert({ x: 42, is1: true });\n      var id2 = coll.insert({ x: 50, is2: true });\n\n      var polls = {};\n      var handlesToStop = [];\n      var observe = function (name, query) {\n        var handle = coll.find(query).observeChanges({\n          // Make sure that we only poll on invalidation, not due to time, and\n          // keep track of when we do. Note: this option disables the use of\n          // oplogs (which admittedly is somewhat irrelevant to this feature).\n          _testOnlyPollCallback: function () {\n            polls[name] = name in polls ? polls[name] + 1 : 1;\n          }\n        });\n        handlesToStop.push(handle);\n      };\n\n      observe(\"all\", {});\n      observe(\"id1Direct\", id1);\n      observe(\"id1InQuery\", { _id: id1, z: null });\n      observe(\"id2Direct\", id2);\n      observe(\"id2InQuery\", { _id: id2, z: null });\n      observe(\"bothIds\", { _id: { $in: [id1, id2] } });\n\n      var resetPollsAndRunInFence = function (f) {\n        polls = {};\n        runInFence(f);\n      };\n\n      // Update id1 directly. This should poll all but the \"id2\" queries. \"all\"\n      // and \"bothIds\" increment by 2 because they are looking at both.\n      resetPollsAndRunInFence(function () {\n        coll.update(id1, { $inc: { x: 1 } });\n      });\n      test.equal(polls, { all: 1, id1Direct: 1, id1InQuery: 1, bothIds: 1 });\n\n      // Update id2 using a funny query. This should poll all but the \"id1\"\n      // queries.\n      resetPollsAndRunInFence(function () {\n        coll.update({ _id: id2, q: null }, { $inc: { x: 1 } });\n      });\n      test.equal(polls, { all: 1, id2Direct: 1, id2InQuery: 1, bothIds: 1 });\n\n      // Update both using a $in query. Should poll each of them exactly once.\n      resetPollsAndRunInFence(function () {\n        coll.update({ _id: { $in: [id1, id2] }, q: null }, { $inc: { x: 1 } });\n      });\n      test.equal(polls, { all: 1, id1Direct: 1, id1InQuery: 1, id2Direct: 1, id2InQuery: 1,\n        bothIds: 1 });\n\n      _.each(handlesToStop, function (h) {\n        h.stop();\n      });\n      onComplete();\n    });\n\n    Tinytest.add(\"mongo-livedata - upsert error parse, \" + idGeneration, function (test) {\n      var run = test.runId();\n      var coll = new Mongo.Collection(\"livedata_upsert_errorparse_collection_\" + run, collectionOptions);\n\n      coll.insert({ _id: 'foobar' });\n      var err;\n      try {\n        coll.update({ _id: 'foobar' }, { _id: 'cowbar' });\n      } catch (e) {\n        err = e;\n      }\n      test.isTrue(err);\n      test.isTrue(MongoInternals.Connection._isCannotChangeIdError(err));\n\n      try {\n        coll.insert({ _id: 'foobar' });\n      } catch (e) {\n        err = e;\n      }\n      test.isTrue(err);\n      // duplicate id error is not same as change id error\n      test.isFalse(MongoInternals.Connection._isCannotChangeIdError(err));\n    });\n  } // end Meteor.isServer\n\n  // This test is duplicated below (with some changes) for async upserts that go\n  // over the network.\n  _.each(Meteor.isServer ? [true, false] : [true], function (minimongo) {\n    _.each([true, false], function (useUpdate) {\n      _.each([true, false], function (useDirectCollection) {\n        Tinytest.add(\"mongo-livedata - \" + (useUpdate ? \"update \" : \"\") + \"upsert\" + (minimongo ? \" minimongo\" : \"\") + (useDirectCollection ? \" direct collection \" : \"\") + \", \" + idGeneration, function (test) {\n          var run = test.runId();\n          var options = collectionOptions;\n          // We don't get ids back when we use update() to upsert, or when we are\n          // directly calling MongoConnection.upsert().\n          var skipIds = useUpdate || !minimongo && useDirectCollection;\n          if (minimongo) options = _.extend({}, collectionOptions, { connection: null });\n          var coll = new Mongo.Collection(\"livedata_upsert_collection_\" + run + (useUpdate ? \"_update_\" : \"\") + (minimongo ? \"_minimongo_\" : \"\") + (useDirectCollection ? \"_direct_\" : \"\") + \"\", options);\n          if (useDirectCollection) coll = coll._collection;\n\n          var result1 = upsert(coll, useUpdate, { foo: 'bar' }, { foo: 'bar' });\n          test.equal(result1.numberAffected, 1);\n          if (!skipIds) test.isTrue(result1.insertedId);\n          compareResults(test, skipIds, coll.find().fetch(), [{ foo: 'bar', _id: result1.insertedId }]);\n\n          var result2 = upsert(coll, useUpdate, { foo: 'bar' }, { foo: 'baz' });\n          test.equal(result2.numberAffected, 1);\n          if (!skipIds) test.isFalse(result2.insertedId);\n          compareResults(test, skipIds, coll.find().fetch(), [{ foo: 'baz', _id: result1.insertedId }]);\n\n          coll.remove({});\n\n          // Test values that require transformation to go into Mongo:\n\n          var t1 = new Mongo.ObjectID();\n          var t2 = new Mongo.ObjectID();\n          var result3 = upsert(coll, useUpdate, { foo: t1 }, { foo: t1 });\n          test.equal(result3.numberAffected, 1);\n          if (!skipIds) test.isTrue(result3.insertedId);\n          compareResults(test, skipIds, coll.find().fetch(), [{ foo: t1, _id: result3.insertedId }]);\n\n          var result4 = upsert(coll, useUpdate, { foo: t1 }, { foo: t2 });\n          test.equal(result2.numberAffected, 1);\n          if (!skipIds) test.isFalse(result2.insertedId);\n          compareResults(test, skipIds, coll.find().fetch(), [{ foo: t2, _id: result3.insertedId }]);\n\n          coll.remove({});\n\n          // Test modification by upsert\n\n          var result5 = upsert(coll, useUpdate, { name: 'David' }, { $set: { foo: 1 } });\n          test.equal(result5.numberAffected, 1);\n          if (!skipIds) test.isTrue(result5.insertedId);\n          var davidId = result5.insertedId;\n          compareResults(test, skipIds, coll.find().fetch(), [{ name: 'David', foo: 1, _id: davidId }]);\n\n          test.throws(function () {\n            // test that bad modifier fails fast\n            upsert(coll, useUpdate, { name: 'David' }, { $blah: { foo: 2 } });\n          });\n\n          var result6 = upsert(coll, useUpdate, { name: 'David' }, { $set: { foo: 2 } });\n          test.equal(result6.numberAffected, 1);\n          if (!skipIds) test.isFalse(result6.insertedId);\n          compareResults(test, skipIds, coll.find().fetch(), [{ name: 'David', foo: 2,\n            _id: result5.insertedId }]);\n\n          var emilyId = coll.insert({ name: 'Emily', foo: 2 });\n          compareResults(test, skipIds, coll.find().fetch(), [{ name: 'David', foo: 2, _id: davidId }, { name: 'Emily', foo: 2, _id: emilyId }]);\n\n          // multi update by upsert\n          var result7 = upsert(coll, useUpdate, { foo: 2 }, { $set: { bar: 7 },\n            $setOnInsert: { name: 'Fred', foo: 2 } }, { multi: true });\n          test.equal(result7.numberAffected, 2);\n          if (!skipIds) test.isFalse(result7.insertedId);\n          compareResults(test, skipIds, coll.find().fetch(), [{ name: 'David', foo: 2, bar: 7, _id: davidId }, { name: 'Emily', foo: 2, bar: 7, _id: emilyId }]);\n\n          // insert by multi upsert\n          var result8 = upsert(coll, useUpdate, { foo: 3 }, { $set: { bar: 7 },\n            $setOnInsert: { name: 'Fred', foo: 2 } }, { multi: true });\n          test.equal(result8.numberAffected, 1);\n          if (!skipIds) test.isTrue(result8.insertedId);\n          var fredId = result8.insertedId;\n          compareResults(test, skipIds, coll.find().fetch(), [{ name: 'David', foo: 2, bar: 7, _id: davidId }, { name: 'Emily', foo: 2, bar: 7, _id: emilyId }, { name: 'Fred', foo: 2, bar: 7, _id: fredId }]);\n\n          // test `insertedId` option\n          var result9 = upsert(coll, useUpdate, { name: 'Steve' }, { name: 'Steve' }, { insertedId: 'steve' });\n          test.equal(result9.numberAffected, 1);\n          if (!skipIds) test.equal(result9.insertedId, 'steve');\n          compareResults(test, skipIds, coll.find().fetch(), [{ name: 'David', foo: 2, bar: 7, _id: davidId }, { name: 'Emily', foo: 2, bar: 7, _id: emilyId }, { name: 'Fred', foo: 2, bar: 7, _id: fredId }, { name: 'Steve', _id: 'steve' }]);\n          test.isTrue(coll.findOne('steve'));\n          test.isFalse(coll.findOne('fred'));\n\n          // Test $ operator in selectors.\n\n          var result10 = upsert(coll, useUpdate, { $or: [{ name: 'David' }, { name: 'Emily' }] }, { $set: { foo: 3 } }, { multi: true });\n          test.equal(result10.numberAffected, 2);\n          if (!skipIds) test.isFalse(result10.insertedId);\n          compareResults(test, skipIds, [coll.findOne({ name: 'David' }), coll.findOne({ name: 'Emily' })], [{ name: 'David', foo: 3, bar: 7, _id: davidId }, { name: 'Emily', foo: 3, bar: 7, _id: emilyId }]);\n\n          var result11 = upsert(coll, useUpdate, {\n            name: 'Charlie',\n            $or: [{ foo: 2 }, { bar: 7 }]\n          }, { $set: { foo: 3 } });\n          test.equal(result11.numberAffected, 1);\n          if (!skipIds) test.isTrue(result11.insertedId);\n          var charlieId = result11.insertedId;\n          compareResults(test, skipIds, coll.find({ name: 'Charlie' }).fetch(), [{ name: 'Charlie', foo: 3, _id: charlieId }]);\n        });\n      });\n    });\n  });\n\n  var asyncUpsertTestName = function (useNetwork, useDirectCollection, useUpdate, idGeneration) {\n    return \"mongo-livedata - async \" + (useUpdate ? \"update \" : \"\") + \"upsert \" + (useNetwork ? \"over network \" : \"\") + (useDirectCollection ? \", direct collection \" : \"\") + idGeneration;\n  };\n\n  // This is a duplicate of the test above, with some changes to make it work for\n  // callback style. On the client, we test server-backed and in-memory\n  // collections, and run the tests for both the Mongo.Collection and the\n  // LocalCollection. On the server, we test mongo-backed collections, for both\n  // the Mongo.Collection and the MongoConnection.\n  //\n  // XXX Rewrite with testAsyncMulti, that would simplify things a lot!\n  _.each(Meteor.isServer ? [false] : [true, false], function (useNetwork) {\n    _.each(useNetwork ? [false] : [true, false], function (useDirectCollection) {\n      _.each([true, false], function (useUpdate) {\n        Tinytest.addAsync(asyncUpsertTestName(useNetwork, useDirectCollection, useUpdate, idGeneration), function (test, onComplete) {\n          var coll;\n          var run = test.runId();\n          var collName = \"livedata_upsert_collection_\" + run + (useUpdate ? \"_update_\" : \"\") + (useNetwork ? \"_network_\" : \"\") + (useDirectCollection ? \"_direct_\" : \"\");\n\n          var next0 = function () {\n            // Test starts here.\n            upsert(coll, useUpdate, { _id: 'foo' }, { _id: 'foo', foo: 'bar' }, next1);\n          };\n\n          if (useNetwork) {\n            Meteor.call(\"createInsecureCollection\", collName, collectionOptions);\n            coll = new Mongo.Collection(collName, collectionOptions);\n            Meteor.subscribe(\"c-\" + collName, next0);\n          } else {\n            var opts = _.clone(collectionOptions);\n            if (Meteor.isClient) opts.connection = null;\n            coll = new Mongo.Collection(collName, opts);\n            if (useDirectCollection) coll = coll._collection;\n          }\n\n          var result1;\n          var next1 = function (err, result) {\n            result1 = result;\n            test.equal(result1.numberAffected, 1);\n            if (!useUpdate) {\n              test.isTrue(result1.insertedId);\n              test.equal(result1.insertedId, 'foo');\n            }\n            compareResults(test, useUpdate, coll.find().fetch(), [{ foo: 'bar', _id: 'foo' }]);\n            upsert(coll, useUpdate, { _id: 'foo' }, { foo: 'baz' }, next2);\n          };\n\n          if (!useNetwork) {\n            next0();\n          }\n\n          var t1, t2, result2;\n          var next2 = function (err, result) {\n            result2 = result;\n            test.equal(result2.numberAffected, 1);\n            if (!useUpdate) test.isFalse(result2.insertedId);\n            compareResults(test, useUpdate, coll.find().fetch(), [{ foo: 'baz', _id: result1.insertedId }]);\n            coll.remove({ _id: 'foo' });\n            compareResults(test, useUpdate, coll.find().fetch(), []);\n\n            // Test values that require transformation to go into Mongo:\n\n            t1 = new Mongo.ObjectID();\n            t2 = new Mongo.ObjectID();\n            upsert(coll, useUpdate, { _id: t1 }, { _id: t1, foo: 'bar' }, next3);\n          };\n\n          var result3;\n          var next3 = function (err, result) {\n            result3 = result;\n            test.equal(result3.numberAffected, 1);\n            if (!useUpdate) {\n              test.isTrue(result3.insertedId);\n              test.equal(t1, result3.insertedId);\n            }\n            compareResults(test, useUpdate, coll.find().fetch(), [{ _id: t1, foo: 'bar' }]);\n\n            upsert(coll, useUpdate, { _id: t1 }, { foo: t2 }, next4);\n          };\n\n          var next4 = function (err, result4) {\n            test.equal(result2.numberAffected, 1);\n            if (!useUpdate) test.isFalse(result2.insertedId);\n            compareResults(test, useUpdate, coll.find().fetch(), [{ foo: t2, _id: result3.insertedId }]);\n\n            coll.remove({ _id: t1 });\n\n            // Test modification by upsert\n            upsert(coll, useUpdate, { _id: 'David' }, { $set: { foo: 1 } }, next5);\n          };\n\n          var result5;\n          var next5 = function (err, result) {\n            result5 = result;\n            test.equal(result5.numberAffected, 1);\n            if (!useUpdate) {\n              test.isTrue(result5.insertedId);\n              test.equal(result5.insertedId, 'David');\n            }\n            var davidId = result5.insertedId;\n            compareResults(test, useUpdate, coll.find().fetch(), [{ foo: 1, _id: davidId }]);\n\n            if (!Meteor.isClient && useDirectCollection) {\n              // test that bad modifier fails\n              // The stub throws an exception about the invalid modifier, which\n              // livedata logs (so we suppress it).\n              Meteor._suppress_log(1);\n              upsert(coll, useUpdate, { _id: 'David' }, { $blah: { foo: 2 } }, function (err) {\n                if (!(Meteor.isClient && useDirectCollection)) test.isTrue(err);\n                upsert(coll, useUpdate, { _id: 'David' }, { $set: { foo: 2 } }, next6);\n              });\n            } else {\n              // XXX skip this test for now for LocalCollection; the fact that\n              // we're in a nested sequence of callbacks means we're inside a\n              // Meteor.defer, which means the exception just gets\n              // logged. Something should be done about this at some point?  Maybe\n              // LocalCollection callbacks don't really have to be deferred.\n              upsert(coll, useUpdate, { _id: 'David' }, { $set: { foo: 2 } }, next6);\n            }\n          };\n\n          var result6;\n          var next6 = function (err, result) {\n            result6 = result;\n            test.equal(result6.numberAffected, 1);\n            if (!useUpdate) test.isFalse(result6.insertedId);\n            compareResults(test, useUpdate, coll.find().fetch(), [{ _id: 'David', foo: 2 }]);\n\n            var emilyId = coll.insert({ _id: 'Emily', foo: 2 });\n            compareResults(test, useUpdate, coll.find().fetch(), [{ _id: 'David', foo: 2 }, { _id: 'Emily', foo: 2 }]);\n\n            // multi update by upsert.\n            // We can't actually update multiple documents since we have to do it by\n            // id, but at least make sure the multi flag doesn't mess anything up.\n            upsert(coll, useUpdate, { _id: 'Emily' }, { $set: { bar: 7 },\n              $setOnInsert: { name: 'Fred', foo: 2 } }, { multi: true }, next7);\n          };\n\n          var result7;\n          var next7 = function (err, result) {\n            result7 = result;\n            test.equal(result7.numberAffected, 1);\n            if (!useUpdate) test.isFalse(result7.insertedId);\n            compareResults(test, useUpdate, coll.find().fetch(), [{ _id: 'David', foo: 2 }, { _id: 'Emily', foo: 2, bar: 7 }]);\n\n            // insert by multi upsert\n            upsert(coll, useUpdate, { _id: 'Fred' }, { $set: { bar: 7 },\n              $setOnInsert: { name: 'Fred', foo: 2 } }, { multi: true }, next8);\n          };\n\n          var result8;\n          var next8 = function (err, result) {\n            result8 = result;\n\n            test.equal(result8.numberAffected, 1);\n            if (!useUpdate) {\n              test.isTrue(result8.insertedId);\n              test.equal(result8.insertedId, 'Fred');\n            }\n            var fredId = result8.insertedId;\n            compareResults(test, useUpdate, coll.find().fetch(), [{ _id: 'David', foo: 2 }, { _id: 'Emily', foo: 2, bar: 7 }, { name: 'Fred', foo: 2, bar: 7, _id: fredId }]);\n            onComplete();\n          };\n        });\n      });\n    });\n  });\n\n  if (Meteor.isClient) {\n    Tinytest.addAsync(\"mongo-livedata - async update/remove return values over network \" + idGeneration, function (test, onComplete) {\n      var coll;\n      var run = test.runId();\n      var collName = \"livedata_upsert_collection_\" + run;\n      Meteor.call(\"createInsecureCollection\", collName, collectionOptions);\n      coll = new Mongo.Collection(collName, collectionOptions);\n      Meteor.subscribe(\"c-\" + collName, function () {\n        coll.insert({ _id: \"foo\" });\n        coll.insert({ _id: \"bar\" });\n        coll.update({ _id: \"foo\" }, { $set: { foo: 1 } }, { multi: true }, function (err, result) {\n          test.isFalse(err);\n          test.equal(result, 1);\n          coll.update({ _id: \"foo\" }, { _id: \"foo\", foo: 2 }, function (err, result) {\n            test.isFalse(err);\n            test.equal(result, 1);\n            coll.update({ _id: \"baz\" }, { $set: { foo: 1 } }, function (err, result) {\n              test.isFalse(err);\n              test.equal(result, 0);\n              coll.remove({ _id: \"foo\" }, function (err, result) {\n                test.equal(result, 1);\n                coll.remove({ _id: \"baz\" }, function (err, result) {\n                  test.equal(result, 0);\n                  onComplete();\n                });\n              });\n            });\n          });\n        });\n      });\n    });\n  }\n\n  // Runs a method and its stub which do some upserts. The method throws an error\n  // if we don't get the right return values.\n  if (Meteor.isClient) {\n    _.each([true, false], function (useUpdate) {\n      Tinytest.addAsync(\"mongo-livedata - \" + (useUpdate ? \"update \" : \"\") + \"upsert in method, \" + idGeneration, function (test, onComplete) {\n        var run = test.runId();\n        upsertTestMethodColl = new Mongo.Collection(upsertTestMethod + \"_collection_\" + run, collectionOptions);\n        var m = {};\n        delete Meteor.connection._methodHandlers[upsertTestMethod];\n        m[upsertTestMethod] = function (run, useUpdate, options) {\n          upsertTestMethodImpl(upsertTestMethodColl, useUpdate, test);\n        };\n        Meteor.methods(m);\n        Meteor.call(upsertTestMethod, run, useUpdate, collectionOptions, function (err, result) {\n          test.isFalse(err);\n          onComplete();\n        });\n      });\n    });\n  }\n\n  _.each(Meteor.isServer ? [true, false] : [true], function (minimongo) {\n    _.each([true, false], function (useUpdate) {\n      Tinytest.add(\"mongo-livedata - \" + (useUpdate ? \"update \" : \"\") + \"upsert by id\" + (minimongo ? \" minimongo\" : \"\") + \", \" + idGeneration, function (test) {\n        var run = test.runId();\n        var options = collectionOptions;\n        if (minimongo) options = _.extend({}, collectionOptions, { connection: null });\n        var coll = new Mongo.Collection(\"livedata_upsert_by_id_collection_\" + run, options);\n\n        var ret;\n        ret = upsert(coll, useUpdate, { _id: 'foo' }, { $set: { x: 1 } });\n        test.equal(ret.numberAffected, 1);\n        if (!useUpdate) test.equal(ret.insertedId, 'foo');\n        compareResults(test, useUpdate, coll.find().fetch(), [{ _id: 'foo', x: 1 }]);\n\n        ret = upsert(coll, useUpdate, { _id: 'foo' }, { $set: { x: 2 } });\n        test.equal(ret.numberAffected, 1);\n        if (!useUpdate) test.isFalse(ret.insertedId);\n        compareResults(test, useUpdate, coll.find().fetch(), [{ _id: 'foo', x: 2 }]);\n\n        ret = upsert(coll, useUpdate, { _id: 'bar' }, { $set: { x: 1 } });\n        test.equal(ret.numberAffected, 1);\n        if (!useUpdate) test.equal(ret.insertedId, 'bar');\n        compareResults(test, useUpdate, coll.find().fetch(), [{ _id: 'foo', x: 2 }, { _id: 'bar', x: 1 }]);\n\n        coll.remove({});\n        ret = upsert(coll, useUpdate, { _id: 'traq' }, { x: 1 });\n\n        test.equal(ret.numberAffected, 1);\n        var myId = ret.insertedId;\n        if (useUpdate) {\n          myId = coll.findOne()._id;\n        }\n        // Starting with Mongo 2.6, upsert with entire document takes _id from the\n        // query, so the above upsert actually does an insert with _id traq\n        // instead of a random _id.  Whenever we are using our simulated upsert,\n        // we have this behavior (whether running against Mongo 2.4 or 2.6).\n        // https://jira.mongodb.org/browse/SERVER-5289\n        test.equal(myId, 'traq');\n        compareResults(test, useUpdate, coll.find().fetch(), [{ x: 1, _id: 'traq' }]);\n\n        // this time, insert as _id 'traz'\n        ret = upsert(coll, useUpdate, { _id: 'traz' }, { _id: 'traz', x: 2 });\n        test.equal(ret.numberAffected, 1);\n        if (!useUpdate) test.equal(ret.insertedId, 'traz');\n        compareResults(test, useUpdate, coll.find().fetch(), [{ x: 1, _id: 'traq' }, { x: 2, _id: 'traz' }]);\n\n        // now update _id 'traz'\n        ret = upsert(coll, useUpdate, { _id: 'traz' }, { x: 3 });\n        test.equal(ret.numberAffected, 1);\n        test.isFalse(ret.insertedId);\n        compareResults(test, useUpdate, coll.find().fetch(), [{ x: 1, _id: 'traq' }, { x: 3, _id: 'traz' }]);\n\n        // now update, passing _id (which is ok as long as it's the same)\n        ret = upsert(coll, useUpdate, { _id: 'traz' }, { _id: 'traz', x: 4 });\n        test.equal(ret.numberAffected, 1);\n        test.isFalse(ret.insertedId);\n        compareResults(test, useUpdate, coll.find().fetch(), [{ x: 1, _id: 'traq' }, { x: 4, _id: 'traz' }]);\n      });\n    });\n  });\n}); // end idGeneration parametrization\n\nTinytest.add('mongo-livedata - rewrite selector', function (test) {\n  test.equal(Mongo.Collection._rewriteSelector({ x: /^o+B/im }), { x: { $regex: '^o+B', $options: 'im' } });\n  test.equal(Mongo.Collection._rewriteSelector({ x: { $regex: /^o+B/im } }), { x: { $regex: '^o+B', $options: 'im' } });\n  test.equal(Mongo.Collection._rewriteSelector({ x: /^o+B/ }), { x: { $regex: '^o+B' } });\n  test.equal(Mongo.Collection._rewriteSelector({ x: { $regex: /^o+B/ } }), { x: { $regex: '^o+B' } });\n  test.equal(Mongo.Collection._rewriteSelector('foo'), { _id: 'foo' });\n\n  test.equal(Mongo.Collection._rewriteSelector({ '$or': [{ x: /^o/ }, { y: /^p/ }, { z: 'q' }, { w: { $regex: /^r/ } }] }), { '$or': [{ x: { $regex: '^o' } }, { y: { $regex: '^p' } }, { z: 'q' }, { w: { $regex: '^r' } }] });\n\n  test.equal(Mongo.Collection._rewriteSelector({ '$or': [{ '$and': [{ x: /^a/i }, { y: /^b/ }, { z: { $regex: /^c/i } }, { w: { $regex: '^[abc]', $options: 'i' } }, // make sure we don't break vanilla selectors\n      { v: { $regex: /O/, $options: 'i' } }, // $options should override the ones on the RegExp object\n      { u: { $regex: /O/m, $options: 'i' } } // $options should override the ones on the RegExp object\n      ] }, { '$nor': [{ s: /^d/ }, { t: /^e/i }, { u: { $regex: /^f/i } },\n      // even empty string overrides built-in flags\n      { v: { $regex: /^g/i, $options: '' } }] }] }), { '$or': [{ '$and': [{ x: { $regex: '^a', $options: 'i' } }, { y: { $regex: '^b' } }, { z: { $regex: '^c', $options: 'i' } }, { w: { $regex: '^[abc]', $options: 'i' } }, { v: { $regex: 'O', $options: 'i' } }, { u: { $regex: 'O', $options: 'i' } }] }, { '$nor': [{ s: { $regex: '^d' } }, { t: { $regex: '^e', $options: 'i' } }, { u: { $regex: '^f', $options: 'i' } }, { v: { $regex: '^g', $options: '' } }] }] });\n\n  var oid = new Mongo.ObjectID();\n  test.equal(Mongo.Collection._rewriteSelector(oid), { _id: oid });\n});\n\ntestAsyncMulti('mongo-livedata - specified _id', [function (test, expect) {\n  this.collectionName = Random.id();\n  if (Meteor.isClient) {\n    Meteor.call('createInsecureCollection', this.collectionName);\n    Meteor.subscribe('c-' + this.collectionName, expect());\n  }\n}, function (test, expect) {\n  var expectError = expect(function (err, result) {\n    test.isTrue(err);\n    var doc = coll.findOne();\n    test.equal(doc.name, \"foo\");\n  });\n  var coll = new Mongo.Collection(this.collectionName);\n  coll.insert({ _id: \"foo\", name: \"foo\" }, expect(function (err1, id) {\n    test.equal(id, \"foo\");\n    var doc = coll.findOne();\n    test.equal(doc._id, \"foo\");\n    Meteor._suppress_log(1);\n    coll.insert({ _id: \"foo\", name: \"bar\" }, expectError);\n  }));\n}]);\n\n// Consistent id generation tests\nfunction collectionInsert(test, expect, coll, index) {\n  var clientSideId = coll.insert({ name: \"foo\" }, expect(function (err1, id) {\n    test.equal(id, clientSideId);\n    var o = coll.findOne(id);\n    test.isTrue(_.isObject(o));\n    test.equal(o.name, 'foo');\n  }));\n};\n\nfunction collectionUpsert(test, expect, coll, index) {\n  var upsertId = '123456' + index;\n\n  coll.upsert(upsertId, { $set: { name: \"foo\" } }, expect(function (err1, result) {\n    test.equal(result.insertedId, upsertId);\n    test.equal(result.numberAffected, 1);\n\n    var o = coll.findOne(upsertId);\n    test.isTrue(_.isObject(o));\n    test.equal(o.name, 'foo');\n  }));\n};\n\nfunction collectionUpsertExisting(test, expect, coll, index) {\n  var clientSideId = coll.insert({ name: \"foo\" }, expect(function (err1, id) {\n    test.equal(id, clientSideId);\n\n    var o = coll.findOne(id);\n    test.isTrue(_.isObject(o));\n    // We're not testing sequencing/visibility rules here, so skip this check\n    // test.equal(o.name, 'foo');\n  }));\n\n  coll.upsert(clientSideId, { $set: { name: \"bar\" } }, expect(function (err1, result) {\n    test.equal(result.insertedId, clientSideId);\n    test.equal(result.numberAffected, 1);\n\n    var o = coll.findOne(clientSideId);\n    test.isTrue(_.isObject(o));\n    test.equal(o.name, 'bar');\n  }));\n};\n\nfunction functionCallsInsert(test, expect, coll, index) {\n  Meteor.call(\"insertObjects\", coll._name, { name: \"foo\" }, 1, expect(function (err1, ids) {\n    test.notEqual((INSERTED_IDS[coll._name] || []).length, 0);\n    var stubId = INSERTED_IDS[coll._name][index];\n\n    test.equal(ids.length, 1);\n    test.equal(ids[0], stubId);\n\n    var o = coll.findOne(stubId);\n    test.isTrue(_.isObject(o));\n    test.equal(o.name, 'foo');\n  }));\n};\n\nfunction functionCallsUpsert(test, expect, coll, index) {\n  var upsertId = '123456' + index;\n  Meteor.call(\"upsertObject\", coll._name, upsertId, { $set: { name: \"foo\" } }, expect(function (err1, result) {\n    test.equal(result.insertedId, upsertId);\n    test.equal(result.numberAffected, 1);\n\n    var o = coll.findOne(upsertId);\n    test.isTrue(_.isObject(o));\n    test.equal(o.name, 'foo');\n  }));\n};\n\nfunction functionCallsUpsertExisting(test, expect, coll, index) {\n  var id = coll.insert({ name: \"foo\" });\n\n  var o = coll.findOne(id);\n  test.notEqual(null, o);\n  test.equal(o.name, 'foo');\n\n  Meteor.call(\"upsertObject\", coll._name, id, { $set: { name: \"bar\" } }, expect(function (err1, result) {\n    test.equal(result.numberAffected, 1);\n    test.equal(result.insertedId, undefined);\n\n    var o = coll.findOne(id);\n    test.isTrue(_.isObject(o));\n    test.equal(o.name, 'bar');\n  }));\n};\n\nfunction functionCalls3Inserts(test, expect, coll, index) {\n  Meteor.call(\"insertObjects\", coll._name, { name: \"foo\" }, 3, expect(function (err1, ids) {\n    test.notEqual((INSERTED_IDS[coll._name] || []).length, 0);\n    test.equal(ids.length, 3);\n\n    for (var i = 0; i < 3; i++) {\n      var stubId = INSERTED_IDS[coll._name][3 * index + i];\n      test.equal(ids[i], stubId);\n\n      var o = coll.findOne(stubId);\n      test.isTrue(_.isObject(o));\n      test.equal(o.name, 'foo');\n    }\n  }));\n};\n\nfunction functionChainInsert(test, expect, coll, index) {\n  Meteor.call(\"doMeteorCall\", \"insertObjects\", coll._name, { name: \"foo\" }, 1, expect(function (err1, ids) {\n    test.notEqual((INSERTED_IDS[coll._name] || []).length, 0);\n    var stubId = INSERTED_IDS[coll._name][index];\n\n    test.equal(ids.length, 1);\n    test.equal(ids[0], stubId);\n\n    var o = coll.findOne(stubId);\n    test.isTrue(_.isObject(o));\n    test.equal(o.name, 'foo');\n  }));\n};\n\nfunction functionChain2Insert(test, expect, coll, index) {\n  Meteor.call(\"doMeteorCall\", \"doMeteorCall\", \"insertObjects\", coll._name, { name: \"foo\" }, 1, expect(function (err1, ids) {\n    test.notEqual((INSERTED_IDS[coll._name] || []).length, 0);\n    var stubId = INSERTED_IDS[coll._name][index];\n\n    test.equal(ids.length, 1);\n    test.equal(ids[0], stubId);\n\n    var o = coll.findOne(stubId);\n    test.isTrue(_.isObject(o));\n    test.equal(o.name, 'foo');\n  }));\n};\n\nfunction functionChain2Upsert(test, expect, coll, index) {\n  var upsertId = '123456' + index;\n  Meteor.call(\"doMeteorCall\", \"doMeteorCall\", \"upsertObject\", coll._name, upsertId, { $set: { name: \"foo\" } }, expect(function (err1, result) {\n    test.equal(result.insertedId, upsertId);\n    test.equal(result.numberAffected, 1);\n\n    var o = coll.findOne(upsertId);\n    test.isTrue(_.isObject(o));\n    test.equal(o.name, 'foo');\n  }));\n};\n\n_.each({ collectionInsert: collectionInsert,\n  collectionUpsert: collectionUpsert,\n  functionCallsInsert: functionCallsInsert,\n  functionCallsUpsert: functionCallsUpsert,\n  functionCallsUpsertExisting: functionCallsUpsertExisting,\n  functionCalls3Insert: functionCalls3Inserts,\n  functionChainInsert: functionChainInsert,\n  functionChain2Insert: functionChain2Insert,\n  functionChain2Upsert: functionChain2Upsert }, function (fn, name) {\n  _.each([1, 3], function (repetitions) {\n    _.each([1, 3], function (collectionCount) {\n      _.each(['STRING', 'MONGO'], function (idGeneration) {\n\n        testAsyncMulti('mongo-livedata - consistent _id generation ' + name + ', ' + repetitions + ' repetitions on ' + collectionCount + ' collections, idGeneration=' + idGeneration, [function (test, expect) {\n          var collectionOptions = { idGeneration: idGeneration };\n\n          var cleanups = this.cleanups = [];\n          this.collections = _.times(collectionCount, function () {\n            var collectionName = \"consistentid_\" + Random.id();\n            if (Meteor.isClient) {\n              Meteor.call('createInsecureCollection', collectionName, collectionOptions);\n              Meteor.subscribe('c-' + collectionName, expect());\n              cleanups.push(function (expect) {\n                Meteor.call('dropInsecureCollection', collectionName, expect(function () {}));\n              });\n            }\n\n            var collection = new Mongo.Collection(collectionName, collectionOptions);\n            if (Meteor.isServer) {\n              cleanups.push(function () {\n                collection._dropCollection();\n              });\n            }\n            COLLECTIONS[collectionName] = collection;\n            return collection;\n          });\n        }, function (test, expect) {\n          // now run the actual test\n          for (var i = 0; i < repetitions; i++) {\n            for (var j = 0; j < collectionCount; j++) {\n              fn(test, expect, this.collections[j], i);\n            }\n          }\n        }, function (test, expect) {\n          // Run any registered cleanup functions (e.g. to drop collections)\n          _.each(this.cleanups, function (cleanup) {\n            cleanup(expect);\n          });\n        }]);\n      });\n    });\n  });\n});\n\ntestAsyncMulti('mongo-livedata - empty string _id', [function (test, expect) {\n  var self = this;\n  self.collectionName = Random.id();\n  if (Meteor.isClient) {\n    Meteor.call('createInsecureCollection', self.collectionName);\n    Meteor.subscribe('c-' + self.collectionName, expect());\n  }\n  self.coll = new Mongo.Collection(self.collectionName);\n  try {\n    self.coll.insert({ _id: \"\", f: \"foo\" });\n    test.fail(\"Insert with an empty _id should fail\");\n  } catch (e) {\n    // ok\n  }\n  self.coll.insert({ _id: \"realid\", f: \"bar\" }, expect(function (err, res) {\n    test.equal(res, \"realid\");\n  }));\n}, function (test, expect) {\n  var self = this;\n  var docs = self.coll.find().fetch();\n  test.equal(docs, [{ _id: \"realid\", f: \"bar\" }]);\n}, function (test, expect) {\n  var self = this;\n  if (Meteor.isServer) {\n    self.coll._collection.insert({ _id: \"\", f: \"baz\" });\n    test.equal(self.coll.find().fetch().length, 2);\n  }\n}]);\n\nif (Meteor.isServer) {\n\n  testAsyncMulti(\"mongo-livedata - minimongo on server to server connection\", [function (test, expect) {\n    var self = this;\n    Meteor._debug(\"connection setup\");\n    self.id = Random.id();\n    var C = self.C = new Mongo.Collection(\"ServerMinimongo_\" + self.id);\n    C.allow({\n      insert: function () {\n        return true;\n      },\n      update: function () {\n        return true;\n      },\n      remove: function () {\n        return true;\n      }\n    });\n    C.insert({ a: 0, b: 1 });\n    C.insert({ a: 0, b: 2 });\n    C.insert({ a: 1, b: 3 });\n    Meteor.publish(self.id, function () {\n      return C.find({ a: 0 });\n    });\n\n    self.conn = DDP.connect(Meteor.absoluteUrl());\n    pollUntil(expect, function () {\n      return self.conn.status().connected;\n    }, 10000);\n  }, function (test, expect) {\n    var self = this;\n    if (self.conn.status().connected) {\n      self.miniC = new Mongo.Collection(\"ServerMinimongo_\" + self.id, {\n        connection: self.conn\n      });\n      var exp = expect(function (err) {\n        test.isFalse(err);\n      });\n      self.conn.subscribe(self.id, {\n        onError: exp,\n        onReady: exp\n      });\n    }\n  }, function (test, expect) {\n    var self = this;\n    if (self.miniC) {\n      var contents = self.miniC.find().fetch();\n      test.equal(contents.length, 2);\n      test.equal(contents[0].a, 0);\n    }\n  }, function (test, expect) {\n    var self = this;\n    if (!self.miniC) return;\n    self.miniC.insert({ a: 0, b: 3 });\n    var contents = self.miniC.find({ b: 3 }).fetch();\n    test.equal(contents.length, 1);\n    test.equal(contents[0].a, 0);\n  }]);\n\n  testAsyncMulti(\"mongo-livedata - minimongo observe on server\", [function (test, expect) {\n    var self = this;\n    self.id = Random.id();\n    self.C = new Mongo.Collection(\"ServerMinimongoObserve_\" + self.id);\n    self.events = [];\n\n    Meteor.publish(self.id, function () {\n      return self.C.find();\n    });\n\n    self.conn = DDP.connect(Meteor.absoluteUrl());\n    pollUntil(expect, function () {\n      return self.conn.status().connected;\n    }, 10000);\n  }, function (test, expect) {\n    var self = this;\n    if (self.conn.status().connected) {\n      self.miniC = new Mongo.Collection(\"ServerMinimongoObserve_\" + self.id, {\n        connection: self.conn\n      });\n      var exp = expect(function (err) {\n        test.isFalse(err);\n      });\n      self.conn.subscribe(self.id, {\n        onError: exp,\n        onReady: exp\n      });\n    }\n  }, function (test, expect) {\n    var self = this;\n    if (self.miniC) {\n      self.obs = self.miniC.find().observeChanges({\n        added: function (id, fields) {\n          self.events.push({ evt: \"a\", id: id });\n          Meteor._sleepForMs(200);\n          self.events.push({ evt: \"b\", id: id });\n        }\n      });\n      self.one = self.C.insert({});\n      self.two = self.C.insert({});\n      pollUntil(expect, function () {\n        return self.events.length === 4;\n      }, 10000);\n    }\n  }, function (test, expect) {\n    var self = this;\n    if (self.miniC) {\n      test.equal(self.events, [{ evt: \"a\", id: self.one }, { evt: \"b\", id: self.one }, { evt: \"a\", id: self.two }, { evt: \"b\", id: self.two }]);\n    }\n    self.obs && self.obs.stop();\n  }]);\n}\n\nTinytest.addAsync(\"mongo-livedata - local collections with different connections\", function (test, onComplete) {\n  var cname = Random.id();\n  var cname2 = Random.id();\n  var coll1 = new Mongo.Collection(cname);\n  var doc = { foo: \"bar\" };\n  var coll2 = new Mongo.Collection(cname2, { connection: null });\n  coll2.insert(doc, function (err, id) {\n    test.equal(coll1.find(doc).count(), 0);\n    test.equal(coll2.find(doc).count(), 1);\n    onComplete();\n  });\n});\n\nTinytest.addAsync(\"mongo-livedata - local collection with null connection, w/ callback\", function (test, onComplete) {\n  var cname = Random.id();\n  var coll1 = new Mongo.Collection(cname, { connection: null });\n  var doc = { foo: \"bar\" };\n  var docId = coll1.insert(doc, function (err, id) {\n    test.equal(docId, id);\n    test.equal(coll1.findOne(doc)._id, id);\n    onComplete();\n  });\n});\n\nTinytest.addAsync(\"mongo-livedata - local collection with null connection, w/o callback\", function (test, onComplete) {\n  var cname = Random.id();\n  var coll1 = new Mongo.Collection(cname, { connection: null });\n  var doc = { foo: \"bar\" };\n  var docId = coll1.insert(doc);\n  test.equal(coll1.findOne(doc)._id, docId);\n  onComplete();\n});\n\ntestAsyncMulti(\"mongo-livedata - update handles $push with $each correctly\", [function (test, expect) {\n  var self = this;\n  var collectionName = Random.id();\n  if (Meteor.isClient) {\n    Meteor.call('createInsecureCollection', collectionName);\n    Meteor.subscribe('c-' + collectionName, expect());\n  }\n\n  self.collection = new Mongo.Collection(collectionName);\n\n  self.id = self.collection.insert({ name: 'jens', elements: ['X', 'Y'] }, expect(function (err, res) {\n    test.isFalse(err);\n    test.equal(self.id, res);\n  }));\n}, function (test, expect) {\n  var self = this;\n  self.collection.update(self.id, {\n    $push: {\n      elements: {\n        $each: ['A', 'B', 'C'],\n        $slice: -4\n      } } }, expect(function (err, res) {\n    test.isFalse(err);\n    test.equal(self.collection.findOne(self.id), { _id: self.id, name: 'jens', elements: ['Y', 'A', 'B', 'C'] });\n  }));\n}]);\n\nif (Meteor.isServer) {\n  Tinytest.add(\"mongo-livedata - upsert handles $push with $each correctly\", function (test) {\n    var collection = new Mongo.Collection(Random.id());\n\n    var result = collection.upsert({ name: 'jens' }, { $push: {\n        elements: {\n          $each: ['A', 'B', 'C'],\n          $slice: -4\n        } } });\n\n    test.equal(collection.findOne(result.insertedId), { _id: result.insertedId,\n      name: 'jens',\n      elements: ['A', 'B', 'C'] });\n\n    var id = collection.insert({ name: \"david\", elements: ['X', 'Y'] });\n    result = collection.upsert({ name: 'david' }, { $push: {\n        elements: {\n          $each: ['A', 'B', 'C'],\n          $slice: -4\n        } } });\n\n    test.equal(collection.findOne(id), { _id: id,\n      name: 'david',\n      elements: ['Y', 'A', 'B', 'C'] });\n  });\n\n  Tinytest.add(\"mongo-livedata - upsert handles dotted selectors corrrectly\", function (test) {\n    var collection = new Mongo.Collection(Random.id());\n\n    var result1 = collection.upsert({\n      \"subdocument.a\": 1\n    }, {\n      $set: { message: \"upsert 1\" }\n    });\n\n    test.equal(collection.findOne(result1.insertedId), {\n      _id: result1.insertedId,\n      subdocument: { a: 1 },\n      message: \"upsert 1\"\n    });\n\n    var result2 = collection.upsert({\n      \"subdocument.a\": 1\n    }, {\n      $set: { message: \"upsert 2\" }\n    });\n\n    test.equal(result2, { numberAffected: 1 });\n\n    test.equal(collection.findOne(result1.insertedId), {\n      _id: result1.insertedId,\n      subdocument: { a: 1 },\n      message: \"upsert 2\"\n    });\n\n    var result3 = collection.upsert({\n      \"subdocument.a.b\": 1,\n      \"subdocument.c\": 2\n    }, {\n      $set: { message: \"upsert3\" }\n    });\n\n    test.equal(collection.findOne(result3.insertedId), {\n      _id: result3.insertedId,\n      subdocument: { a: { b: 1 }, c: 2 },\n      message: \"upsert3\"\n    });\n\n    var result4 = collection.upsert({\n      \"subdocument.a\": 4\n    }, {\n      $set: { \"subdocument.a\": \"upsert 4\" }\n    });\n\n    test.equal(collection.findOne(result4.insertedId), {\n      _id: result4.insertedId,\n      subdocument: { a: \"upsert 4\" }\n    });\n\n    var result5 = collection.upsert({\n      \"subdocument.a\": \"upsert 4\"\n    }, {\n      $set: { \"subdocument.a\": \"upsert 5\" }\n    });\n\n    test.equal(result5, { numberAffected: 1 });\n\n    test.equal(collection.findOne(result4.insertedId), {\n      _id: result4.insertedId,\n      subdocument: { a: \"upsert 5\" }\n    });\n\n    var result6 = collection.upsert({\n      \"subdocument.a\": \"upsert 5\"\n    }, {\n      $set: { \"subdocument\": \"upsert 6\" }\n    });\n\n    test.equal(result6, { numberAffected: 1 });\n\n    test.equal(collection.findOne(result4.insertedId), {\n      _id: result4.insertedId,\n      subdocument: \"upsert 6\"\n    });\n\n    var result7 = collection.upsert({\n      \"subdocument.a.b\": 7\n    }, {\n      $set: {\n        \"subdocument.a.c\": \"upsert7\"\n      }\n    });\n\n    test.equal(collection.findOne(result7.insertedId), {\n      _id: result7.insertedId,\n      subdocument: {\n        a: { b: 7, c: \"upsert7\" }\n      }\n    });\n\n    var result8 = collection.upsert({\n      \"subdocument.a.b\": 7\n    }, {\n      $set: {\n        \"subdocument.a.c\": \"upsert8\"\n      }\n    });\n\n    test.equal(result8, { numberAffected: 1 });\n\n    test.equal(collection.findOne(result7.insertedId), {\n      _id: result7.insertedId,\n      subdocument: {\n        a: { b: 7, c: \"upsert8\" }\n      }\n    });\n\n    var result9 = collection.upsert({\n      \"subdocument.a.b\": 7\n    }, {\n      $set: {\n        \"subdocument.a.b\": \"upsert9\"\n      }\n    });\n\n    test.equal(result9, { numberAffected: 1 });\n\n    test.equal(collection.findOne(result7.insertedId), {\n      _id: result7.insertedId,\n      subdocument: {\n        a: { b: \"upsert9\", c: \"upsert8\" }\n      }\n    });\n  });\n}\n\n// This is a VERY white-box test.\nMeteor.isServer && Tinytest.add(\"mongo-livedata - oplog - _disableOplog\", function (test) {\n  var collName = Random.id();\n  var coll = new Mongo.Collection(collName);\n  if (MongoInternals.defaultRemoteCollectionDriver().mongo._oplogHandle) {\n    var observeWithOplog = coll.find({ x: 5 }).observeChanges({ added: function () {} });\n    test.isTrue(observeWithOplog._multiplexer._observeDriver._usesOplog);\n    observeWithOplog.stop();\n  }\n  var observeWithoutOplog = coll.find({ x: 6 }, { _disableOplog: true }).observeChanges({ added: function () {} });\n  test.isFalse(observeWithoutOplog._multiplexer._observeDriver._usesOplog);\n  observeWithoutOplog.stop();\n});\n\nMeteor.isServer && Tinytest.add(\"mongo-livedata - oplog - include selector fields\", function (test) {\n  var collName = \"includeSelector\" + Random.id();\n  var coll = new Mongo.Collection(collName);\n\n  var docId = coll.insert({ a: 1, b: [3, 2], c: 'foo' });\n  test.isTrue(docId);\n\n  // Wait until we've processed the insert oplog entry. (If the insert shows up\n  // during the observeChanges, the bug in question is not consistently\n  // reproduced.) We don't have to do this for polling observe (eg\n  // --disable-oplog).\n  waitUntilOplogCaughtUp();\n\n  var output = [];\n  var handle = coll.find({ a: 1, b: 2 }, { fields: { c: 1 } }).observeChanges({\n    added: function (id, fields) {\n      output.push(['added', id, fields]);\n    },\n    changed: function (id, fields) {\n      output.push(['changed', id, fields]);\n    },\n    removed: function (id) {\n      output.push(['removed', id]);\n    }\n  });\n  // Initially should match the document.\n  test.length(output, 1);\n  test.equal(output.shift(), ['added', docId, { c: 'foo' }]);\n\n  // Update in such a way that, if we only knew about the published field 'c'\n  // and the changed field 'b' (but not the field 'a'), we would think it didn't\n  // match any more.  (This is a regression test for a bug that existed because\n  // we used to not use the shared projection in the initial query.)\n  runInFence(function () {\n    coll.update(docId, { $set: { 'b.0': 2, c: 'bar' } });\n  });\n  test.length(output, 1);\n  test.equal(output.shift(), ['changed', docId, { c: 'bar' }]);\n\n  handle.stop();\n});\n\nMeteor.isServer && Tinytest.add(\"mongo-livedata - oplog - transform\", function (test) {\n  var collName = \"oplogTransform\" + Random.id();\n  var coll = new Mongo.Collection(collName);\n\n  var docId = coll.insert({ a: 25, x: { x: 5, y: 9 } });\n  test.isTrue(docId);\n\n  // Wait until we've processed the insert oplog entry. (If the insert shows up\n  // during the observeChanges, the bug in question is not consistently\n  // reproduced.) We don't have to do this for polling observe (eg\n  // --disable-oplog).\n  waitUntilOplogCaughtUp();\n\n  var cursor = coll.find({}, { transform: function (doc) {\n      return doc.x;\n    } });\n\n  var changesOutput = [];\n  var changesHandle = cursor.observeChanges({\n    added: function (id, fields) {\n      changesOutput.push(['added', fields]);\n    }\n  });\n  // We should get untransformed fields via observeChanges.\n  test.length(changesOutput, 1);\n  test.equal(changesOutput.shift(), ['added', { a: 25, x: { x: 5, y: 9 } }]);\n  changesHandle.stop();\n\n  var transformedOutput = [];\n  var transformedHandle = cursor.observe({\n    added: function (doc) {\n      transformedOutput.push(['added', doc]);\n    }\n  });\n  test.length(transformedOutput, 1);\n  test.equal(transformedOutput.shift(), ['added', { x: 5, y: 9 }]);\n  transformedHandle.stop();\n});\n\nMeteor.isServer && Tinytest.add(\"mongo-livedata - oplog - drop collection/db\", function (test) {\n  // This test uses a random database, so it can be dropped without affecting\n  // anything else.\n  var mongodbUri = Npm.require('mongodb-uri');\n  var parsedUri = mongodbUri.parse(process.env.MONGO_URL);\n  parsedUri.database = 'dropDB' + Random.id();\n  var driver = new MongoInternals.RemoteCollectionDriver(mongodbUri.format(parsedUri), {\n    oplogUrl: process.env.MONGO_OPLOG_URL\n  });\n\n  var collName = \"dropCollection\" + Random.id();\n  var coll = new Mongo.Collection(collName, { _driver: driver });\n\n  var doc1Id = coll.insert({ a: 'foo', c: 1 });\n  var doc2Id = coll.insert({ b: 'bar' });\n  var doc3Id = coll.insert({ a: 'foo', c: 2 });\n  var tmp;\n\n  var output = [];\n  var handle = coll.find({ a: 'foo' }).observeChanges({\n    added: function (id, fields) {\n      output.push(['added', id, fields]);\n    },\n    changed: function (id) {\n      output.push(['changed']);\n    },\n    removed: function (id) {\n      output.push(['removed', id]);\n    }\n  });\n  test.length(output, 2);\n  // make order consistent\n  if (output.length === 2 && output[0][1] === doc3Id) {\n    tmp = output[0];\n    output[0] = output[1];\n    output[1] = tmp;\n  }\n  test.equal(output.shift(), ['added', doc1Id, { a: 'foo', c: 1 }]);\n  test.equal(output.shift(), ['added', doc3Id, { a: 'foo', c: 2 }]);\n\n  // Wait until we've processed the insert oplog entry, so that we are in a\n  // steady state (and we don't see the dropped docs because we are FETCHING).\n  waitUntilOplogCaughtUp();\n\n  // Drop the collection. Should remove all docs.\n  runInFence(function () {\n    coll._dropCollection();\n  });\n\n  test.length(output, 2);\n  // make order consistent\n  if (output.length === 2 && output[0][1] === doc3Id) {\n    tmp = output[0];\n    output[0] = output[1];\n    output[1] = tmp;\n  }\n  test.equal(output.shift(), ['removed', doc1Id]);\n  test.equal(output.shift(), ['removed', doc3Id]);\n\n  // Put something back in.\n  var doc4Id;\n  runInFence(function () {\n    doc4Id = coll.insert({ a: 'foo', c: 3 });\n  });\n\n  test.length(output, 1);\n  test.equal(output.shift(), ['added', doc4Id, { a: 'foo', c: 3 }]);\n\n  // Now drop the database. Should remove all docs again.\n  runInFence(function () {\n    driver.mongo.dropDatabase();\n  });\n\n  test.length(output, 1);\n  test.equal(output.shift(), ['removed', doc4Id]);\n\n  handle.stop();\n  driver.mongo.close();\n});\n\nvar TestCustomType = function (head, tail) {\n  // use different field names on the object than in JSON, to ensure we are\n  // actually treating this as an opaque object.\n  this.myHead = head;\n  this.myTail = tail;\n};\n_.extend(TestCustomType.prototype, {\n  clone: function () {\n    return new TestCustomType(this.myHead, this.myTail);\n  },\n  equals: function (other) {\n    return other instanceof TestCustomType && EJSON.equals(this.myHead, other.myHead) && EJSON.equals(this.myTail, other.myTail);\n  },\n  typeName: function () {\n    return 'someCustomType';\n  },\n  toJSONValue: function () {\n    return { head: this.myHead, tail: this.myTail };\n  }\n});\n\nEJSON.addType('someCustomType', function (json) {\n  return new TestCustomType(json.head, json.tail);\n});\n\ntestAsyncMulti(\"mongo-livedata - oplog - update EJSON\", [function (test, expect) {\n  var self = this;\n  var collectionName = \"ejson\" + Random.id();\n  if (Meteor.isClient) {\n    Meteor.call('createInsecureCollection', collectionName);\n    Meteor.subscribe('c-' + collectionName, expect());\n  }\n\n  self.collection = new Mongo.Collection(collectionName);\n  self.date = new Date();\n  self.objId = new Mongo.ObjectID();\n\n  self.id = self.collection.insert({ d: self.date, oi: self.objId,\n    custom: new TestCustomType('a', 'b') }, expect(function (err, res) {\n    test.isFalse(err);\n    test.equal(self.id, res);\n  }));\n}, function (test, expect) {\n  var self = this;\n  self.changes = [];\n  self.handle = self.collection.find({}).observeChanges({\n    added: function (id, fields) {\n      self.changes.push(['a', id, fields]);\n    },\n    changed: function (id, fields) {\n      self.changes.push(['c', id, fields]);\n    },\n    removed: function (id) {\n      self.changes.push(['r', id]);\n    }\n  });\n  test.length(self.changes, 1);\n  test.equal(self.changes.shift(), ['a', self.id, { d: self.date, oi: self.objId,\n    custom: new TestCustomType('a', 'b') }]);\n\n  // First, replace the entire custom object.\n  // (runInFence is useful for the server, using expect() is useful for the\n  // client)\n  runInFence(function () {\n    self.collection.update(self.id, { $set: { custom: new TestCustomType('a', 'c') } }, expect(function (err) {\n      test.isFalse(err);\n    }));\n  });\n}, function (test, expect) {\n  var self = this;\n  test.length(self.changes, 1);\n  test.equal(self.changes.shift(), ['c', self.id, { custom: new TestCustomType('a', 'c') }]);\n\n  // Now, sneakily replace just a piece of it. Meteor won't do this, but\n  // perhaps you are accessing Mongo directly.\n  runInFence(function () {\n    self.collection.update(self.id, { $set: { 'custom.EJSON$value.EJSONtail': 'd' } }, expect(function (err) {\n      test.isFalse(err);\n    }));\n  });\n}, function (test, expect) {\n  var self = this;\n  test.length(self.changes, 1);\n  test.equal(self.changes.shift(), ['c', self.id, { custom: new TestCustomType('a', 'd') }]);\n\n  // Update a date and an ObjectID too.\n  self.date2 = new Date(self.date.valueOf() + 1000);\n  self.objId2 = new Mongo.ObjectID();\n  runInFence(function () {\n    self.collection.update(self.id, { $set: { d: self.date2, oi: self.objId2 } }, expect(function (err) {\n      test.isFalse(err);\n    }));\n  });\n}, function (test, expect) {\n  var self = this;\n  test.length(self.changes, 1);\n  test.equal(self.changes.shift(), ['c', self.id, { d: self.date2, oi: self.objId2 }]);\n\n  self.handle.stop();\n}]);\n\nvar waitUntilOplogCaughtUp = function () {\n  var oplogHandle = MongoInternals.defaultRemoteCollectionDriver().mongo._oplogHandle;\n  if (oplogHandle) oplogHandle.waitUntilCaughtUp();\n};\n\nMeteor.isServer && Tinytest.add(\"mongo-livedata - cursor dedup stop\", function (test) {\n  var coll = new Mongo.Collection(Random.id());\n  _.times(100, function () {\n    coll.insert({ foo: 'baz' });\n  });\n  var handler = coll.find({}).observeChanges({\n    added: function (id) {\n      coll.update(id, { $set: { foo: 'bar' } });\n    }\n  });\n  handler.stop();\n  // Previously, this would print\n  //    Exception in queued task: TypeError: Object.keys called on non-object\n  // Unfortunately, this test didn't fail before the bugfix, but it at least\n  // would print the error and no longer does.\n  // See https://github.com/meteor/meteor/issues/2070\n});\n\ntestAsyncMulti(\"mongo-livedata - undefined find options\", [function (test, expect) {\n  var self = this;\n  self.collName = Random.id();\n  if (Meteor.isClient) {\n    Meteor.call(\"createInsecureCollection\", self.collName);\n    Meteor.subscribe(\"c-\" + self.collName, expect());\n  }\n}, function (test, expect) {\n  var self = this;\n  self.coll = new Mongo.Collection(self.collName);\n  self.doc = { foo: 1, bar: 2, _id: \"foobar\" };\n  self.coll.insert(self.doc, expect(function (err, id) {\n    test.isFalse(err);\n  }));\n}, function (test, expect) {\n  var self = this;\n  var result = self.coll.findOne({ foo: 1 }, {\n    fields: undefined,\n    sort: undefined,\n    limit: undefined,\n    skip: undefined\n  });\n  test.equal(result, self.doc);\n}]);\n\n// Regression test for #2274.\nMeteor.isServer && testAsyncMulti(\"mongo-livedata - observe limit bug\", [function (test, expect) {\n  var self = this;\n  self.coll = new Mongo.Collection(Random.id());\n  var state = {};\n  var callbacks = {\n    changed: function (newDoc) {\n      state[newDoc._id] = newDoc;\n    },\n    added: function (newDoc) {\n      state[newDoc._id] = newDoc;\n    },\n    removed: function (oldDoc) {\n      delete state[oldDoc._id];\n    }\n  };\n  self.observe = self.coll.find({}, { limit: 1, sort: { sortField: -1 } }).observe(callbacks);\n\n  // Insert some documents.\n  runInFence(function () {\n    self.id0 = self.coll.insert({ sortField: 0, toDelete: true });\n    self.id1 = self.coll.insert({ sortField: 1, toDelete: true });\n    self.id2 = self.coll.insert({ sortField: 2, toDelete: true });\n  });\n  test.equal(_.keys(state), [self.id2]);\n\n  // Mutate the one in the unpublished buffer and the one below the\n  // buffer. Before the fix for #2274, this left the observe state machine in\n  // a broken state where the buffer was empty but it wasn't try to re-fill\n  // it.\n  runInFence(function () {\n    self.coll.update({ _id: { $ne: self.id2 } }, { $set: { toDelete: false } }, { multi: 1 });\n  });\n  test.equal(_.keys(state), [self.id2]);\n\n  // Now remove the one published document. This should slide up id1 from the\n  // buffer, but this didn't work before the #2274 fix.\n  runInFence(function () {\n    self.coll.remove({ toDelete: true });\n  });\n  test.equal(_.keys(state), [self.id1]);\n}]);\n\nMeteor.isServer && testAsyncMulti(\"mongo-livedata - update with replace forbidden\", [function (test, expect) {\n  var c = new Mongo.Collection(Random.id());\n\n  var id = c.insert({ foo: \"bar\" });\n\n  c.update(id, { foo2: \"bar2\" });\n  test.equal(c.findOne(id), { _id: id, foo2: \"bar2\" });\n\n  test.throws(function () {\n    c.update(id, { foo3: \"bar3\" }, { _forbidReplace: true });\n  }, \"Replacements are forbidden\");\n  test.equal(c.findOne(id), { _id: id, foo2: \"bar2\" });\n\n  test.throws(function () {\n    c.update(id, { foo3: \"bar3\", $set: { blah: 1 } });\n  }, \"cannot have both modifier and non-modifier fields\");\n  test.equal(c.findOne(id), { _id: id, foo2: \"bar2\" });\n}]);\n\nMeteor.isServer && Tinytest.add(\"mongo-livedata - connection failure throws\", function (test) {\n  test.throws(function () {\n    new MongoInternals.Connection('mongodb://this-does-not-exist.test/asdf');\n  });\n});\n\nMeteor.isServer && Tinytest.add(\"mongo-livedata - npm modules\", function (test) {\n  // Make sure the version number looks like a version number.\n  test.matches(MongoInternals.NpmModules.mongodb.version, /^1\\.(\\d+)\\.(\\d+)/);\n  test.equal(typeof MongoInternals.NpmModules.mongodb.module, 'function');\n  test.equal(typeof MongoInternals.NpmModules.mongodb.module.connect, 'function');\n  test.equal(typeof MongoInternals.NpmModules.mongodb.module.ObjectID, 'function');\n\n  var c = new Mongo.Collection(Random.id());\n  var rawCollection = c.rawCollection();\n  test.isTrue(rawCollection);\n  test.isTrue(rawCollection.findAndModify);\n  var rawDb = c.rawDatabase();\n  test.isTrue(rawDb);\n  test.isTrue(rawDb.admin);\n});\n\nif (Meteor.isServer) {\n  Tinytest.add(\"mongo-livedata - update/remove don't accept an array as a selector #4804\", function (test) {\n    var collection = new Mongo.Collection(Random.id());\n\n    _.times(10, function () {\n      collection.insert({ data: \"Hello\" });\n    });\n\n    test.equal(collection.find().count(), 10);\n\n    // Test several array-related selectors\n    _.each([[], [1, 2, 3], [{}]], function (selector) {\n      test.throws(function () {\n        collection.remove(selector);\n      });\n\n      test.throws(function () {\n        collection.update(selector, { $set: 5 });\n      });\n    });\n\n    test.equal(collection.find().count(), 10);\n  });\n}\n\n// This is a regression test for https://github.com/meteor/meteor/issues/4839.\n// Prior to fixing the issue (but after applying\n// https://github.com/meteor/meteor/pull/4694), doing a Mongo write from a\n// timeout that ran after a method body (invoked via the client) would throw an\n// error \"fence has already activated -- too late to add a callback\" and not\n// properly call the Mongo write's callback.  In this test:\n//  - The client invokes a method (fenceOnBeforeFireError1) which\n//    - Starts an observe on a query\n//    - Creates a timeout (which shares a write fence with the method)\n//    - Lets the method return (firing the write fence)\n//  - The timeout runs and does a Mongo write. This write is inside a write\n//    fence (because timeouts preserve the fence, see dcd26415) but the write\n//    fence already fired.\n//  - The Mongo write's callback confirms that there is no error. This was\n//    not the case before fixing the bug!  (Note that the observe was necessary\n//    for the error to occur, because the error was thrown from the observe's\n//    crossbar listener callback).  It puts the confirmation into a Future.\n//  - The client invokes another method which reads the confirmation from\n//    the future. (Well, the invocation happened earlier but the use of the\n//    Future sequences it so that the confirmation only gets read at this point.)\nif (Meteor.isClient) {\n  testAsyncMulti(\"mongo-livedata - fence onBeforeFire error\", [function (test, expect) {\n    var self = this;\n    self.nonce = Random.id();\n    Meteor.call('fenceOnBeforeFireError1', self.nonce, expect(function (err) {\n      test.isFalse(err);\n    }));\n  }, function (test, expect) {\n    var self = this;\n    Meteor.call('fenceOnBeforeFireError2', self.nonce, expect(function (err, success) {\n      test.isFalse(err);\n      test.isTrue(success);\n    }));\n  }]);\n} else {\n  var fenceOnBeforeFireErrorCollection = new Mongo.Collection(\"FOBFE\");\n  var Future = Npm.require('fibers/future');\n  var futuresByNonce = {};\n  Meteor.methods({\n    fenceOnBeforeFireError1: function (nonce) {\n      futuresByNonce[nonce] = new Future();\n      var observe = fenceOnBeforeFireErrorCollection.find({ nonce: nonce }).observeChanges({ added: function () {} });\n      Meteor.setTimeout(function () {\n        fenceOnBeforeFireErrorCollection.insert({ nonce: nonce }, function (err, result) {\n          var success = !err && result;\n          futuresByNonce[nonce][\"return\"](success);\n          observe.stop();\n        });\n      }, 10);\n    },\n    fenceOnBeforeFireError2: function (nonce) {\n      try {\n        return futuresByNonce[nonce].wait();\n      } finally {\n        delete futuresByNonce[nonce];\n      }\n    }\n  });\n}","ast":null,"map":{"version":3,"sources":["/packages/mongo/mongo_livedata_tests.js"],"names":[],"mappings":"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","file":"/packages/mongo/mongo_livedata_tests.js.map","sourcesContent":["// This is a magic collection that fails its writes on the server when\n// the selector (or inserted document) contains fail: true.\n\nvar TRANSFORMS = {};\n\n// We keep track of the collections, so we can refer to them by name\nvar COLLECTIONS = {};\n\nif (Meteor.isServer) {\n  Meteor.methods({\n    createInsecureCollection: function (name, options) {\n      check(name, String);\n      check(options, Match.Optional({\n        transformName: Match.Optional(String),\n        idGeneration: Match.Optional(String)\n      }));\n\n      if (options && options.transformName) {\n        options.transform = TRANSFORMS[options.transformName];\n      }\n      var c = new Mongo.Collection(name, options);\n      COLLECTIONS[name] = c;\n      c._insecure = true;\n      Meteor.publish('c-' + name, function () {\n        return c.find();\n      });\n    },\n    dropInsecureCollection: function(name) {\n      var c = COLLECTIONS[name];\n      c._dropCollection();\n    }\n  });\n}\n\n// We store the generated id, keyed by collection, for each insert\n// This is so we can test the stub and the server generate the same id\nvar INSERTED_IDS = {};\n\nMeteor.methods({\n  insertObjects: function (collectionName, doc, count) {\n    var c = COLLECTIONS[collectionName];\n    var ids = [];\n    for (var i = 0; i < count; i++) {\n      var id = c.insert(doc);\n      INSERTED_IDS[collectionName] = (INSERTED_IDS[collectionName] || []).concat([id]);\n      ids.push(id);\n    }\n    return ids;\n  },\n  upsertObject: function (collectionName, selector, modifier) {\n    var c = COLLECTIONS[collectionName];\n    return c.upsert(selector, modifier);\n  },\n  doMeteorCall: function (name /*, arguments */) {\n    var args = Array.prototype.slice.call(arguments);\n\n    return Meteor.call.apply(null, args);\n  }\n});\n\nvar runInFence = function (f) {\n  if (Meteor.isClient) {\n    f();\n  } else {\n    var fence = new DDPServer._WriteFence;\n    DDPServer._CurrentWriteFence.withValue(fence, f);\n    fence.armAndWait();\n  }\n};\n\n// Helpers for upsert tests\n\nvar stripId = function (obj) {\n  delete obj._id;\n};\n\nvar compareResults = function (test, skipIds, actual, expected) {\n  if (skipIds) {\n    _.map(actual, stripId);\n    _.map(expected, stripId);\n  }\n  // (technically should ignore order in comparison)\n  test.equal(actual, expected);\n};\n\nvar upsert = function (coll, useUpdate, query, mod, options, callback) {\n  if (! callback && typeof options === \"function\") {\n    callback = options;\n    options = {};\n  }\n\n  if (useUpdate) {\n    if (callback)\n      return coll.update(query, mod,\n                         _.extend({ upsert: true }, options),\n                         function (err, result) {\n                           callback(err, ! err && {\n                             numberAffected: result\n                           });\n                         });\n    return {\n      numberAffected: coll.update(query, mod,\n                                  _.extend({ upsert: true }, options))\n    };\n  } else {\n    return coll.upsert(query, mod, options, callback);\n  }\n};\n\nvar upsertTestMethod = \"livedata_upsert_test_method\";\nvar upsertTestMethodColl;\n\n// This is the implementation of the upsert test method on both the client and\n// the server. On the client, we get a test object. On the server, we just throw\n// errors if something doesn't go according to plan, and when the client\n// receives those errors it will cause the test to fail.\n//\n// Client-side exceptions in here will NOT cause the test to fail! Because it's\n// a stub, those exceptions will get caught and logged.\nvar upsertTestMethodImpl = function (coll, useUpdate, test) {\n  coll.remove({});\n  var result1 = upsert(coll, useUpdate, { foo: \"bar\" }, { foo: \"bar\" });\n\n  if (! test) {\n    test = {\n      equal: function (a, b) {\n        if (! EJSON.equals(a, b))\n          throw new Error(\"Not equal: \" +\n                          JSON.stringify(a) + \", \" + JSON.stringify(b));\n      },\n      isTrue: function (a) {\n        if (! a)\n          throw new Error(\"Not truthy: \" + JSON.stringify(a));\n      },\n      isFalse: function (a) {\n        if (a)\n          throw new Error(\"Not falsey: \" + JSON.stringify(a));\n      }\n    };\n  }\n\n  // if we don't test this, then testing result1.numberAffected will throw,\n  // which will get caught and logged and the whole test will pass!\n  test.isTrue(result1);\n\n  test.equal(result1.numberAffected, 1);\n  if (! useUpdate)\n    test.isTrue(result1.insertedId);\n  var fooId = result1.insertedId;\n  var obj = coll.findOne({ foo: \"bar\" });\n  test.isTrue(obj);\n  if (! useUpdate)\n    test.equal(obj._id, result1.insertedId);\n  var result2 = upsert(coll, useUpdate, { _id: fooId },\n                       { $set: { foo: \"baz \" } });\n  test.isTrue(result2);\n  test.equal(result2.numberAffected, 1);\n  test.isFalse(result2.insertedId);\n};\n\nif (Meteor.isServer) {\n  var m = {};\n  m[upsertTestMethod] = function (run, useUpdate, options) {\n    check(run, String);\n    check(useUpdate, Boolean);\n    upsertTestMethodColl = new Mongo.Collection(upsertTestMethod + \"_collection_\" + run, options);\n    upsertTestMethodImpl(upsertTestMethodColl, useUpdate);\n  };\n  Meteor.methods(m);\n}\n\nMeteor._FailureTestCollection =\n  new Mongo.Collection(\"___meteor_failure_test_collection\");\n\n// For test \"document with a custom type\"\nvar Dog = function (name, color, actions) {\n  var self = this;\n  self.color = color;\n  self.name = name;\n  self.actions = actions || [{name: \"wag\"}, {name: \"swim\"}];\n};\n_.extend(Dog.prototype, {\n  getName: function () { return this.name;},\n  getColor: function () { return this.name;},\n  equals: function (other) { return other.name === this.name &&\n                             other.color === this.color &&\n                             EJSON.equals(other.actions, this.actions);},\n  toJSONValue: function () { return {color: this.color, name: this.name, actions: this.actions};},\n  typeName: function () { return \"dog\"; },\n  clone: function () { return new Dog(this.name, this.color); },\n  speak: function () { return \"woof\"; }\n});\nEJSON.addType(\"dog\", function (o) { return new Dog(o.name, o.color, o.actions);});\n\n\n// Parameterize tests.\n_.each( ['STRING', 'MONGO'], function(idGeneration) {\n\nvar collectionOptions = { idGeneration: idGeneration};\n\ntestAsyncMulti(\"mongo-livedata - database error reporting. \" + idGeneration, [\n  function (test, expect) {\n    var ftc = Meteor._FailureTestCollection;\n\n    var exception = function (err, res) {\n      test.instanceOf(err, Error);\n    };\n\n    _.each([\"insert\", \"remove\", \"update\"], function (op) {\n      var arg = (op === \"insert\" ? {} : 'bla');\n      var arg2 = {};\n\n      var callOp = function (callback) {\n        if (op === \"update\") {\n          ftc[op](arg, arg2, callback);\n        } else {\n          ftc[op](arg, callback);\n        }\n      };\n\n      if (Meteor.isServer) {\n        test.throws(function () {\n          callOp();\n        });\n\n        callOp(expect(exception));\n      }\n\n      if (Meteor.isClient) {\n        callOp(expect(exception));\n\n        // This would log to console in normal operation.\n        Meteor._suppress_log(1);\n        callOp();\n      }\n    });\n  }\n]);\n\n\nTinytest.addAsync(\"mongo-livedata - basics, \" + idGeneration, function (test, onComplete) {\n  var run = test.runId();\n  var coll, coll2;\n  if (Meteor.isClient) {\n    coll = new Mongo.Collection(null, collectionOptions) ; // local, unmanaged\n    coll2 = new Mongo.Collection(null, collectionOptions); // local, unmanaged\n  } else {\n    coll = new Mongo.Collection(\"livedata_test_collection_\"+run, collectionOptions);\n    coll2 = new Mongo.Collection(\"livedata_test_collection_2_\"+run, collectionOptions);\n  }\n\n  var log = '';\n  var obs = coll.find({run: run}, {sort: [\"x\"]}).observe({\n    addedAt: function (doc, before_index, before) {\n      log += 'a(' + doc.x + ',' + before_index + ',' + before + ')';\n    },\n    changedAt: function (new_doc, old_doc, at_index) {\n      log += 'c(' + new_doc.x + ',' + at_index + ',' + old_doc.x + ')';\n    },\n    movedTo: function (doc, old_index, new_index) {\n      log += 'm(' + doc.x + ',' + old_index + ',' + new_index + ')';\n    },\n    removedAt: function (doc, at_index) {\n      log += 'r(' + doc.x + ',' + at_index + ')';\n    }\n  });\n\n  var captureObserve = function (f) {\n    if (Meteor.isClient) {\n      f();\n    } else {\n      var fence = new DDPServer._WriteFence;\n      DDPServer._CurrentWriteFence.withValue(fence, f);\n      fence.armAndWait();\n    }\n\n    var ret = log;\n    log = '';\n    return ret;\n  };\n\n  var expectObserve = function (expected, f) {\n    if (!(expected instanceof Array))\n      expected = [expected];\n\n    test.include(expected, captureObserve(f));\n  };\n\n  test.equal(coll.find({run: run}).count(), 0);\n  test.equal(coll.findOne(\"abc\"), undefined);\n  test.equal(coll.findOne({run: run}), undefined);\n\n  expectObserve('a(1,0,null)', function () {\n    var id = coll.insert({run: run, x: 1});\n    test.equal(coll.find({run: run}).count(), 1);\n    test.equal(coll.findOne(id).x, 1);\n    test.equal(coll.findOne({run: run}).x, 1);\n  });\n\n  expectObserve('a(4,1,null)', function () {\n    var id2 = coll.insert({run: run, x: 4});\n    test.equal(coll.find({run: run}).count(), 2);\n    test.equal(coll.find({_id: id2}).count(), 1);\n    test.equal(coll.findOne(id2).x, 4);\n  });\n\n  test.equal(coll.findOne({run: run}, {sort: [\"x\"], skip: 0}).x, 1);\n  test.equal(coll.findOne({run: run}, {sort: [\"x\"], skip: 1}).x, 4);\n  test.equal(coll.findOne({run: run}, {sort: {x: -1}, skip: 0}).x, 4);\n  test.equal(coll.findOne({run: run}, {sort: {x: -1}, skip: 1}).x, 1);\n\n\n  var cur = coll.find({run: run}, {sort: [\"x\"]});\n  var total = 0;\n  var index = 0;\n  var context = {};\n  cur.forEach(function (doc, i, cursor) {\n    test.equal(i, index++);\n    test.isTrue(cursor === cur);\n    test.isTrue(context === this);\n    total *= 10;\n    if (Meteor.isServer) {\n      // Verify that the callbacks from forEach run sequentially and that\n      // forEach waits for them to complete (issue# 321). If they do not run\n      // sequentially, then the second callback could execute during the first\n      // callback's sleep sleep and the *= 10 will occur before the += 1, then\n      // total (at test.equal time) will be 5. If forEach does not wait for the\n      // callbacks to complete, then total (at test.equal time) will be 0.\n      Meteor._sleepForMs(5);\n    }\n    total += doc.x;\n    // verify the meteor environment is set up here\n    coll2.insert({total:total});\n  }, context);\n  test.equal(total, 14);\n\n  index = 0;\n  test.equal(cur.map(function (doc, i, cursor) {\n    // XXX we could theoretically make map run its iterations in parallel or\n    // something which would make this fail\n    test.equal(i, index++);\n    test.isTrue(cursor === cur);\n    test.isTrue(context === this);\n    return doc.x * 2;\n  }, context), [2, 8]);\n\n  test.equal(_.pluck(coll.find({run: run}, {sort: {x: -1}}).fetch(), \"x\"),\n             [4, 1]);\n\n  expectObserve('', function () {\n    var count = coll.update({run: run, x: -1}, {$inc: {x: 2}}, {multi: true});\n    test.equal(count, 0);\n  });\n\n  expectObserve('c(3,0,1)c(6,1,4)', function () {\n    var count = coll.update({run: run}, {$inc: {x: 2}}, {multi: true});\n    test.equal(count, 2);\n    test.equal(_.pluck(coll.find({run: run}, {sort: {x: -1}}).fetch(), \"x\"),\n               [6, 3]);\n  });\n\n  expectObserve(['c(13,0,3)m(13,0,1)', 'm(6,1,0)c(13,1,3)',\n                 'c(13,0,3)m(6,1,0)', 'm(3,0,1)c(13,1,3)'], function () {\n    coll.update({run: run, x: 3}, {$inc: {x: 10}}, {multi: true});\n    test.equal(_.pluck(coll.find({run: run}, {sort: {x: -1}}).fetch(), \"x\"),\n               [13, 6]);\n  });\n\n  expectObserve('r(13,1)', function () {\n    var count = coll.remove({run: run, x: {$gt: 10}});\n    test.equal(count, 1);\n    test.equal(coll.find({run: run}).count(), 1);\n  });\n\n  expectObserve('r(6,0)', function () {\n    coll.remove({run: run});\n    test.equal(coll.find({run: run}).count(), 0);\n  });\n\n  expectObserve('', function () {\n    var count = coll.remove({run: run});\n    test.equal(count, 0);\n    test.equal(coll.find({run: run}).count(), 0);\n  });\n\n  obs.stop();\n  onComplete();\n});\n\nTinytest.addAsync(\"mongo-livedata - fuzz test, \" + idGeneration, function(test, onComplete) {\n\n  var run = Random.id();\n  var coll;\n  if (Meteor.isClient) {\n    coll = new Mongo.Collection(null, collectionOptions); // local, unmanaged\n  } else {\n    coll = new Mongo.Collection(\"livedata_test_collection_\"+run, collectionOptions);\n  }\n\n  // fuzz test of observe(), especially the server-side diffing\n  var actual = [];\n  var correct = [];\n  var counters = {add: 0, change: 0, move: 0, remove: 0};\n\n  var obs = coll.find({run: run}, {sort: [\"x\"]}).observe({\n    addedAt: function (doc, before_index) {\n      counters.add++;\n      actual.splice(before_index, 0, doc.x);\n    },\n    changedAt: function (new_doc, old_doc, at_index) {\n      counters.change++;\n      test.equal(actual[at_index], old_doc.x);\n      actual[at_index] = new_doc.x;\n    },\n    movedTo: function (doc, old_index, new_index) {\n      counters.move++;\n      test.equal(actual[old_index], doc.x);\n      actual.splice(old_index, 1);\n      actual.splice(new_index, 0, doc.x);\n    },\n    removedAt: function (doc, at_index) {\n      counters.remove++;\n      test.equal(actual[at_index], doc.x);\n      actual.splice(at_index, 1);\n    }\n  });\n\n  if (Meteor.isServer) {\n    // For now, has to be polling (not oplog) because it is ordered observe.\n    test.isTrue(obs._multiplexer._observeDriver._suspendPolling);\n  }\n\n  var step = 0;\n\n  // Use non-deterministic randomness so we can have a shorter fuzz\n  // test (fewer iterations).  For deterministic (fully seeded)\n  // randomness, remove the call to Random.fraction().\n  var seededRandom = new SeededRandom(\"foobard\" + Random.fraction());\n  // Random integer in [0,n)\n  var rnd = function (n) {\n    return seededRandom.nextIntBetween(0, n-1);\n  };\n\n  var finishObserve = function (f) {\n    if (Meteor.isClient) {\n      f();\n    } else {\n      var fence = new DDPServer._WriteFence;\n      DDPServer._CurrentWriteFence.withValue(fence, f);\n      fence.armAndWait();\n    }\n  };\n\n  var doStep = function () {\n    if (step++ === 5) { // run N random tests\n      obs.stop();\n      onComplete();\n      return;\n    }\n\n    var max_counters = _.clone(counters);\n\n    finishObserve(function () {\n      if (Meteor.isServer)\n        obs._multiplexer._observeDriver._suspendPolling();\n\n      // Do a batch of 1-10 operations\n      var batch_count = rnd(10) + 1;\n      for (var i = 0; i < batch_count; i++) {\n        // 25% add, 25% remove, 25% change in place, 25% change and move\n        var op = rnd(4);\n        var which = rnd(correct.length);\n        if (op === 0 || step < 2 || !correct.length) {\n          // Add\n          var x = rnd(1000000);\n          coll.insert({run: run, x: x});\n          correct.push(x);\n          max_counters.add++;\n        } else if (op === 1 || op === 2) {\n          var x = correct[which];\n          if (op === 1)\n            // Small change, not likely to cause a move\n            var val = x + (rnd(2) ? -1 : 1);\n          else\n            // Large change, likely to cause a move\n            var val = rnd(1000000);\n          coll.update({run: run, x: x}, {$set: {x: val}});\n          correct[which] = val;\n          max_counters.change++;\n          max_counters.move++;\n        } else {\n          coll.remove({run: run, x: correct[which]});\n          correct.splice(which, 1);\n          max_counters.remove++;\n        }\n      }\n      if (Meteor.isServer)\n        obs._multiplexer._observeDriver._resumePolling();\n\n    });\n\n    // Did we actually deliver messages that mutated the array in the\n    // right way?\n    correct.sort(function (a,b) {return a-b;});\n    test.equal(actual, correct);\n\n    // Did we limit ourselves to one 'moved' message per change,\n    // rather than O(results) moved messages?\n    _.each(max_counters, function (v, k) {\n      test.isTrue(max_counters[k] >= counters[k], k);\n    });\n\n    Meteor.defer(doStep);\n  };\n\n  doStep();\n\n});\n\nTinytest.addAsync(\"mongo-livedata - scribbling, \" + idGeneration, function (test, onComplete) {\n  var run = test.runId();\n  var coll;\n  if (Meteor.isClient) {\n    coll = new Mongo.Collection(null, collectionOptions); // local, unmanaged\n  } else {\n    coll = new Mongo.Collection(\"livedata_test_collection_\"+run, collectionOptions);\n  }\n\n  var numAddeds = 0;\n  var handle = coll.find({run: run}).observe({\n    addedAt: function (o) {\n      // test that we can scribble on the object we get back from Mongo without\n      // breaking anything.  The worst possible scribble is messing with _id.\n      delete o._id;\n      numAddeds++;\n    }\n  });\n  _.each([123, 456, 789], function (abc) {\n    runInFence(function () {\n      coll.insert({run: run, abc: abc});\n    });\n  });\n  handle.stop();\n  // will be 6 (1+2+3) if we broke diffing!\n  test.equal(numAddeds, 3);\n\n  onComplete();\n});\n\nTinytest.addAsync(\"mongo-livedata - stop handle in callback, \" + idGeneration, function (test, onComplete) {\n  var run = Random.id();\n  var coll;\n  if (Meteor.isClient) {\n    coll = new Mongo.Collection(null, collectionOptions); // local, unmanaged\n  } else {\n    coll = new Mongo.Collection(\"stopHandleInCallback-\"+run, collectionOptions);\n  }\n\n  var output = [];\n\n  var handle = coll.find().observe({\n    added: function (doc) {\n      output.push({added: doc._id});\n    },\n    changed: function (newDoc) {\n      output.push('changed');\n      handle.stop();\n    }\n  });\n\n  test.equal(output, []);\n\n  // Insert a document. Observe that the added callback is called.\n  var docId;\n  runInFence(function () {\n    docId = coll.insert({foo: 42});\n  });\n  test.length(output, 1);\n  test.equal(output.shift(), {added: docId});\n\n  // Update it. Observe that the changed callback is called. This should also\n  // stop the observation.\n  runInFence(function() {\n    coll.update(docId, {$set: {bar: 10}});\n  });\n  test.length(output, 1);\n  test.equal(output.shift(), 'changed');\n\n  // Update again. This shouldn't call the callback because we stopped the\n  // observation.\n  runInFence(function() {\n    coll.update(docId, {$set: {baz: 40}});\n  });\n  test.length(output, 0);\n\n  test.equal(coll.find().count(), 1);\n  test.equal(coll.findOne(docId),\n             {_id: docId, foo: 42, bar: 10, baz: 40});\n\n  onComplete();\n});\n\n// This behavior isn't great, but it beats deadlock.\nif (Meteor.isServer) {\n  Tinytest.addAsync(\"mongo-livedata - recursive observe throws, \" + idGeneration, function (test, onComplete) {\n    var run = test.runId();\n    var coll = new Mongo.Collection(\"observeInCallback-\"+run, collectionOptions);\n\n    var callbackCalled = false;\n    var handle = coll.find({}).observe({\n      added: function (newDoc) {\n        callbackCalled = true;\n        test.throws(function () {\n          coll.find({}).observe();\n        });\n      }\n    });\n    test.isFalse(callbackCalled);\n    // Insert a document. Observe that the added callback is called.\n    runInFence(function () {\n      coll.insert({foo: 42});\n    });\n    test.isTrue(callbackCalled);\n\n    handle.stop();\n\n    onComplete();\n  });\n\n  Tinytest.addAsync(\"mongo-livedata - cursor dedup, \" + idGeneration, function (test, onComplete) {\n    var run = test.runId();\n    var coll = new Mongo.Collection(\"cursorDedup-\"+run, collectionOptions);\n\n    var observer = function (noAdded) {\n      var output = [];\n      var callbacks = {\n        changed: function (newDoc) {\n          output.push({changed: newDoc._id});\n        }\n      };\n      if (!noAdded) {\n        callbacks.added = function (doc) {\n          output.push({added: doc._id});\n        };\n      }\n      var handle = coll.find({foo: 22}).observe(callbacks);\n      return {output: output, handle: handle};\n    };\n\n    // Insert a doc and start observing.\n    var docId1 = coll.insert({foo: 22});\n    var o1 = observer();\n    // Initial add.\n    test.length(o1.output, 1);\n    test.equal(o1.output.shift(), {added: docId1});\n\n    // Insert another doc (blocking until observes have fired).\n    var docId2;\n    runInFence(function () {\n      docId2 = coll.insert({foo: 22, bar: 5});\n    });\n    // Observed add.\n    test.length(o1.output, 1);\n    test.equal(o1.output.shift(), {added: docId2});\n\n    // Second identical observe.\n    var o2 = observer();\n    // Initial adds.\n    test.length(o2.output, 2);\n    test.include([docId1, docId2], o2.output[0].added);\n    test.include([docId1, docId2], o2.output[1].added);\n    test.notEqual(o2.output[0].added, o2.output[1].added);\n    o2.output.length = 0;\n    // Original observe not affected.\n    test.length(o1.output, 0);\n\n    // White-box test: both observes should share an ObserveMultiplexer.\n    var observeMultiplexer = o1.handle._multiplexer;\n    test.isTrue(observeMultiplexer);\n    test.isTrue(observeMultiplexer === o2.handle._multiplexer);\n\n    // Update. Both observes fire.\n    runInFence(function () {\n      coll.update(docId1, {$set: {x: 'y'}});\n    });\n    test.length(o1.output, 1);\n    test.length(o2.output, 1);\n    test.equal(o1.output.shift(), {changed: docId1});\n    test.equal(o2.output.shift(), {changed: docId1});\n\n    // Stop first handle. Second handle still around.\n    o1.handle.stop();\n    test.length(o1.output, 0);\n    test.length(o2.output, 0);\n\n    // Another update. Just the second handle should fire.\n    runInFence(function () {\n      coll.update(docId2, {$set: {z: 'y'}});\n    });\n    test.length(o1.output, 0);\n    test.length(o2.output, 1);\n    test.equal(o2.output.shift(), {changed: docId2});\n\n    // Stop second handle. Nothing should happen, but the multiplexer should\n    // be stopped.\n    test.isTrue(observeMultiplexer._handles);  // This will change.\n    o2.handle.stop();\n    test.length(o1.output, 0);\n    test.length(o2.output, 0);\n    // White-box: ObserveMultiplexer has nulled its _handles so you can't\n    // accidentally join to it.\n    test.isNull(observeMultiplexer._handles);\n\n    // Start yet another handle on the same query.\n    var o3 = observer();\n    // Initial adds.\n    test.length(o3.output, 2);\n    test.include([docId1, docId2], o3.output[0].added);\n    test.include([docId1, docId2], o3.output[1].added);\n    test.notEqual(o3.output[0].added, o3.output[1].added);\n    // Old observers not called.\n    test.length(o1.output, 0);\n    test.length(o2.output, 0);\n    // White-box: Different ObserveMultiplexer.\n    test.isTrue(observeMultiplexer !== o3.handle._multiplexer);\n\n    // Start another handle with no added callback. Regression test for #589.\n    var o4 = observer(true);\n\n    o3.handle.stop();\n    o4.handle.stop();\n\n    onComplete();\n  });\n\n  Tinytest.addAsync(\"mongo-livedata - async server-side insert, \" + idGeneration, function (test, onComplete) {\n    // Tests that insert returns before the callback runs. Relies on the fact\n    // that mongo does not run the callback before spinning off the event loop.\n    var cname = Random.id();\n    var coll = new Mongo.Collection(cname);\n    var doc = { foo: \"bar\" };\n    var x = 0;\n    coll.insert(doc, function (err, result) {\n      test.equal(err, null);\n      test.equal(x, 1);\n      onComplete();\n    });\n    x++;\n  });\n\n  Tinytest.addAsync(\"mongo-livedata - async server-side update, \" + idGeneration, function (test, onComplete) {\n    // Tests that update returns before the callback runs.\n    var cname = Random.id();\n    var coll = new Mongo.Collection(cname);\n    var doc = { foo: \"bar\" };\n    var x = 0;\n    var id = coll.insert(doc);\n    coll.update(id, { $set: { foo: \"baz\" } }, function (err, result) {\n      test.equal(err, null);\n      test.equal(result, 1);\n      test.equal(x, 1);\n      onComplete();\n    });\n    x++;\n  });\n\n  Tinytest.addAsync(\"mongo-livedata - async server-side remove, \" + idGeneration, function (test, onComplete) {\n    // Tests that remove returns before the callback runs.\n    var cname = Random.id();\n    var coll = new Mongo.Collection(cname);\n    var doc = { foo: \"bar\" };\n    var x = 0;\n    var id = coll.insert(doc);\n    coll.remove(id, function (err, result) {\n      test.equal(err, null);\n      test.isFalse(coll.findOne(id));\n      test.equal(x, 1);\n      onComplete();\n    });\n    x++;\n  });\n\n  // compares arrays a and b w/o looking at order\n  var setsEqual = function (a, b) {\n    a = _.map(a, EJSON.stringify);\n    b = _.map(b, EJSON.stringify);\n    return _.isEmpty(_.difference(a, b)) && _.isEmpty(_.difference(b, a));\n  };\n\n  // This test mainly checks the correctness of oplog code dealing with limited\n  // queries. Compitablity with poll-diff is added as well.\n  Tinytest.addAsync(\"mongo-livedata - observe sorted, limited \" + idGeneration, function (test, onComplete) {\n    var run = test.runId();\n    var coll = new Mongo.Collection(\"observeLimit-\"+run, collectionOptions);\n\n    var observer = function () {\n      var state = {};\n      var output = [];\n      var callbacks = {\n        changed: function (newDoc) {\n          output.push({changed: newDoc._id});\n          state[newDoc._id] = newDoc;\n        },\n        added: function (newDoc) {\n          output.push({added: newDoc._id});\n          state[newDoc._id] = newDoc;\n        },\n        removed: function (oldDoc) {\n          output.push({removed: oldDoc._id});\n          delete state[oldDoc._id];\n        }\n      };\n      var handle = coll.find({foo: 22},\n                             {sort: {bar: 1}, limit: 3}).observe(callbacks);\n\n      return {output: output, handle: handle, state: state};\n    };\n    var clearOutput = function (o) { o.output.splice(0, o.output.length); };\n\n    var ins = function (doc) {\n      var id; runInFence(function () { id = coll.insert(doc); });\n      return id;\n    };\n    var rem = function (sel) { runInFence(function () { coll.remove(sel); }); };\n    var upd = function (sel, mod, opt) {\n      runInFence(function () {\n        coll.update(sel, mod, opt);\n      });\n    };\n    // tests '_id' subfields for all documents in oplog buffer\n    var testOplogBufferIds = function (ids) {\n      if (!usesOplog)\n        return;\n      var bufferIds = [];\n      o.handle._multiplexer._observeDriver._unpublishedBuffer.forEach(function (x, id) {\n        bufferIds.push(id);\n      });\n\n      test.isTrue(setsEqual(ids, bufferIds), \"expected: \" + ids + \"; got: \" + bufferIds);\n    };\n    var testSafeAppendToBufferFlag = function (expected) {\n      if (!usesOplog)\n        return;\n      test.equal(o.handle._multiplexer._observeDriver._safeAppendToBuffer,\n                 expected);\n    };\n\n    // We'll describe our state as follows.  5:1 means \"the document with\n    // _id=docId1 and bar=5\".  We list documents as\n    //   [ currently published | in the buffer ] outside the buffer\n    // If safeToAppendToBuffer is true, we'll say ]! instead.\n\n    // Insert a doc and start observing.\n    var docId1 = ins({foo: 22, bar: 5});\n    waitUntilOplogCaughtUp();\n\n    // State: [ 5:1 | ]!\n    var o = observer();\n    var usesOplog = o.handle._multiplexer._observeDriver._usesOplog;\n    // Initial add.\n    test.length(o.output, 1);\n    test.equal(o.output.shift(), {added: docId1});\n    testSafeAppendToBufferFlag(true);\n\n    // Insert another doc (blocking until observes have fired).\n    // State: [ 5:1 6:2 | ]!\n    var docId2 = ins({foo: 22, bar: 6});\n    // Observed add.\n    test.length(o.output, 1);\n    test.equal(o.output.shift(), {added: docId2});\n    testSafeAppendToBufferFlag(true);\n\n    var docId3 = ins({ foo: 22, bar: 3 });\n    // State: [ 3:3 5:1 6:2 | ]!\n    test.length(o.output, 1);\n    test.equal(o.output.shift(), {added: docId3});\n    testSafeAppendToBufferFlag(true);\n\n    // Add a non-matching document\n    ins({ foo: 13 });\n    // It shouldn't be added\n    test.length(o.output, 0);\n\n    // Add something that matches but is too big to fit in\n    var docId4 = ins({ foo: 22, bar: 7 });\n    // State: [ 3:3 5:1 6:2 | 7:4 ]!\n    // It shouldn't be added but should end up in the buffer.\n    test.length(o.output, 0);\n    testOplogBufferIds([docId4]);\n    testSafeAppendToBufferFlag(true);\n\n    // Let's add something small enough to fit in\n    var docId5 = ins({ foo: 22, bar: -1 });\n    // State: [ -1:5 3:3 5:1 | 6:2 7:4 ]!\n    // We should get an added and a removed events\n    test.length(o.output, 2);\n    // doc 2 was removed from the published set as it is too big to be in\n    test.isTrue(setsEqual(o.output, [{added: docId5}, {removed: docId2}]));\n    clearOutput(o);\n    testOplogBufferIds([docId2, docId4]);\n    testSafeAppendToBufferFlag(true);\n\n    // Now remove something and that doc 2 should be right back\n    rem(docId5);\n    // State: [ 3:3 5:1 6:2 | 7:4 ]!\n    test.length(o.output, 2);\n    test.isTrue(setsEqual(o.output, [{removed: docId5}, {added: docId2}]));\n    clearOutput(o);\n    testOplogBufferIds([docId4]);\n    testSafeAppendToBufferFlag(true);\n\n    // Add some negative numbers overflowing the buffer.\n    // New documents will take the published place, [3 5 6] will take the buffer\n    // and 7 will be outside of the buffer in MongoDB.\n    var docId6 = ins({ foo: 22, bar: -1 });\n    var docId7 = ins({ foo: 22, bar: -2 });\n    var docId8 = ins({ foo: 22, bar: -3 });\n    // State: [ -3:8 -2:7 -1:6 | 3:3 5:1 6:2 ] 7:4\n    test.length(o.output, 6);\n    var expected = [{added: docId6}, {removed: docId2},\n                    {added: docId7}, {removed: docId1},\n                    {added: docId8}, {removed: docId3}];\n    test.isTrue(setsEqual(o.output, expected));\n    clearOutput(o);\n    testOplogBufferIds([docId1, docId2, docId3]);\n    testSafeAppendToBufferFlag(false);\n\n    // If we update first 3 docs (increment them by 20), it would be\n    // interesting.\n    upd({ bar: { $lt: 0 }}, { $inc: { bar: 20 } }, { multi: true });\n    // State: [ 3:3 5:1 6:2 | ] 7:4 17:8 18:7 19:6\n    //   which triggers re-poll leaving us at\n    // State: [ 3:3 5:1 6:2 | 7:4 17:8 18:7 ] 19:6\n\n    // The updated documents can't find their place in published and they can't\n    // be buffered as we are not aware of the situation outside of the buffer.\n    // But since our buffer becomes empty, it will be refilled partially with\n    // updated documents.\n    test.length(o.output, 6);\n    var expectedRemoves = [{removed: docId6},\n                           {removed: docId7},\n                           {removed: docId8}];\n    var expectedAdds = [{added: docId3},\n                        {added: docId1},\n                        {added: docId2}];\n\n    test.isTrue(setsEqual(o.output, expectedAdds.concat(expectedRemoves)));\n    clearOutput(o);\n    testOplogBufferIds([docId4, docId7, docId8]);\n    testSafeAppendToBufferFlag(false);\n\n    // Remove first 4 docs (3, 1, 2, 4) forcing buffer to become empty and\n    // schedule a repoll.\n    rem({ bar: { $lt: 10 } });\n    // State: [ 17:8 18:7 19:6 | ]!\n\n    // XXX the oplog code analyzes the events one by one: one remove after\n    // another. Poll-n-diff code, on the other side, analyzes the batch action\n    // of multiple remove. Because of that difference, expected outputs differ.\n    if (usesOplog) {\n      var expectedRemoves = [{removed: docId3}, {removed: docId1},\n                             {removed: docId2}, {removed: docId4}];\n      var expectedAdds = [{added: docId4}, {added: docId8},\n                          {added: docId7}, {added: docId6}];\n\n      test.length(o.output, 8);\n    } else {\n      var expectedRemoves = [{removed: docId3}, {removed: docId1},\n                             {removed: docId2}];\n      var expectedAdds = [{added: docId8}, {added: docId7}, {added: docId6}];\n\n      test.length(o.output, 6);\n    }\n\n    test.isTrue(setsEqual(o.output, expectedAdds.concat(expectedRemoves)));\n    clearOutput(o);\n    testOplogBufferIds([]);\n    testSafeAppendToBufferFlag(true);\n\n    var docId9 = ins({ foo: 22, bar: 21 });\n    var docId10 = ins({ foo: 22, bar: 31 });\n    var docId11 = ins({ foo: 22, bar: 41 });\n    var docId12 = ins({ foo: 22, bar: 51 });\n    // State: [ 17:8 18:7 19:6 | 21:9 31:10 41:11 ] 51:12\n\n    testOplogBufferIds([docId9, docId10, docId11]);\n    testSafeAppendToBufferFlag(false);\n    test.length(o.output, 0);\n    upd({ bar: { $lt: 20 } }, { $inc: { bar: 5 } }, { multi: true });\n    // State: [ 21:9 22:8 23:7 | 24:6 31:10 41:11 ] 51:12\n    test.length(o.output, 4);\n    test.isTrue(setsEqual(o.output, [{removed: docId6},\n                                     {added: docId9},\n                                     {changed: docId7},\n                                     {changed: docId8}]));\n    clearOutput(o);\n    testOplogBufferIds([docId6, docId10, docId11]);\n    testSafeAppendToBufferFlag(false);\n\n    rem(docId9);\n    // State: [ 22:8 23:7 24:6 | 31:10 41:11 ] 51:12\n    test.length(o.output, 2);\n    test.isTrue(setsEqual(o.output, [{removed: docId9}, {added: docId6}]));\n    clearOutput(o);\n    testOplogBufferIds([docId10, docId11]);\n    testSafeAppendToBufferFlag(false);\n\n    upd({ bar: { $gt: 25 } }, { $inc: { bar: -7.5 } }, { multi: true });\n    // State: [ 22:8 23:7 23.5:10 | 24:6 ] 33.5:11 43.5:12\n    // 33.5 doesn't update in-place in buffer, because it the driver is not sure\n    // it can do it: because the buffer does not have the safe append flag set,\n    // for all it knows there is a different doc which is less than 33.5.\n    test.length(o.output, 2);\n    test.isTrue(setsEqual(o.output, [{removed: docId6}, {added: docId10}]));\n    clearOutput(o);\n    testOplogBufferIds([docId6]);\n    testSafeAppendToBufferFlag(false);\n\n    // Force buffer objects to be moved into published set so we can check them\n    rem(docId7);\n    rem(docId8);\n    rem(docId10);\n    // State: [ 24:6 | ] 33.5:11 43.5:12\n    //    triggers repoll\n    // State: [ 24:6 33.5:11 43.5:12 | ]!\n    test.length(o.output, 6);\n    test.isTrue(setsEqual(o.output, [{removed: docId7}, {removed: docId8},\n                                     {removed: docId10}, {added: docId6},\n                                     {added: docId11}, {added: docId12}]));\n\n    test.length(_.keys(o.state), 3);\n    test.equal(o.state[docId6], { _id: docId6, foo: 22, bar: 24 });\n    test.equal(o.state[docId11], { _id: docId11, foo: 22, bar: 33.5 });\n    test.equal(o.state[docId12], { _id: docId12, foo: 22, bar: 43.5 });\n    clearOutput(o);\n    testOplogBufferIds([]);\n    testSafeAppendToBufferFlag(true);\n\n    var docId13 = ins({ foo: 22, bar: 50 });\n    var docId14 = ins({ foo: 22, bar: 51 });\n    var docId15 = ins({ foo: 22, bar: 52 });\n    var docId16 = ins({ foo: 22, bar: 53 });\n    // State: [ 24:6 33.5:11 43.5:12 | 50:13 51:14 52:15 ] 53:16\n    test.length(o.output, 0);\n    testOplogBufferIds([docId13, docId14, docId15]);\n    testSafeAppendToBufferFlag(false);\n\n    // Update something that's outside the buffer to be in the buffer, writing\n    // only to the sort key.\n    upd(docId16, {$set: {bar: 10}});\n    // State: [ 10:16 24:6 33.5:11 | 43.5:12 50:13 51:14 ] 52:15\n    test.length(o.output, 2);\n    test.isTrue(setsEqual(o.output, [{removed: docId12}, {added: docId16}]));\n    clearOutput(o);\n    testOplogBufferIds([docId12, docId13, docId14]);\n    testSafeAppendToBufferFlag(false);\n\n    o.handle.stop();\n    onComplete();\n  });\n\n  Tinytest.addAsync(\"mongo-livedata - observe sorted, limited, sort fields \" + idGeneration, function (test, onComplete) {\n    var run = test.runId();\n    var coll = new Mongo.Collection(\"observeLimit-\"+run, collectionOptions);\n\n    var observer = function () {\n      var state = {};\n      var output = [];\n      var callbacks = {\n        changed: function (newDoc) {\n          output.push({changed: newDoc._id});\n          state[newDoc._id] = newDoc;\n        },\n        added: function (newDoc) {\n          output.push({added: newDoc._id});\n          state[newDoc._id] = newDoc;\n        },\n        removed: function (oldDoc) {\n          output.push({removed: oldDoc._id});\n          delete state[oldDoc._id];\n        }\n      };\n      var handle = coll.find({}, {sort: {x: 1},\n                                  limit: 2,\n                                  fields: {y: 1}}).observe(callbacks);\n\n      return {output: output, handle: handle, state: state};\n    };\n    var clearOutput = function (o) { o.output.splice(0, o.output.length); };\n    var ins = function (doc) {\n      var id; runInFence(function () { id = coll.insert(doc); });\n      return id;\n    };\n    var rem = function (id) {\n      runInFence(function () { coll.remove(id); });\n    };\n\n    var o = observer();\n\n    var docId1 = ins({ x: 1, y: 1222 });\n    var docId2 = ins({ x: 5, y: 5222 });\n\n    test.length(o.output, 2);\n    test.equal(o.output, [{added: docId1}, {added: docId2}]);\n    clearOutput(o);\n\n    var docId3 = ins({ x: 7, y: 7222 });\n    test.length(o.output, 0);\n\n    var docId4 = ins({ x: -1, y: -1222 });\n\n    // Becomes [docId4 docId1 | docId2 docId3]\n    test.length(o.output, 2);\n    test.isTrue(setsEqual(o.output, [{added: docId4}, {removed: docId2}]));\n\n    test.equal(_.size(o.state), 2);\n    test.equal(o.state[docId4], {_id: docId4, y: -1222});\n    test.equal(o.state[docId1], {_id: docId1, y: 1222});\n    clearOutput(o);\n\n    rem(docId2);\n    // Becomes [docId4 docId1 | docId3]\n    test.length(o.output, 0);\n\n    rem(docId4);\n    // Becomes [docId1 docId3]\n    test.length(o.output, 2);\n    test.isTrue(setsEqual(o.output, [{added: docId3}, {removed: docId4}]));\n\n    test.equal(_.size(o.state), 2);\n    test.equal(o.state[docId3], {_id: docId3, y: 7222});\n    test.equal(o.state[docId1], {_id: docId1, y: 1222});\n    clearOutput(o);\n\n    onComplete();\n  });\n\n  Tinytest.addAsync(\"mongo-livedata - observe sorted, limited, big initial set\" + idGeneration, function (test, onComplete) {\n    var run = test.runId();\n    var coll = new Mongo.Collection(\"observeLimit-\"+run, collectionOptions);\n\n    var observer = function () {\n      var state = {};\n      var output = [];\n      var callbacks = {\n        changed: function (newDoc) {\n          output.push({changed: newDoc._id});\n          state[newDoc._id] = newDoc;\n        },\n        added: function (newDoc) {\n          output.push({added: newDoc._id});\n          state[newDoc._id] = newDoc;\n        },\n        removed: function (oldDoc) {\n          output.push({removed: oldDoc._id});\n          delete state[oldDoc._id];\n        }\n      };\n      var handle = coll.find({}, {sort: {x: 1, y: 1}, limit: 3})\n                    .observe(callbacks);\n\n      return {output: output, handle: handle, state: state};\n    };\n    var clearOutput = function (o) { o.output.splice(0, o.output.length); };\n    var ins = function (doc) {\n      var id; runInFence(function () { id = coll.insert(doc); });\n      return id;\n    };\n    var rem = function (id) {\n      runInFence(function () { coll.remove(id); });\n    };\n    // tests '_id' subfields for all documents in oplog buffer\n    var testOplogBufferIds = function (ids) {\n      var bufferIds = [];\n      o.handle._multiplexer._observeDriver._unpublishedBuffer.forEach(function (x, id) {\n        bufferIds.push(id);\n      });\n\n      test.isTrue(setsEqual(ids, bufferIds), \"expected: \" + ids + \"; got: \" + bufferIds);\n    };\n    var testSafeAppendToBufferFlag = function (expected) {\n      if (expected)\n        test.isTrue(o.handle._multiplexer._observeDriver._safeAppendToBuffer);\n      else\n        test.isFalse(o.handle._multiplexer._observeDriver._safeAppendToBuffer);\n    };\n\n    var ids = {};\n    _.each([2, 4, 1, 3, 5, 5, 9, 1, 3, 2, 5], function (x, i) {\n      ids[i] = ins({ x: x, y: i });\n    });\n\n    // Ensure that we are past all the 'i' entries before we run the query, so\n    // that we get the expected phase transitions.\n    waitUntilOplogCaughtUp();\n\n    var o = observer();\n    var usesOplog = o.handle._multiplexer._observeDriver._usesOplog;\n    //  x: [1 1 2 | 2 3 3] 4 5 5 5  9\n    // id: [2 7 0 | 9 3 8] 1 4 5 10 6\n\n    test.length(o.output, 3);\n    test.isTrue(setsEqual([{added: ids[2]}, {added: ids[7]}, {added: ids[0]}], o.output));\n    usesOplog && testOplogBufferIds([ids[9], ids[3], ids[8]]);\n    usesOplog && testSafeAppendToBufferFlag(false);\n    clearOutput(o);\n\n    rem(ids[0]);\n    //  x: [1 1 2 | 3 3] 4 5 5 5  9\n    // id: [2 7 9 | 3 8] 1 4 5 10 6\n    test.length(o.output, 2);\n    test.isTrue(setsEqual([{removed: ids[0]}, {added: ids[9]}], o.output));\n    usesOplog && testOplogBufferIds([ids[3], ids[8]]);\n    usesOplog && testSafeAppendToBufferFlag(false);\n    clearOutput(o);\n\n    rem(ids[7]);\n    //  x: [1 2 3 | 3] 4 5 5 5  9\n    // id: [2 9 3 | 8] 1 4 5 10 6\n    test.length(o.output, 2);\n    test.isTrue(setsEqual([{removed: ids[7]}, {added: ids[3]}], o.output));\n    usesOplog && testOplogBufferIds([ids[8]]);\n    usesOplog && testSafeAppendToBufferFlag(false);\n    clearOutput(o);\n\n    rem(ids[3]);\n    //  x: [1 2 3 | 4 5 5] 5  9\n    // id: [2 9 8 | 1 4 5] 10 6\n    test.length(o.output, 2);\n    test.isTrue(setsEqual([{removed: ids[3]}, {added: ids[8]}], o.output));\n    usesOplog && testOplogBufferIds([ids[1], ids[4], ids[5]]);\n    usesOplog && testSafeAppendToBufferFlag(false);\n    clearOutput(o);\n\n    rem({ x: {$lt: 4} });\n    //  x: [4 5 5 | 5  9]\n    // id: [1 4 5 | 10 6]\n    test.length(o.output, 6);\n    test.isTrue(setsEqual([{removed: ids[2]}, {removed: ids[9]}, {removed: ids[8]},\n                           {added: ids[5]}, {added: ids[4]}, {added: ids[1]}], o.output));\n    usesOplog && testOplogBufferIds([ids[10], ids[6]]);\n    usesOplog && testSafeAppendToBufferFlag(true);\n    clearOutput(o);\n\n\n    onComplete();\n  });\n}\n\n\ntestAsyncMulti('mongo-livedata - empty documents, ' + idGeneration, [\n  function (test, expect) {\n    this.collectionName = Random.id();\n    if (Meteor.isClient) {\n      Meteor.call('createInsecureCollection', this.collectionName);\n      Meteor.subscribe('c-' + this.collectionName, expect());\n    }\n  }, function (test, expect) {\n    var coll = new Mongo.Collection(this.collectionName, collectionOptions);\n\n    coll.insert({}, expect(function (err, id) {\n      test.isFalse(err);\n      test.isTrue(id);\n      var cursor = coll.find();\n      test.equal(cursor.count(), 1);\n    }));\n  }\n]);\n\n// Regression test for #2413.\ntestAsyncMulti('mongo-livedata - upsert without callback, ' + idGeneration, [\n  function (test, expect) {\n    this.collectionName = Random.id();\n    if (Meteor.isClient) {\n      Meteor.call('createInsecureCollection', this.collectionName);\n      Meteor.subscribe('c-' + this.collectionName, expect());\n    }\n  }, function (test, expect) {\n    var coll = new Mongo.Collection(this.collectionName, collectionOptions);\n\n    // No callback!  Before fixing #2413, this method never returned and\n    // so no future DDP methods worked either.\n    coll.upsert('foo', {bar: 1});\n    // Do something else on the same method and expect it to actually work.\n    // (If the bug comes back, this will 'async batch timeout'.)\n    coll.insert({}, expect(function(){}));\n  }\n]);\n\n// See https://github.com/meteor/meteor/issues/594.\ntestAsyncMulti('mongo-livedata - document with length, ' + idGeneration, [\n  function (test, expect) {\n    this.collectionName = Random.id();\n    if (Meteor.isClient) {\n      Meteor.call('createInsecureCollection', this.collectionName, collectionOptions);\n      Meteor.subscribe('c-' + this.collectionName, expect());\n    }\n  }, function (test, expect) {\n    var self = this;\n    var coll = self.coll = new Mongo.Collection(self.collectionName, collectionOptions);\n\n    coll.insert({foo: 'x', length: 0}, expect(function (err, id) {\n      test.isFalse(err);\n      test.isTrue(id);\n      self.docId = id;\n      test.equal(coll.findOne(self.docId),\n                 {_id: self.docId, foo: 'x', length: 0});\n    }));\n  },\n  function (test, expect) {\n    var self = this;\n    var coll = self.coll;\n    coll.update(self.docId, {$set: {length: 5}}, expect(function (err) {\n      test.isFalse(err);\n      test.equal(coll.findOne(self.docId),\n                 {_id: self.docId, foo: 'x', length: 5});\n    }));\n  }\n]);\n\ntestAsyncMulti('mongo-livedata - document with a date, ' + idGeneration, [\n  function (test, expect) {\n    this.collectionName = Random.id();\n    if (Meteor.isClient) {\n      Meteor.call('createInsecureCollection', this.collectionName, collectionOptions);\n      Meteor.subscribe('c-' + this.collectionName, expect());\n    }\n  }, function (test, expect) {\n\n    var coll = new Mongo.Collection(this.collectionName, collectionOptions);\n    var docId;\n    coll.insert({d: new Date(1356152390004)}, expect(function (err, id) {\n      test.isFalse(err);\n      test.isTrue(id);\n      docId = id;\n      var cursor = coll.find();\n      test.equal(cursor.count(), 1);\n      test.equal(coll.findOne().d.getFullYear(), 2012);\n    }));\n  }\n]);\n\ntestAsyncMulti('mongo-livedata - document goes through a transform, ' + idGeneration, [\n  function (test, expect) {\n    var self = this;\n    var seconds = function (doc) {\n      doc.seconds = function () {return doc.d.getSeconds();};\n      return doc;\n    };\n    TRANSFORMS[\"seconds\"] = seconds;\n    self.collectionOptions = {\n      idGeneration: idGeneration,\n      transform: seconds,\n      transformName: \"seconds\"\n    };\n    this.collectionName = Random.id();\n    if (Meteor.isClient) {\n      Meteor.call('createInsecureCollection', this.collectionName, collectionOptions);\n      Meteor.subscribe('c-' + this.collectionName, expect());\n    }\n  }, function (test, expect) {\n    var self = this;\n    self.coll = new Mongo.Collection(self.collectionName, self.collectionOptions);\n    var obs;\n    var expectAdd = expect(function (doc) {\n      test.equal(doc.seconds(), 50);\n    });\n    var expectRemove = expect(function (doc) {\n      test.equal(doc.seconds(), 50);\n      obs.stop();\n    });\n    self.coll.insert({d: new Date(1356152390004)}, expect(function (err, id) {\n      test.isFalse(err);\n      test.isTrue(id);\n      var cursor = self.coll.find();\n      obs = cursor.observe({\n        added: expectAdd,\n        removed: expectRemove\n      });\n      test.equal(cursor.count(), 1);\n      test.equal(cursor.fetch()[0].seconds(), 50);\n      test.equal(self.coll.findOne().seconds(), 50);\n      test.equal(self.coll.findOne({}, {transform: null}).seconds, undefined);\n      test.equal(self.coll.findOne({}, {\n        transform: function (doc) {return {seconds: doc.d.getSeconds()};}\n      }).seconds, 50);\n      self.coll.remove(id);\n    }));\n  },\n  function (test, expect) {\n    var self = this;\n    self.coll.insert({d: new Date(1356152390004)}, expect(function (err, id) {\n      test.isFalse(err);\n      test.isTrue(id);\n      self.id1 = id;\n    }));\n    self.coll.insert({d: new Date(1356152391004)}, expect(function (err, id) {\n      test.isFalse(err);\n      test.isTrue(id);\n      self.id2 = id;\n    }));\n  }\n]);\n\ntestAsyncMulti('mongo-livedata - transform sets _id if not present, ' + idGeneration, [\n  function (test, expect) {\n    var self = this;\n    var justId = function (doc) {\n      return _.omit(doc, '_id');\n    };\n    TRANSFORMS[\"justId\"] = justId;\n    var collectionOptions = {\n      idGeneration: idGeneration,\n      transform: justId,\n      transformName: \"justId\"\n    };\n    this.collectionName = Random.id();\n    if (Meteor.isClient) {\n      Meteor.call('createInsecureCollection', this.collectionName, collectionOptions);\n      Meteor.subscribe('c-' + this.collectionName, expect());\n    }\n  }, function (test, expect) {\n    var self = this;\n    self.coll = new Mongo.Collection(this.collectionName, collectionOptions);\n    self.coll.insert({}, expect(function (err, id) {\n      test.isFalse(err);\n      test.isTrue(id);\n      test.equal(self.coll.findOne()._id, id);\n    }));\n  }\n]);\n\nvar bin = Base64.decode(\n  \"TWFuIGlzIGRpc3Rpbmd1aXNoZWQsIG5vdCBvbmx5IGJ5IGhpcyBy\" +\n    \"ZWFzb24sIGJ1dCBieSB0aGlzIHNpbmd1bGFyIHBhc3Npb24gZnJv\" +\n    \"bSBvdGhlciBhbmltYWxzLCB3aGljaCBpcyBhIGx1c3Qgb2YgdGhl\" +\n    \"IG1pbmQsIHRoYXQgYnkgYSBwZXJzZXZlcmFuY2Ugb2YgZGVsaWdo\" +\n    \"dCBpbiB0aGUgY29udGludWVkIGFuZCBpbmRlZmF0aWdhYmxlIGdl\" +\n    \"bmVyYXRpb24gb2Yga25vd2xlZGdlLCBleGNlZWRzIHRoZSBzaG9y\" +\n    \"dCB2ZWhlbWVuY2Ugb2YgYW55IGNhcm5hbCBwbGVhc3VyZS4=\");\n\ntestAsyncMulti('mongo-livedata - document with binary data, ' + idGeneration, [\n  function (test, expect) {\n    // XXX probably shouldn't use EJSON's private test symbols\n    this.collectionName = Random.id();\n    if (Meteor.isClient) {\n      Meteor.call('createInsecureCollection', this.collectionName, collectionOptions);\n      Meteor.subscribe('c-' + this.collectionName, expect());\n    }\n  }, function (test, expect) {\n    var coll = new Mongo.Collection(this.collectionName, collectionOptions);\n    var docId;\n    coll.insert({b: bin}, expect(function (err, id) {\n      test.isFalse(err);\n      test.isTrue(id);\n      docId = id;\n      var cursor = coll.find();\n      test.equal(cursor.count(), 1);\n      var inColl = coll.findOne();\n      test.isTrue(EJSON.isBinary(inColl.b));\n      test.equal(inColl.b, bin);\n    }));\n  }\n]);\n\ntestAsyncMulti('mongo-livedata - document with a custom type, ' + idGeneration, [\n  function (test, expect) {\n    this.collectionName = Random.id();\n    if (Meteor.isClient) {\n      Meteor.call('createInsecureCollection', this.collectionName, collectionOptions);\n      Meteor.subscribe('c-' + this.collectionName, expect());\n    }\n  }, function (test, expect) {\n    var self = this;\n    self.coll = new Mongo.Collection(this.collectionName, collectionOptions);\n    var docId;\n    // Dog is implemented at the top of the file, outside of the idGeneration\n    // loop (so that we only call EJSON.addType once).\n    var d = new Dog(\"reginald\", \"purple\");\n    self.coll.insert({d: d}, expect(function (err, id) {\n      test.isFalse(err);\n      test.isTrue(id);\n      docId = id;\n      self.docId = docId;\n      var cursor = self.coll.find();\n      test.equal(cursor.count(), 1);\n      var inColl = self.coll.findOne();\n      test.isTrue(inColl);\n      inColl && test.equal(inColl.d.speak(), \"woof\");\n    }));\n  }, function (test, expect) {\n    var self = this;\n    self.coll.insert(new Dog(\"rover\", \"orange\"), expect(function (err, id) {\n      test.isTrue(err);\n      test.isFalse(id);\n    }));\n  }, function (test, expect) {\n    var self = this;\n    self.coll.update(\n      self.docId, new Dog(\"rover\", \"orange\"), expect(function (err) {\n        test.isTrue(err);\n      }));\n  }\n]);\n\nif (Meteor.isServer) {\n  Tinytest.addAsync(\"mongo-livedata - update return values, \" + idGeneration, function (test, onComplete) {\n    var run = test.runId();\n    var coll = new Mongo.Collection(\"livedata_update_result_\"+run, collectionOptions);\n\n    coll.insert({ foo: \"bar\" });\n    coll.insert({ foo: \"baz\" });\n    test.equal(coll.update({}, { $set: { foo: \"qux\" } }, { multi: true }),\n               2);\n    coll.update({}, { $set: { foo: \"quux\" } }, { multi: true }, function (err, result) {\n      test.isFalse(err);\n      test.equal(result, 2);\n      onComplete();\n    });\n  });\n\n  Tinytest.addAsync(\"mongo-livedata - remove return values, \" + idGeneration, function (test, onComplete) {\n    var run = test.runId();\n    var coll = new Mongo.Collection(\"livedata_update_result_\"+run, collectionOptions);\n\n    coll.insert({ foo: \"bar\" });\n    coll.insert({ foo: \"baz\" });\n    test.equal(coll.remove({}), 2);\n    coll.insert({ foo: \"bar\" });\n    coll.insert({ foo: \"baz\" });\n    coll.remove({}, function (err, result) {\n      test.isFalse(err);\n      test.equal(result, 2);\n      onComplete();\n    });\n  });\n\n\n  Tinytest.addAsync(\"mongo-livedata - id-based invalidation, \" + idGeneration, function (test, onComplete) {\n    var run = test.runId();\n    var coll = new Mongo.Collection(\"livedata_invalidation_collection_\"+run, collectionOptions);\n\n    coll.allow({\n      update: function () {return true;},\n      remove: function () {return true;}\n    });\n\n    var id1 = coll.insert({x: 42, is1: true});\n    var id2 = coll.insert({x: 50, is2: true});\n\n    var polls = {};\n    var handlesToStop = [];\n    var observe = function (name, query) {\n      var handle = coll.find(query).observeChanges({\n        // Make sure that we only poll on invalidation, not due to time, and\n        // keep track of when we do. Note: this option disables the use of\n        // oplogs (which admittedly is somewhat irrelevant to this feature).\n        _testOnlyPollCallback: function () {\n          polls[name] = (name in polls ? polls[name] + 1 : 1);\n        }\n      });\n      handlesToStop.push(handle);\n    };\n\n    observe(\"all\", {});\n    observe(\"id1Direct\", id1);\n    observe(\"id1InQuery\", {_id: id1, z: null});\n    observe(\"id2Direct\", id2);\n    observe(\"id2InQuery\", {_id: id2, z: null});\n    observe(\"bothIds\", {_id: {$in: [id1, id2]}});\n\n    var resetPollsAndRunInFence = function (f) {\n      polls = {};\n      runInFence(f);\n    };\n\n    // Update id1 directly. This should poll all but the \"id2\" queries. \"all\"\n    // and \"bothIds\" increment by 2 because they are looking at both.\n    resetPollsAndRunInFence(function () {\n      coll.update(id1, {$inc: {x: 1}});\n    });\n    test.equal(\n      polls,\n      {all: 1, id1Direct: 1, id1InQuery: 1, bothIds: 1});\n\n    // Update id2 using a funny query. This should poll all but the \"id1\"\n    // queries.\n    resetPollsAndRunInFence(function () {\n      coll.update({_id: id2, q: null}, {$inc: {x: 1}});\n    });\n    test.equal(\n      polls,\n      {all: 1, id2Direct: 1, id2InQuery: 1, bothIds: 1});\n\n    // Update both using a $in query. Should poll each of them exactly once.\n    resetPollsAndRunInFence(function () {\n      coll.update({_id: {$in: [id1, id2]}, q: null}, {$inc: {x: 1}});\n    });\n    test.equal(\n      polls,\n      {all: 1, id1Direct: 1, id1InQuery: 1, id2Direct: 1, id2InQuery: 1,\n       bothIds: 1});\n\n    _.each(handlesToStop, function (h) {h.stop();});\n    onComplete();\n  });\n\n  Tinytest.add(\"mongo-livedata - upsert error parse, \" + idGeneration, function (test) {\n    var run = test.runId();\n    var coll = new Mongo.Collection(\"livedata_upsert_errorparse_collection_\"+run, collectionOptions);\n\n    coll.insert({_id: 'foobar'});\n    var err;\n    try {\n      coll.update({_id: 'foobar'}, {_id: 'cowbar'});\n    } catch (e) {\n      err = e;\n    }\n    test.isTrue(err);\n    test.isTrue(MongoInternals.Connection._isCannotChangeIdError(err));\n\n    try {\n      coll.insert({_id: 'foobar'});\n    } catch (e) {\n      err = e;\n    }\n    test.isTrue(err);\n    // duplicate id error is not same as change id error\n    test.isFalse(MongoInternals.Connection._isCannotChangeIdError(err));\n  });\n\n} // end Meteor.isServer\n\n// This test is duplicated below (with some changes) for async upserts that go\n// over the network.\n_.each(Meteor.isServer ? [true, false] : [true], function (minimongo) {\n  _.each([true, false], function (useUpdate) {\n    _.each([true, false], function (useDirectCollection) {\n      Tinytest.add(\"mongo-livedata - \" + (useUpdate ? \"update \" : \"\") + \"upsert\" + (minimongo ? \" minimongo\" : \"\") + (useDirectCollection ? \" direct collection \" : \"\") + \", \" + idGeneration, function (test) {\n        var run = test.runId();\n        var options = collectionOptions;\n        // We don't get ids back when we use update() to upsert, or when we are\n        // directly calling MongoConnection.upsert().\n        var skipIds = useUpdate || (! minimongo && useDirectCollection);\n        if (minimongo)\n          options = _.extend({}, collectionOptions, { connection: null });\n        var coll = new Mongo.Collection(\n          \"livedata_upsert_collection_\"+run+\n            (useUpdate ? \"_update_\" : \"\") +\n            (minimongo ? \"_minimongo_\" : \"\") +\n            (useDirectCollection ? \"_direct_\" : \"\") + \"\",\n          options\n        );\n        if (useDirectCollection)\n          coll = coll._collection;\n\n        var result1 = upsert(coll, useUpdate, {foo: 'bar'}, {foo: 'bar'});\n        test.equal(result1.numberAffected, 1);\n        if (! skipIds)\n          test.isTrue(result1.insertedId);\n        compareResults(test, skipIds, coll.find().fetch(), [{foo: 'bar', _id: result1.insertedId}]);\n\n        var result2 = upsert(coll, useUpdate, {foo: 'bar'}, {foo: 'baz'});\n        test.equal(result2.numberAffected, 1);\n        if (! skipIds)\n          test.isFalse(result2.insertedId);\n        compareResults(test, skipIds, coll.find().fetch(), [{foo: 'baz', _id: result1.insertedId}]);\n\n        coll.remove({});\n\n        // Test values that require transformation to go into Mongo:\n\n        var t1 = new Mongo.ObjectID();\n        var t2 = new Mongo.ObjectID();\n        var result3 = upsert(coll, useUpdate, {foo: t1}, {foo: t1});\n        test.equal(result3.numberAffected, 1);\n        if (! skipIds)\n          test.isTrue(result3.insertedId);\n        compareResults(test, skipIds, coll.find().fetch(), [{foo: t1, _id: result3.insertedId}]);\n\n        var result4 = upsert(coll, useUpdate, {foo: t1}, {foo: t2});\n        test.equal(result2.numberAffected, 1);\n        if (! skipIds)\n          test.isFalse(result2.insertedId);\n        compareResults(test, skipIds, coll.find().fetch(), [{foo: t2, _id: result3.insertedId}]);\n\n        coll.remove({});\n\n        // Test modification by upsert\n\n        var result5 = upsert(coll, useUpdate, {name: 'David'}, {$set: {foo: 1}});\n        test.equal(result5.numberAffected, 1);\n        if (! skipIds)\n          test.isTrue(result5.insertedId);\n        var davidId = result5.insertedId;\n        compareResults(test, skipIds, coll.find().fetch(), [{name: 'David', foo: 1, _id: davidId}]);\n\n        test.throws(function () {\n          // test that bad modifier fails fast\n          upsert(coll, useUpdate, {name: 'David'}, {$blah: {foo: 2}});\n        });\n\n\n        var result6 = upsert(coll, useUpdate, {name: 'David'}, {$set: {foo: 2}});\n        test.equal(result6.numberAffected, 1);\n        if (! skipIds)\n          test.isFalse(result6.insertedId);\n        compareResults(test, skipIds, coll.find().fetch(), [{name: 'David', foo: 2,\n                                                               _id: result5.insertedId}]);\n\n        var emilyId = coll.insert({name: 'Emily', foo: 2});\n        compareResults(test, skipIds, coll.find().fetch(), [{name: 'David', foo: 2, _id: davidId},\n                                                              {name: 'Emily', foo: 2, _id: emilyId}]);\n\n        // multi update by upsert\n        var result7 = upsert(coll, useUpdate, {foo: 2},\n                             {$set: {bar: 7},\n                              $setOnInsert: {name: 'Fred', foo: 2}},\n                             {multi: true});\n        test.equal(result7.numberAffected, 2);\n        if (! skipIds)\n          test.isFalse(result7.insertedId);\n        compareResults(test, skipIds, coll.find().fetch(), [{name: 'David', foo: 2, bar: 7, _id: davidId},\n                                                              {name: 'Emily', foo: 2, bar: 7, _id: emilyId}]);\n\n        // insert by multi upsert\n        var result8 = upsert(coll, useUpdate, {foo: 3},\n                             {$set: {bar: 7},\n                              $setOnInsert: {name: 'Fred', foo: 2}},\n                             {multi: true});\n        test.equal(result8.numberAffected, 1);\n        if (! skipIds)\n          test.isTrue(result8.insertedId);\n        var fredId = result8.insertedId;\n        compareResults(test, skipIds, coll.find().fetch(),\n                       [{name: 'David', foo: 2, bar: 7, _id: davidId},\n                        {name: 'Emily', foo: 2, bar: 7, _id: emilyId},\n                        {name: 'Fred', foo: 2, bar: 7, _id: fredId}]);\n\n        // test `insertedId` option\n        var result9 = upsert(coll, useUpdate, {name: 'Steve'},\n                             {name: 'Steve'},\n                             {insertedId: 'steve'});\n        test.equal(result9.numberAffected, 1);\n        if (! skipIds)\n          test.equal(result9.insertedId, 'steve');\n        compareResults(test, skipIds, coll.find().fetch(),\n                       [{name: 'David', foo: 2, bar: 7, _id: davidId},\n                        {name: 'Emily', foo: 2, bar: 7, _id: emilyId},\n                        {name: 'Fred', foo: 2, bar: 7, _id: fredId},\n                        {name: 'Steve', _id: 'steve'}]);\n        test.isTrue(coll.findOne('steve'));\n        test.isFalse(coll.findOne('fred'));\n\n        // Test $ operator in selectors.\n\n        var result10 = upsert(coll, useUpdate,\n                              {$or: [{name: 'David'}, {name: 'Emily'}]},\n                              {$set: {foo: 3}}, {multi: true});\n        test.equal(result10.numberAffected, 2);\n        if (! skipIds)\n          test.isFalse(result10.insertedId);\n        compareResults(test, skipIds,\n                       [coll.findOne({name: 'David'}), coll.findOne({name: 'Emily'})],\n                       [{name: 'David', foo: 3, bar: 7, _id: davidId},\n                        {name: 'Emily', foo: 3, bar: 7, _id: emilyId}]\n                      );\n\n        var result11 = upsert(\n          coll, useUpdate,\n          {\n            name: 'Charlie',\n            $or: [{ foo: 2}, { bar: 7 }]\n          },\n          { $set: { foo: 3 } }\n        );\n        test.equal(result11.numberAffected, 1);\n        if (! skipIds)\n          test.isTrue(result11.insertedId);\n        var charlieId = result11.insertedId;\n        compareResults(test, skipIds,\n                       coll.find({ name: 'Charlie' }).fetch(),\n                       [{name: 'Charlie', foo: 3, _id: charlieId}]);\n      });\n    });\n  });\n});\n\nvar asyncUpsertTestName = function (useNetwork, useDirectCollection,\n                                    useUpdate, idGeneration) {\n  return \"mongo-livedata - async \" +\n    (useUpdate ? \"update \" : \"\") +\n    \"upsert \" +\n    (useNetwork ? \"over network \" : \"\") +\n    (useDirectCollection ? \", direct collection \" : \"\") +\n    idGeneration;\n};\n\n// This is a duplicate of the test above, with some changes to make it work for\n// callback style. On the client, we test server-backed and in-memory\n// collections, and run the tests for both the Mongo.Collection and the\n// LocalCollection. On the server, we test mongo-backed collections, for both\n// the Mongo.Collection and the MongoConnection.\n//\n// XXX Rewrite with testAsyncMulti, that would simplify things a lot!\n_.each(Meteor.isServer ? [false] : [true, false], function (useNetwork) {\n  _.each(useNetwork ? [false] : [true, false], function (useDirectCollection) {\n    _.each([true, false], function (useUpdate) {\n      Tinytest.addAsync(asyncUpsertTestName(useNetwork, useDirectCollection, useUpdate, idGeneration), function (test, onComplete) {\n        var coll;\n        var run = test.runId();\n        var collName = \"livedata_upsert_collection_\"+run+\n              (useUpdate ? \"_update_\" : \"\") +\n              (useNetwork ? \"_network_\" : \"\") +\n              (useDirectCollection ? \"_direct_\" : \"\");\n\n        var next0 = function () {\n          // Test starts here.\n          upsert(coll, useUpdate, {_id: 'foo'}, {_id: 'foo', foo: 'bar'}, next1);\n        };\n\n        if (useNetwork) {\n          Meteor.call(\"createInsecureCollection\", collName, collectionOptions);\n          coll = new Mongo.Collection(collName, collectionOptions);\n          Meteor.subscribe(\"c-\" + collName, next0);\n        } else {\n          var opts = _.clone(collectionOptions);\n          if (Meteor.isClient)\n            opts.connection = null;\n          coll = new Mongo.Collection(collName, opts);\n          if (useDirectCollection)\n            coll = coll._collection;\n        }\n\n        var result1;\n        var next1 = function (err, result) {\n          result1 = result;\n          test.equal(result1.numberAffected, 1);\n          if (! useUpdate) {\n            test.isTrue(result1.insertedId);\n            test.equal(result1.insertedId, 'foo');\n          }\n          compareResults(test, useUpdate, coll.find().fetch(), [{foo: 'bar', _id: 'foo'}]);\n          upsert(coll, useUpdate, {_id: 'foo'}, {foo: 'baz'}, next2);\n        };\n\n        if (! useNetwork) {\n          next0();\n        }\n\n        var t1, t2, result2;\n        var next2 = function (err, result) {\n          result2 = result;\n          test.equal(result2.numberAffected, 1);\n          if (! useUpdate)\n            test.isFalse(result2.insertedId);\n          compareResults(test, useUpdate, coll.find().fetch(), [{foo: 'baz', _id: result1.insertedId}]);\n          coll.remove({_id: 'foo'});\n          compareResults(test, useUpdate, coll.find().fetch(), []);\n\n          // Test values that require transformation to go into Mongo:\n\n          t1 = new Mongo.ObjectID();\n          t2 = new Mongo.ObjectID();\n          upsert(coll, useUpdate, {_id: t1}, {_id: t1, foo: 'bar'}, next3);\n        };\n\n        var result3;\n        var next3 = function (err, result) {\n          result3 = result;\n          test.equal(result3.numberAffected, 1);\n          if (! useUpdate) {\n            test.isTrue(result3.insertedId);\n            test.equal(t1, result3.insertedId);\n          }\n          compareResults(test, useUpdate, coll.find().fetch(), [{_id: t1, foo: 'bar'}]);\n\n          upsert(coll, useUpdate, {_id: t1}, {foo: t2}, next4);\n        };\n\n        var next4 = function (err, result4) {\n          test.equal(result2.numberAffected, 1);\n          if (! useUpdate)\n            test.isFalse(result2.insertedId);\n          compareResults(test, useUpdate, coll.find().fetch(), [{foo: t2, _id: result3.insertedId}]);\n\n          coll.remove({_id: t1});\n\n          // Test modification by upsert\n          upsert(coll, useUpdate, {_id: 'David'}, {$set: {foo: 1}}, next5);\n        };\n\n        var result5;\n        var next5 = function (err, result) {\n          result5 = result;\n          test.equal(result5.numberAffected, 1);\n          if (! useUpdate) {\n            test.isTrue(result5.insertedId);\n            test.equal(result5.insertedId, 'David');\n          }\n          var davidId = result5.insertedId;\n          compareResults(test, useUpdate, coll.find().fetch(), [{foo: 1, _id: davidId}]);\n\n          if (! Meteor.isClient && useDirectCollection) {\n            // test that bad modifier fails\n            // The stub throws an exception about the invalid modifier, which\n            // livedata logs (so we suppress it).\n            Meteor._suppress_log(1);\n            upsert(coll, useUpdate, {_id: 'David'}, {$blah: {foo: 2}}, function (err) {\n              if (! (Meteor.isClient && useDirectCollection))\n                test.isTrue(err);\n              upsert(coll, useUpdate, {_id: 'David'}, {$set: {foo: 2}}, next6);\n            });\n          } else {\n            // XXX skip this test for now for LocalCollection; the fact that\n            // we're in a nested sequence of callbacks means we're inside a\n            // Meteor.defer, which means the exception just gets\n            // logged. Something should be done about this at some point?  Maybe\n            // LocalCollection callbacks don't really have to be deferred.\n            upsert(coll, useUpdate, {_id: 'David'}, {$set: {foo: 2}}, next6);\n          }\n        };\n\n        var result6;\n        var next6 = function (err, result) {\n          result6 = result;\n          test.equal(result6.numberAffected, 1);\n          if (! useUpdate)\n            test.isFalse(result6.insertedId);\n          compareResults(test, useUpdate, coll.find().fetch(), [{_id: 'David', foo: 2}]);\n\n          var emilyId = coll.insert({_id: 'Emily', foo: 2});\n          compareResults(test, useUpdate, coll.find().fetch(), [{_id: 'David', foo: 2},\n                                                                {_id: 'Emily', foo: 2}]);\n\n          // multi update by upsert.\n          // We can't actually update multiple documents since we have to do it by\n          // id, but at least make sure the multi flag doesn't mess anything up.\n          upsert(coll, useUpdate, {_id: 'Emily'},\n                 {$set: {bar: 7},\n                  $setOnInsert: {name: 'Fred', foo: 2}},\n                 {multi: true}, next7);\n        };\n\n        var result7;\n        var next7 = function (err, result) {\n          result7 = result;\n          test.equal(result7.numberAffected, 1);\n          if (! useUpdate)\n            test.isFalse(result7.insertedId);\n          compareResults(test, useUpdate, coll.find().fetch(), [{_id: 'David', foo: 2},\n                                                                {_id: 'Emily', foo: 2, bar: 7}]);\n\n          // insert by multi upsert\n          upsert(coll, useUpdate, {_id: 'Fred'},\n                 {$set: {bar: 7},\n                  $setOnInsert: {name: 'Fred', foo: 2}},\n                 {multi: true}, next8);\n\n        };\n\n        var result8;\n        var next8 = function (err, result) {\n          result8 = result;\n\n          test.equal(result8.numberAffected, 1);\n          if (! useUpdate) {\n            test.isTrue(result8.insertedId);\n            test.equal(result8.insertedId, 'Fred');\n          }\n          var fredId = result8.insertedId;\n          compareResults(test, useUpdate,  coll.find().fetch(),\n                         [{_id: 'David', foo: 2},\n                          {_id: 'Emily', foo: 2, bar: 7},\n                          {name: 'Fred', foo: 2, bar: 7, _id: fredId}]);\n          onComplete();\n        };\n      });\n    });\n  });\n});\n\nif (Meteor.isClient) {\n  Tinytest.addAsync(\"mongo-livedata - async update/remove return values over network \" + idGeneration, function (test, onComplete) {\n    var coll;\n    var run = test.runId();\n    var collName = \"livedata_upsert_collection_\"+run;\n    Meteor.call(\"createInsecureCollection\", collName, collectionOptions);\n    coll = new Mongo.Collection(collName, collectionOptions);\n    Meteor.subscribe(\"c-\" + collName, function () {\n      coll.insert({ _id: \"foo\" });\n      coll.insert({ _id: \"bar\" });\n      coll.update({ _id: \"foo\" }, { $set: { foo: 1 } }, { multi: true }, function (err, result) {\n        test.isFalse(err);\n        test.equal(result, 1);\n        coll.update({ _id: \"foo\" }, { _id: \"foo\", foo: 2 }, function (err, result) {\n          test.isFalse(err);\n          test.equal(result, 1);\n          coll.update({ _id: \"baz\" }, { $set: { foo: 1 } }, function (err, result) {\n            test.isFalse(err);\n            test.equal(result, 0);\n            coll.remove({ _id: \"foo\" }, function (err, result) {\n              test.equal(result, 1);\n              coll.remove({ _id: \"baz\" }, function (err, result) {\n                test.equal(result, 0);\n                onComplete();\n              });\n            });\n          });\n        });\n      });\n    });\n  });\n}\n\n// Runs a method and its stub which do some upserts. The method throws an error\n// if we don't get the right return values.\nif (Meteor.isClient) {\n  _.each([true, false], function (useUpdate) {\n    Tinytest.addAsync(\"mongo-livedata - \" + (useUpdate ? \"update \" : \"\") + \"upsert in method, \" + idGeneration, function (test, onComplete) {\n      var run = test.runId();\n      upsertTestMethodColl = new Mongo.Collection(upsertTestMethod + \"_collection_\" + run, collectionOptions);\n      var m = {};\n      delete Meteor.connection._methodHandlers[upsertTestMethod];\n      m[upsertTestMethod] = function (run, useUpdate, options) {\n        upsertTestMethodImpl(upsertTestMethodColl, useUpdate, test);\n      };\n      Meteor.methods(m);\n      Meteor.call(upsertTestMethod, run, useUpdate, collectionOptions, function (err, result) {\n        test.isFalse(err);\n        onComplete();\n      });\n    });\n  });\n}\n\n_.each(Meteor.isServer ? [true, false] : [true], function (minimongo) {\n  _.each([true, false], function (useUpdate) {\n    Tinytest.add(\"mongo-livedata - \" + (useUpdate ? \"update \" : \"\") + \"upsert by id\" + (minimongo ? \" minimongo\" : \"\") + \", \" + idGeneration, function (test) {\n      var run = test.runId();\n      var options = collectionOptions;\n      if (minimongo)\n        options = _.extend({}, collectionOptions, { connection: null });\n      var coll = new Mongo.Collection(\"livedata_upsert_by_id_collection_\"+run, options);\n\n      var ret;\n      ret = upsert(coll, useUpdate, {_id: 'foo'}, {$set: {x: 1}});\n      test.equal(ret.numberAffected, 1);\n      if (! useUpdate)\n        test.equal(ret.insertedId, 'foo');\n      compareResults(test, useUpdate, coll.find().fetch(),\n                     [{_id: 'foo', x: 1}]);\n\n      ret = upsert(coll, useUpdate, {_id: 'foo'}, {$set: {x: 2}});\n      test.equal(ret.numberAffected, 1);\n      if (! useUpdate)\n        test.isFalse(ret.insertedId);\n      compareResults(test, useUpdate, coll.find().fetch(),\n                     [{_id: 'foo', x: 2}]);\n\n      ret = upsert(coll, useUpdate, {_id: 'bar'}, {$set: {x: 1}});\n      test.equal(ret.numberAffected, 1);\n      if (! useUpdate)\n        test.equal(ret.insertedId, 'bar');\n      compareResults(test, useUpdate, coll.find().fetch(),\n                     [{_id: 'foo', x: 2},\n                      {_id: 'bar', x: 1}]);\n\n      coll.remove({});\n      ret = upsert(coll, useUpdate, {_id: 'traq'}, {x: 1});\n\n      test.equal(ret.numberAffected, 1);\n      var myId = ret.insertedId;\n      if (useUpdate) {\n        myId = coll.findOne()._id;\n      }\n      // Starting with Mongo 2.6, upsert with entire document takes _id from the\n      // query, so the above upsert actually does an insert with _id traq\n      // instead of a random _id.  Whenever we are using our simulated upsert,\n      // we have this behavior (whether running against Mongo 2.4 or 2.6).\n      // https://jira.mongodb.org/browse/SERVER-5289\n      test.equal(myId, 'traq');\n      compareResults(test, useUpdate, coll.find().fetch(),\n                     [{x: 1, _id: 'traq'}]);\n\n      // this time, insert as _id 'traz'\n      ret = upsert(coll, useUpdate, {_id: 'traz'}, {_id: 'traz', x: 2});\n      test.equal(ret.numberAffected, 1);\n      if (! useUpdate)\n        test.equal(ret.insertedId, 'traz');\n      compareResults(test, useUpdate, coll.find().fetch(),\n                     [{x: 1, _id: 'traq'},\n                      {x: 2, _id: 'traz'}]);\n\n      // now update _id 'traz'\n      ret = upsert(coll, useUpdate, {_id: 'traz'}, {x: 3});\n      test.equal(ret.numberAffected, 1);\n      test.isFalse(ret.insertedId);\n      compareResults(test, useUpdate, coll.find().fetch(),\n                     [{x: 1, _id: 'traq'},\n                      {x: 3, _id: 'traz'}]);\n\n      // now update, passing _id (which is ok as long as it's the same)\n      ret = upsert(coll, useUpdate, {_id: 'traz'}, {_id: 'traz', x: 4});\n      test.equal(ret.numberAffected, 1);\n      test.isFalse(ret.insertedId);\n      compareResults(test, useUpdate, coll.find().fetch(),\n                     [{x: 1, _id: 'traq'},\n                      {x: 4, _id: 'traz'}]);\n\n    });\n  });\n});\n\n});  // end idGeneration parametrization\n\nTinytest.add('mongo-livedata - rewrite selector', function (test) {\n  test.equal(Mongo.Collection._rewriteSelector({x: /^o+B/im}),\n             {x: {$regex: '^o+B', $options: 'im'}});\n  test.equal(Mongo.Collection._rewriteSelector({x: {$regex: /^o+B/im}}),\n             {x: {$regex: '^o+B', $options: 'im'}});\n  test.equal(Mongo.Collection._rewriteSelector({x: /^o+B/}),\n             {x: {$regex: '^o+B'}});\n  test.equal(Mongo.Collection._rewriteSelector({x: {$regex: /^o+B/}}),\n             {x: {$regex: '^o+B'}});\n  test.equal(Mongo.Collection._rewriteSelector('foo'),\n             {_id: 'foo'});\n\n  test.equal(\n    Mongo.Collection._rewriteSelector(\n      {'$or': [\n        {x: /^o/},\n        {y: /^p/},\n        {z: 'q'},\n        {w: {$regex: /^r/}}\n      ]}\n    ),\n    {'$or': [\n      {x: {$regex: '^o'}},\n      {y: {$regex: '^p'}},\n      {z: 'q'},\n      {w: {$regex: '^r'}}\n    ]}\n  );\n\n  test.equal(\n    Mongo.Collection._rewriteSelector(\n      {'$or': [\n        {'$and': [\n          {x: /^a/i},\n          {y: /^b/},\n          {z: {$regex: /^c/i}},\n          {w: {$regex: '^[abc]', $options: 'i'}}, // make sure we don't break vanilla selectors\n          {v: {$regex: /O/, $options: 'i'}}, // $options should override the ones on the RegExp object\n          {u: {$regex: /O/m, $options: 'i'}} // $options should override the ones on the RegExp object\n        ]},\n        {'$nor': [\n          {s: /^d/},\n          {t: /^e/i},\n          {u: {$regex: /^f/i}},\n          // even empty string overrides built-in flags\n          {v: {$regex: /^g/i, $options: ''}}\n        ]}\n      ]}\n    ),\n    {'$or': [\n      {'$and': [\n        {x: {$regex: '^a', $options: 'i'}},\n        {y: {$regex: '^b'}},\n        {z: {$regex: '^c', $options: 'i'}},\n        {w: {$regex: '^[abc]', $options: 'i'}},\n        {v: {$regex: 'O', $options: 'i'}},\n        {u: {$regex: 'O', $options: 'i'}}\n      ]},\n      {'$nor': [\n        {s: {$regex: '^d'}},\n        {t: {$regex: '^e', $options: 'i'}},\n        {u: {$regex: '^f', $options: 'i'}},\n        {v: {$regex: '^g', $options: ''}}\n      ]}\n    ]}\n  );\n\n  var oid = new Mongo.ObjectID();\n  test.equal(Mongo.Collection._rewriteSelector(oid),\n             {_id: oid});\n});\n\ntestAsyncMulti('mongo-livedata - specified _id', [\n  function (test, expect) {\n    this.collectionName = Random.id();\n    if (Meteor.isClient) {\n      Meteor.call('createInsecureCollection', this.collectionName);\n      Meteor.subscribe('c-' + this.collectionName, expect());\n    }\n  }, function (test, expect) {\n    var expectError = expect(function (err, result) {\n      test.isTrue(err);\n      var doc = coll.findOne();\n      test.equal(doc.name, \"foo\");\n    });\n    var coll = new Mongo.Collection(this.collectionName);\n    coll.insert({_id: \"foo\", name: \"foo\"}, expect(function (err1, id) {\n      test.equal(id, \"foo\");\n      var doc = coll.findOne();\n      test.equal(doc._id, \"foo\");\n      Meteor._suppress_log(1);\n      coll.insert({_id: \"foo\", name: \"bar\"}, expectError);\n    }));\n  }\n]);\n\n\n// Consistent id generation tests\nfunction collectionInsert (test, expect, coll, index) {\n  var clientSideId = coll.insert({name: \"foo\"}, expect(function (err1, id) {\n    test.equal(id, clientSideId);\n    var o = coll.findOne(id);\n    test.isTrue(_.isObject(o));\n    test.equal(o.name, 'foo');\n  }));\n};\n\nfunction collectionUpsert (test, expect, coll, index) {\n  var upsertId = '123456' + index;\n\n  coll.upsert(upsertId, {$set: {name: \"foo\"}}, expect(function (err1, result) {\n    test.equal(result.insertedId, upsertId);\n    test.equal(result.numberAffected, 1);\n\n    var o = coll.findOne(upsertId);\n    test.isTrue(_.isObject(o));\n    test.equal(o.name, 'foo');\n  }));\n};\n\nfunction collectionUpsertExisting (test, expect, coll, index) {\n  var clientSideId = coll.insert({name: \"foo\"}, expect(function (err1, id) {\n    test.equal(id, clientSideId);\n\n    var o = coll.findOne(id);\n    test.isTrue(_.isObject(o));\n    // We're not testing sequencing/visibility rules here, so skip this check\n    // test.equal(o.name, 'foo');\n  }));\n\n  coll.upsert(clientSideId, {$set: {name: \"bar\"}}, expect(function (err1, result) {\n    test.equal(result.insertedId, clientSideId);\n    test.equal(result.numberAffected, 1);\n\n    var o = coll.findOne(clientSideId);\n    test.isTrue(_.isObject(o));\n    test.equal(o.name, 'bar');\n  }));\n};\n\nfunction functionCallsInsert (test, expect, coll, index) {\n  Meteor.call(\"insertObjects\", coll._name, {name: \"foo\"}, 1, expect(function (err1, ids) {\n    test.notEqual((INSERTED_IDS[coll._name] || []).length, 0);\n    var stubId = INSERTED_IDS[coll._name][index];\n\n    test.equal(ids.length, 1);\n    test.equal(ids[0], stubId);\n\n    var o = coll.findOne(stubId);\n    test.isTrue(_.isObject(o));\n    test.equal(o.name, 'foo');\n  }));\n};\n\nfunction functionCallsUpsert (test, expect, coll, index) {\n  var upsertId = '123456' + index;\n  Meteor.call(\"upsertObject\", coll._name, upsertId, {$set:{name: \"foo\"}}, expect(function (err1, result) {\n    test.equal(result.insertedId, upsertId);\n    test.equal(result.numberAffected, 1);\n\n    var o = coll.findOne(upsertId);\n    test.isTrue(_.isObject(o));\n    test.equal(o.name, 'foo');\n  }));\n};\n\nfunction functionCallsUpsertExisting (test, expect, coll, index) {\n  var id = coll.insert({name: \"foo\"});\n\n  var o = coll.findOne(id);\n  test.notEqual(null, o);\n  test.equal(o.name, 'foo');\n\n  Meteor.call(\"upsertObject\", coll._name, id, {$set:{name: \"bar\"}}, expect(function (err1, result) {\n    test.equal(result.numberAffected, 1);\n    test.equal(result.insertedId, undefined);\n\n    var o = coll.findOne(id);\n    test.isTrue(_.isObject(o));\n    test.equal(o.name, 'bar');\n  }));\n};\n\nfunction functionCalls3Inserts (test, expect, coll, index) {\n  Meteor.call(\"insertObjects\", coll._name, {name: \"foo\"}, 3, expect(function (err1, ids) {\n    test.notEqual((INSERTED_IDS[coll._name] || []).length, 0);\n    test.equal(ids.length, 3);\n\n    for (var i = 0; i < 3; i++) {\n      var stubId = INSERTED_IDS[coll._name][(3 * index) + i];\n      test.equal(ids[i], stubId);\n\n      var o = coll.findOne(stubId);\n      test.isTrue(_.isObject(o));\n      test.equal(o.name, 'foo');\n    }\n  }));\n};\n\nfunction functionChainInsert (test, expect, coll, index) {\n  Meteor.call(\"doMeteorCall\", \"insertObjects\", coll._name, {name: \"foo\"}, 1, expect(function (err1, ids) {\n    test.notEqual((INSERTED_IDS[coll._name] || []).length, 0);\n    var stubId = INSERTED_IDS[coll._name][index];\n\n    test.equal(ids.length, 1);\n    test.equal(ids[0], stubId);\n\n    var o = coll.findOne(stubId);\n    test.isTrue(_.isObject(o));\n    test.equal(o.name, 'foo');\n  }));\n};\n\nfunction functionChain2Insert (test, expect, coll, index) {\n  Meteor.call(\"doMeteorCall\", \"doMeteorCall\", \"insertObjects\", coll._name, {name: \"foo\"}, 1, expect(function (err1, ids) {\n    test.notEqual((INSERTED_IDS[coll._name] || []).length, 0);\n    var stubId = INSERTED_IDS[coll._name][index];\n\n    test.equal(ids.length, 1);\n    test.equal(ids[0], stubId);\n\n    var o = coll.findOne(stubId);\n    test.isTrue(_.isObject(o));\n    test.equal(o.name, 'foo');\n  }));\n};\n\nfunction functionChain2Upsert (test, expect, coll, index) {\n  var upsertId = '123456' + index;\n  Meteor.call(\"doMeteorCall\", \"doMeteorCall\", \"upsertObject\", coll._name, upsertId, {$set:{name: \"foo\"}}, expect(function (err1, result) {\n    test.equal(result.insertedId, upsertId);\n    test.equal(result.numberAffected, 1);\n\n    var o = coll.findOne(upsertId);\n    test.isTrue(_.isObject(o));\n    test.equal(o.name, 'foo');\n  }));\n};\n\n_.each( {collectionInsert: collectionInsert,\n         collectionUpsert: collectionUpsert,\n         functionCallsInsert: functionCallsInsert,\n         functionCallsUpsert: functionCallsUpsert,\n         functionCallsUpsertExisting: functionCallsUpsertExisting,\n         functionCalls3Insert: functionCalls3Inserts,\n         functionChainInsert: functionChainInsert,\n         functionChain2Insert: functionChain2Insert,\n         functionChain2Upsert: functionChain2Upsert}, function (fn, name) {\n_.each( [1, 3], function (repetitions) {\n_.each( [1, 3], function (collectionCount) {\n_.each( ['STRING', 'MONGO'], function (idGeneration) {\n\n  testAsyncMulti('mongo-livedata - consistent _id generation ' + name + ', ' + repetitions + ' repetitions on ' + collectionCount + ' collections, idGeneration=' + idGeneration, [ function (test, expect) {\n    var collectionOptions = { idGeneration: idGeneration };\n\n    var cleanups = this.cleanups = [];\n    this.collections = _.times(collectionCount, function () {\n      var collectionName = \"consistentid_\" + Random.id();\n      if (Meteor.isClient) {\n        Meteor.call('createInsecureCollection', collectionName, collectionOptions);\n        Meteor.subscribe('c-' + collectionName, expect());\n        cleanups.push(function (expect) { Meteor.call('dropInsecureCollection', collectionName, expect(function () {})); });\n      }\n\n      var collection = new Mongo.Collection(collectionName, collectionOptions);\n      if (Meteor.isServer) {\n        cleanups.push(function () { collection._dropCollection(); });\n      }\n      COLLECTIONS[collectionName] = collection;\n      return collection;\n    });\n  }, function (test, expect) {\n    // now run the actual test\n    for (var i = 0; i < repetitions; i++) {\n      for (var j = 0; j < collectionCount; j++) {\n        fn(test, expect, this.collections[j], i);\n      }\n    }\n  }, function (test, expect) {\n    // Run any registered cleanup functions (e.g. to drop collections)\n    _.each(this.cleanups, function(cleanup) {\n      cleanup(expect);\n    });\n  }]);\n\n});\n});\n});\n});\n\n\n\ntestAsyncMulti('mongo-livedata - empty string _id', [\n  function (test, expect) {\n    var self = this;\n    self.collectionName = Random.id();\n    if (Meteor.isClient) {\n      Meteor.call('createInsecureCollection', self.collectionName);\n      Meteor.subscribe('c-' + self.collectionName, expect());\n    }\n    self.coll = new Mongo.Collection(self.collectionName);\n    try {\n      self.coll.insert({_id: \"\", f: \"foo\"});\n      test.fail(\"Insert with an empty _id should fail\");\n    } catch (e) {\n      // ok\n    }\n    self.coll.insert({_id: \"realid\", f: \"bar\"}, expect(function (err, res) {\n      test.equal(res, \"realid\");\n    }));\n  },\n  function (test, expect) {\n    var self = this;\n    var docs = self.coll.find().fetch();\n    test.equal(docs, [{_id: \"realid\", f: \"bar\"}]);\n  },\n  function (test, expect) {\n    var self = this;\n    if (Meteor.isServer) {\n      self.coll._collection.insert({_id: \"\", f: \"baz\"});\n      test.equal(self.coll.find().fetch().length, 2);\n    }\n  }\n]);\n\n\nif (Meteor.isServer) {\n\n  testAsyncMulti(\"mongo-livedata - minimongo on server to server connection\", [\n    function (test, expect) {\n      var self = this;\n      Meteor._debug(\"connection setup\");\n      self.id = Random.id();\n      var C = self.C = new Mongo.Collection(\"ServerMinimongo_\" + self.id);\n      C.allow({\n        insert: function () {return true;},\n        update: function () {return true;},\n        remove: function () {return true;}\n      });\n      C.insert({a: 0, b: 1});\n      C.insert({a: 0, b: 2});\n      C.insert({a: 1, b: 3});\n      Meteor.publish(self.id, function () {\n        return C.find({a: 0});\n      });\n\n      self.conn = DDP.connect(Meteor.absoluteUrl());\n      pollUntil(expect, function () {\n        return self.conn.status().connected;\n      }, 10000);\n    },\n\n    function (test, expect) {\n      var self = this;\n      if (self.conn.status().connected) {\n        self.miniC = new Mongo.Collection(\"ServerMinimongo_\" + self.id, {\n          connection: self.conn\n        });\n        var exp = expect(function (err) {\n          test.isFalse(err);\n        });\n        self.conn.subscribe(self.id, {\n          onError: exp,\n          onReady: exp\n        });\n      }\n    },\n\n    function (test, expect) {\n      var self = this;\n      if (self.miniC) {\n        var contents = self.miniC.find().fetch();\n        test.equal(contents.length, 2);\n        test.equal(contents[0].a, 0);\n      }\n    },\n\n    function (test, expect) {\n      var self = this;\n      if (!self.miniC)\n        return;\n      self.miniC.insert({a:0, b:3});\n      var contents = self.miniC.find({b:3}).fetch();\n      test.equal(contents.length, 1);\n      test.equal(contents[0].a, 0);\n    }\n  ]);\n\n  testAsyncMulti(\"mongo-livedata - minimongo observe on server\", [\n    function (test, expect) {\n      var self = this;\n      self.id = Random.id();\n      self.C = new Mongo.Collection(\"ServerMinimongoObserve_\" + self.id);\n      self.events = [];\n\n      Meteor.publish(self.id, function () {\n        return self.C.find();\n      });\n\n      self.conn = DDP.connect(Meteor.absoluteUrl());\n      pollUntil(expect, function () {\n        return self.conn.status().connected;\n      }, 10000);\n    },\n\n    function (test, expect) {\n      var self = this;\n      if (self.conn.status().connected) {\n        self.miniC = new Mongo.Collection(\"ServerMinimongoObserve_\" + self.id, {\n          connection: self.conn\n        });\n        var exp = expect(function (err) {\n          test.isFalse(err);\n        });\n        self.conn.subscribe(self.id, {\n          onError: exp,\n          onReady: exp\n        });\n      }\n    },\n\n    function (test, expect) {\n      var self = this;\n      if (self.miniC) {\n        self.obs = self.miniC.find().observeChanges({\n          added: function (id, fields) {\n            self.events.push({evt: \"a\", id: id});\n            Meteor._sleepForMs(200);\n            self.events.push({evt: \"b\", id: id});\n          }\n        });\n        self.one = self.C.insert({});\n        self.two = self.C.insert({});\n        pollUntil(expect, function () {\n          return self.events.length === 4;\n        }, 10000);\n      }\n    },\n\n    function (test, expect) {\n      var self = this;\n      if (self.miniC) {\n        test.equal(self.events, [\n          {evt: \"a\", id: self.one},\n          {evt: \"b\", id: self.one},\n          {evt: \"a\", id: self.two},\n          {evt: \"b\", id: self.two}\n        ]);\n      }\n      self.obs && self.obs.stop();\n    }\n  ]);\n}\n\nTinytest.addAsync(\"mongo-livedata - local collections with different connections\", function (test, onComplete) {\n  var cname = Random.id();\n  var cname2 = Random.id();\n  var coll1 = new Mongo.Collection(cname);\n  var doc = { foo: \"bar\" };\n  var coll2 = new Mongo.Collection(cname2, { connection: null });\n  coll2.insert(doc, function (err, id) {\n    test.equal(coll1.find(doc).count(), 0);\n    test.equal(coll2.find(doc).count(), 1);\n    onComplete();\n  });\n});\n\nTinytest.addAsync(\"mongo-livedata - local collection with null connection, w/ callback\", function (test, onComplete) {\n  var cname = Random.id();\n  var coll1 = new Mongo.Collection(cname, { connection: null });\n  var doc = { foo: \"bar\" };\n  var docId = coll1.insert(doc, function (err, id) {\n    test.equal(docId, id);\n    test.equal(coll1.findOne(doc)._id, id);\n    onComplete();\n  });\n});\n\nTinytest.addAsync(\"mongo-livedata - local collection with null connection, w/o callback\", function (test, onComplete) {\n  var cname = Random.id();\n  var coll1 = new Mongo.Collection(cname, { connection: null });\n  var doc = { foo: \"bar\" };\n  var docId = coll1.insert(doc);\n  test.equal(coll1.findOne(doc)._id, docId);\n  onComplete();\n});\n\ntestAsyncMulti(\"mongo-livedata - update handles $push with $each correctly\", [\n  function (test, expect) {\n    var self = this;\n    var collectionName = Random.id();\n    if (Meteor.isClient) {\n      Meteor.call('createInsecureCollection', collectionName);\n      Meteor.subscribe('c-' + collectionName, expect());\n    }\n\n    self.collection = new Mongo.Collection(collectionName);\n\n    self.id = self.collection.insert(\n      {name: 'jens', elements: ['X', 'Y']}, expect(function (err, res) {\n        test.isFalse(err);\n        test.equal(self.id, res);\n        }));\n  },\n  function (test, expect) {\n    var self = this;\n    self.collection.update(self.id, {\n      $push: {\n        elements: {\n          $each: ['A', 'B', 'C'],\n          $slice: -4\n        }}}, expect(function (err, res) {\n          test.isFalse(err);\n          test.equal(\n            self.collection.findOne(self.id),\n            {_id: self.id, name: 'jens', elements: ['Y', 'A', 'B', 'C']});\n        }));\n  }\n]);\n\nif (Meteor.isServer) {\n  Tinytest.add(\"mongo-livedata - upsert handles $push with $each correctly\", function (test) {\n    var collection = new Mongo.Collection(Random.id());\n\n    var result = collection.upsert(\n      {name: 'jens'},\n      {$push: {\n        elements: {\n          $each: ['A', 'B', 'C'],\n          $slice: -4\n        }}});\n\n    test.equal(collection.findOne(result.insertedId),\n               {_id: result.insertedId,\n                name: 'jens',\n                elements: ['A', 'B', 'C']});\n\n    var id = collection.insert({name: \"david\", elements: ['X', 'Y']});\n    result = collection.upsert(\n      {name: 'david'},\n      {$push: {\n        elements: {\n          $each: ['A', 'B', 'C'],\n          $slice: -4\n        }}});\n\n    test.equal(collection.findOne(id),\n               {_id: id,\n                name: 'david',\n                elements: ['Y', 'A', 'B', 'C']});\n  });\n\n  Tinytest.add(\"mongo-livedata - upsert handles dotted selectors corrrectly\", function (test) {\n    var collection = new Mongo.Collection(Random.id());\n\n    var result1 = collection.upsert({\n      \"subdocument.a\": 1\n    }, {\n      $set: {message: \"upsert 1\"}\n    });\n\n    test.equal(collection.findOne(result1.insertedId),{\n      _id: result1.insertedId,\n      subdocument: {a: 1},\n      message: \"upsert 1\"\n    });\n\n    var result2 = collection.upsert({\n      \"subdocument.a\": 1\n    }, {\n      $set: {message: \"upsert 2\"}\n    });\n\n    test.equal(result2, {numberAffected: 1});\n\n    test.equal(collection.findOne(result1.insertedId),{\n      _id: result1.insertedId,\n      subdocument: {a: 1},\n      message: \"upsert 2\"\n    });\n\n    var result3 = collection.upsert({\n      \"subdocument.a.b\": 1,\n      \"subdocument.c\": 2\n    }, {\n      $set: {message: \"upsert3\"}\n    });\n\n    test.equal(collection.findOne(result3.insertedId),{\n      _id: result3.insertedId,\n      subdocument: {a: {b: 1}, c: 2},\n      message: \"upsert3\"\n    });\n\n    var result4 = collection.upsert({\n      \"subdocument.a\": 4\n    }, {\n      $set: {\"subdocument.a\": \"upsert 4\"}\n    });\n\n    test.equal(collection.findOne(result4.insertedId), {\n      _id: result4.insertedId,\n      subdocument: {a: \"upsert 4\"}\n    });\n\n    var result5 = collection.upsert({\n      \"subdocument.a\": \"upsert 4\"\n    }, {\n      $set: {\"subdocument.a\": \"upsert 5\"}\n    });\n\n    test.equal(result5, {numberAffected: 1});\n\n    test.equal(collection.findOne(result4.insertedId), {\n      _id: result4.insertedId,\n      subdocument: {a: \"upsert 5\"}\n    });\n\n    var result6 = collection.upsert({\n      \"subdocument.a\": \"upsert 5\"\n    }, {\n      $set: {\"subdocument\": \"upsert 6\"}\n    });\n\n    test.equal(result6, {numberAffected: 1});\n\n    test.equal(collection.findOne(result4.insertedId), {\n      _id: result4.insertedId,\n      subdocument: \"upsert 6\"\n    });\n\n    var result7 = collection.upsert({\n      \"subdocument.a.b\": 7\n    }, {\n      $set: {\n        \"subdocument.a.c\": \"upsert7\"\n      }\n    });\n\n    test.equal(collection.findOne(result7.insertedId), {\n      _id: result7.insertedId,\n      subdocument: {\n        a: {b: 7, c: \"upsert7\"}\n      }\n    });\n\n    var result8 = collection.upsert({\n      \"subdocument.a.b\": 7\n    }, {\n      $set: {\n        \"subdocument.a.c\": \"upsert8\"\n      }\n    });\n\n    test.equal(result8, {numberAffected: 1});\n\n    test.equal(collection.findOne(result7.insertedId), {\n      _id: result7.insertedId,\n      subdocument: {\n        a: {b: 7, c: \"upsert8\"}\n      }\n    });\n\n    var result9 = collection.upsert({\n      \"subdocument.a.b\": 7\n    }, {\n      $set: {\n        \"subdocument.a.b\": \"upsert9\"\n      }\n    });\n\n    test.equal(result9, {numberAffected: 1});\n\n    test.equal(collection.findOne(result7.insertedId), {\n      _id: result7.insertedId,\n      subdocument: {\n        a: {b: \"upsert9\", c: \"upsert8\"}\n      }\n    });\n\n  });\n}\n\n// This is a VERY white-box test.\nMeteor.isServer && Tinytest.add(\"mongo-livedata - oplog - _disableOplog\", function (test) {\n  var collName = Random.id();\n  var coll = new Mongo.Collection(collName);\n  if (MongoInternals.defaultRemoteCollectionDriver().mongo._oplogHandle) {\n    var observeWithOplog = coll.find({x: 5})\n          .observeChanges({added: function () {}});\n    test.isTrue(observeWithOplog._multiplexer._observeDriver._usesOplog);\n    observeWithOplog.stop();\n  }\n  var observeWithoutOplog = coll.find({x: 6}, {_disableOplog: true})\n        .observeChanges({added: function () {}});\n  test.isFalse(observeWithoutOplog._multiplexer._observeDriver._usesOplog);\n  observeWithoutOplog.stop();\n});\n\nMeteor.isServer && Tinytest.add(\"mongo-livedata - oplog - include selector fields\", function (test) {\n  var collName = \"includeSelector\" + Random.id();\n  var coll = new Mongo.Collection(collName);\n\n  var docId = coll.insert({a: 1, b: [3, 2], c: 'foo'});\n  test.isTrue(docId);\n\n  // Wait until we've processed the insert oplog entry. (If the insert shows up\n  // during the observeChanges, the bug in question is not consistently\n  // reproduced.) We don't have to do this for polling observe (eg\n  // --disable-oplog).\n  waitUntilOplogCaughtUp();\n\n  var output = [];\n  var handle = coll.find({a: 1, b: 2}, {fields: {c: 1}}).observeChanges({\n    added: function (id, fields) {\n      output.push(['added', id, fields]);\n    },\n    changed: function (id, fields) {\n      output.push(['changed', id, fields]);\n    },\n    removed: function (id) {\n      output.push(['removed', id]);\n    }\n  });\n  // Initially should match the document.\n  test.length(output, 1);\n  test.equal(output.shift(), ['added', docId, {c: 'foo'}]);\n\n  // Update in such a way that, if we only knew about the published field 'c'\n  // and the changed field 'b' (but not the field 'a'), we would think it didn't\n  // match any more.  (This is a regression test for a bug that existed because\n  // we used to not use the shared projection in the initial query.)\n  runInFence(function () {\n    coll.update(docId, {$set: {'b.0': 2, c: 'bar'}});\n  });\n  test.length(output, 1);\n  test.equal(output.shift(), ['changed', docId, {c: 'bar'}]);\n\n  handle.stop();\n});\n\nMeteor.isServer && Tinytest.add(\"mongo-livedata - oplog - transform\", function (test) {\n  var collName = \"oplogTransform\" + Random.id();\n  var coll = new Mongo.Collection(collName);\n\n  var docId = coll.insert({a: 25, x: {x: 5, y: 9}});\n  test.isTrue(docId);\n\n  // Wait until we've processed the insert oplog entry. (If the insert shows up\n  // during the observeChanges, the bug in question is not consistently\n  // reproduced.) We don't have to do this for polling observe (eg\n  // --disable-oplog).\n  waitUntilOplogCaughtUp();\n\n  var cursor = coll.find({}, {transform: function (doc) {\n    return doc.x;\n  }});\n\n  var changesOutput = [];\n  var changesHandle = cursor.observeChanges({\n    added: function (id, fields) {\n      changesOutput.push(['added', fields]);\n    }\n  });\n  // We should get untransformed fields via observeChanges.\n  test.length(changesOutput, 1);\n  test.equal(changesOutput.shift(), ['added', {a: 25, x: {x: 5, y: 9}}]);\n  changesHandle.stop();\n\n  var transformedOutput = [];\n  var transformedHandle = cursor.observe({\n    added: function (doc) {\n      transformedOutput.push(['added', doc]);\n    }\n  });\n  test.length(transformedOutput, 1);\n  test.equal(transformedOutput.shift(), ['added', {x: 5, y: 9}]);\n  transformedHandle.stop();\n});\n\n\nMeteor.isServer && Tinytest.add(\"mongo-livedata - oplog - drop collection/db\", function (test) {\n  // This test uses a random database, so it can be dropped without affecting\n  // anything else.\n  var mongodbUri = Npm.require('mongodb-uri');\n  var parsedUri = mongodbUri.parse(process.env.MONGO_URL);\n  parsedUri.database = 'dropDB' + Random.id();\n  var driver = new MongoInternals.RemoteCollectionDriver(\n    mongodbUri.format(parsedUri), {\n      oplogUrl: process.env.MONGO_OPLOG_URL\n    }\n  );\n\n  var collName = \"dropCollection\" + Random.id();\n  var coll = new Mongo.Collection(collName, { _driver: driver });\n\n  var doc1Id = coll.insert({a: 'foo', c: 1});\n  var doc2Id = coll.insert({b: 'bar'});\n  var doc3Id = coll.insert({a: 'foo', c: 2});\n  var tmp;\n\n  var output = [];\n  var handle = coll.find({a: 'foo'}).observeChanges({\n    added: function (id, fields) {\n      output.push(['added', id, fields]);\n    },\n    changed: function (id) {\n      output.push(['changed']);\n    },\n    removed: function (id) {\n      output.push(['removed', id]);\n    }\n  });\n  test.length(output, 2);\n  // make order consistent\n  if (output.length === 2 && output[0][1] === doc3Id) {\n    tmp = output[0];\n    output[0] = output[1];\n    output[1] = tmp;\n  }\n  test.equal(output.shift(), ['added', doc1Id, {a: 'foo', c: 1}]);\n  test.equal(output.shift(), ['added', doc3Id, {a: 'foo', c: 2}]);\n\n  // Wait until we've processed the insert oplog entry, so that we are in a\n  // steady state (and we don't see the dropped docs because we are FETCHING).\n  waitUntilOplogCaughtUp();\n\n  // Drop the collection. Should remove all docs.\n  runInFence(function () {\n    coll._dropCollection();\n  });\n\n  test.length(output, 2);\n  // make order consistent\n  if (output.length === 2 && output[0][1] === doc3Id) {\n    tmp = output[0];\n    output[0] = output[1];\n    output[1] = tmp;\n  }\n  test.equal(output.shift(), ['removed', doc1Id]);\n  test.equal(output.shift(), ['removed', doc3Id]);\n\n  // Put something back in.\n  var doc4Id;\n  runInFence(function () {\n    doc4Id = coll.insert({a: 'foo', c: 3});\n  });\n\n  test.length(output, 1);\n  test.equal(output.shift(), ['added', doc4Id, {a: 'foo', c: 3}]);\n\n  // Now drop the database. Should remove all docs again.\n  runInFence(function () {\n    driver.mongo.dropDatabase();\n  });\n\n  test.length(output, 1);\n  test.equal(output.shift(), ['removed', doc4Id]);\n\n  handle.stop();\n  driver.mongo.close();\n});\n\nvar TestCustomType = function (head, tail) {\n  // use different field names on the object than in JSON, to ensure we are\n  // actually treating this as an opaque object.\n  this.myHead = head;\n  this.myTail = tail;\n};\n_.extend(TestCustomType.prototype, {\n  clone: function () {\n    return new TestCustomType(this.myHead, this.myTail);\n  },\n  equals: function (other) {\n    return other instanceof TestCustomType\n      && EJSON.equals(this.myHead, other.myHead)\n      && EJSON.equals(this.myTail, other.myTail);\n  },\n  typeName: function () {\n    return 'someCustomType';\n  },\n  toJSONValue: function () {\n    return {head: this.myHead, tail: this.myTail};\n  }\n});\n\nEJSON.addType('someCustomType', function (json) {\n  return new TestCustomType(json.head, json.tail);\n});\n\ntestAsyncMulti(\"mongo-livedata - oplog - update EJSON\", [\n  function (test, expect) {\n    var self = this;\n    var collectionName = \"ejson\" + Random.id();\n    if (Meteor.isClient) {\n      Meteor.call('createInsecureCollection', collectionName);\n      Meteor.subscribe('c-' + collectionName, expect());\n    }\n\n    self.collection = new Mongo.Collection(collectionName);\n    self.date = new Date;\n    self.objId = new Mongo.ObjectID;\n\n    self.id = self.collection.insert(\n      {d: self.date, oi: self.objId,\n       custom: new TestCustomType('a', 'b')},\n      expect(function (err, res) {\n        test.isFalse(err);\n        test.equal(self.id, res);\n      }));\n  },\n  function (test, expect) {\n    var self = this;\n    self.changes = [];\n    self.handle = self.collection.find({}).observeChanges({\n      added: function (id, fields) {\n        self.changes.push(['a', id, fields]);\n      },\n      changed: function (id, fields) {\n        self.changes.push(['c', id, fields]);\n      },\n      removed: function (id) {\n        self.changes.push(['r', id]);\n      }\n    });\n    test.length(self.changes, 1);\n    test.equal(self.changes.shift(),\n               ['a', self.id,\n                {d: self.date, oi: self.objId,\n                 custom: new TestCustomType('a', 'b')}]);\n\n    // First, replace the entire custom object.\n    // (runInFence is useful for the server, using expect() is useful for the\n    // client)\n    runInFence(function () {\n      self.collection.update(\n        self.id, {$set: {custom: new TestCustomType('a', 'c')}},\n        expect(function (err) {\n          test.isFalse(err);\n        }));\n    });\n  },\n  function (test, expect) {\n    var self = this;\n    test.length(self.changes, 1);\n    test.equal(self.changes.shift(),\n               ['c', self.id, {custom: new TestCustomType('a', 'c')}]);\n\n    // Now, sneakily replace just a piece of it. Meteor won't do this, but\n    // perhaps you are accessing Mongo directly.\n    runInFence(function () {\n      self.collection.update(\n        self.id, {$set: {'custom.EJSON$value.EJSONtail': 'd'}},\n      expect(function (err) {\n        test.isFalse(err);\n      }));\n    });\n  },\n  function (test, expect) {\n    var self = this;\n    test.length(self.changes, 1);\n    test.equal(self.changes.shift(),\n               ['c', self.id, {custom: new TestCustomType('a', 'd')}]);\n\n    // Update a date and an ObjectID too.\n    self.date2 = new Date(self.date.valueOf() + 1000);\n    self.objId2 = new Mongo.ObjectID;\n    runInFence(function () {\n      self.collection.update(\n        self.id, {$set: {d: self.date2, oi: self.objId2}},\n      expect(function (err) {\n        test.isFalse(err);\n      }));\n    });\n  },\n  function (test, expect) {\n    var self = this;\n    test.length(self.changes, 1);\n    test.equal(self.changes.shift(),\n               ['c', self.id, {d: self.date2, oi: self.objId2}]);\n\n    self.handle.stop();\n  }\n]);\n\n\nvar waitUntilOplogCaughtUp = function () {\n  var oplogHandle =\n        MongoInternals.defaultRemoteCollectionDriver().mongo._oplogHandle;\n  if (oplogHandle)\n    oplogHandle.waitUntilCaughtUp();\n};\n\n\nMeteor.isServer && Tinytest.add(\"mongo-livedata - cursor dedup stop\", function (test) {\n  var coll = new Mongo.Collection(Random.id());\n  _.times(100, function () {\n    coll.insert({foo: 'baz'});\n  });\n  var handler = coll.find({}).observeChanges({\n    added: function (id) {\n      coll.update(id, {$set: {foo: 'bar'}});\n    }\n  });\n  handler.stop();\n  // Previously, this would print\n  //    Exception in queued task: TypeError: Object.keys called on non-object\n  // Unfortunately, this test didn't fail before the bugfix, but it at least\n  // would print the error and no longer does.\n  // See https://github.com/meteor/meteor/issues/2070\n});\n\ntestAsyncMulti(\"mongo-livedata - undefined find options\", [\n  function (test, expect) {\n    var self = this;\n    self.collName = Random.id();\n    if (Meteor.isClient) {\n      Meteor.call(\"createInsecureCollection\", self.collName);\n      Meteor.subscribe(\"c-\" + self.collName, expect());\n    }\n  },\n  function (test, expect) {\n    var self = this;\n    self.coll = new Mongo.Collection(self.collName);\n    self.doc = { foo: 1, bar: 2, _id: \"foobar\" };\n    self.coll.insert(self.doc, expect(function (err, id) {\n      test.isFalse(err);\n    }));\n  },\n  function (test, expect) {\n    var self = this;\n    var result = self.coll.findOne({ foo: 1 }, {\n      fields: undefined,\n      sort: undefined,\n      limit: undefined,\n      skip: undefined\n    });\n    test.equal(result, self.doc);\n  }\n]);\n\n// Regression test for #2274.\nMeteor.isServer && testAsyncMulti(\"mongo-livedata - observe limit bug\", [\n  function (test, expect) {\n    var self = this;\n    self.coll = new Mongo.Collection(Random.id());\n    var state = {};\n    var callbacks = {\n      changed: function (newDoc) {\n        state[newDoc._id] = newDoc;\n      },\n      added: function (newDoc) {\n        state[newDoc._id] = newDoc;\n      },\n      removed: function (oldDoc) {\n        delete state[oldDoc._id];\n      }\n    };\n    self.observe = self.coll.find(\n      {}, {limit: 1, sort: {sortField: -1}}).observe(callbacks);\n\n    // Insert some documents.\n    runInFence(function () {\n      self.id0 = self.coll.insert({sortField: 0, toDelete: true});\n      self.id1 = self.coll.insert({sortField: 1, toDelete: true});\n      self.id2 = self.coll.insert({sortField: 2, toDelete: true});\n    });\n    test.equal(_.keys(state), [self.id2]);\n\n    // Mutate the one in the unpublished buffer and the one below the\n    // buffer. Before the fix for #2274, this left the observe state machine in\n    // a broken state where the buffer was empty but it wasn't try to re-fill\n    // it.\n    runInFence(function () {\n      self.coll.update({_id: {$ne: self.id2}},\n                       {$set: {toDelete: false}},\n                       {multi: 1});\n    });\n    test.equal(_.keys(state), [self.id2]);\n\n    // Now remove the one published document. This should slide up id1 from the\n    // buffer, but this didn't work before the #2274 fix.\n    runInFence(function () {\n      self.coll.remove({toDelete: true});\n    });\n    test.equal(_.keys(state), [self.id1]);\n  }\n]);\n\nMeteor.isServer && testAsyncMulti(\"mongo-livedata - update with replace forbidden\", [\n  function (test, expect) {\n    var c = new Mongo.Collection(Random.id());\n\n    var id = c.insert({ foo: \"bar\" });\n\n    c.update(id, { foo2: \"bar2\" });\n    test.equal(c.findOne(id), { _id: id, foo2: \"bar2\" });\n\n    test.throws(function () {\n      c.update(id, { foo3: \"bar3\" }, { _forbidReplace: true });\n    }, \"Replacements are forbidden\");\n    test.equal(c.findOne(id), { _id: id, foo2: \"bar2\" });\n\n    test.throws(function () {\n      c.update(id, { foo3: \"bar3\", $set: { blah: 1 } });\n    }, \"cannot have both modifier and non-modifier fields\");\n    test.equal(c.findOne(id), { _id: id, foo2: \"bar2\" });\n  }\n]);\n\nMeteor.isServer && Tinytest.add(\n  \"mongo-livedata - connection failure throws\",\n  function (test) {\n    test.throws(function () {\n      new MongoInternals.Connection('mongodb://this-does-not-exist.test/asdf');\n    });\n  }\n);\n\nMeteor.isServer && Tinytest.add(\"mongo-livedata - npm modules\", function (test) {\n  // Make sure the version number looks like a version number.\n  test.matches(MongoInternals.NpmModules.mongodb.version, /^1\\.(\\d+)\\.(\\d+)/);\n  test.equal(typeof(MongoInternals.NpmModules.mongodb.module), 'function');\n  test.equal(typeof(MongoInternals.NpmModules.mongodb.module.connect),\n             'function');\n  test.equal(typeof(MongoInternals.NpmModules.mongodb.module.ObjectID),\n             'function');\n\n  var c = new Mongo.Collection(Random.id());\n  var rawCollection = c.rawCollection();\n  test.isTrue(rawCollection);\n  test.isTrue(rawCollection.findAndModify);\n  var rawDb = c.rawDatabase();\n  test.isTrue(rawDb);\n  test.isTrue(rawDb.admin);\n});\n\nif (Meteor.isServer) {\n  Tinytest.add(\"mongo-livedata - update/remove don't accept an array as a selector #4804\", function (test) {\n    var collection = new Mongo.Collection(Random.id());\n\n    _.times(10, function () {\n      collection.insert({ data: \"Hello\" });\n    });\n\n    test.equal(collection.find().count(), 10);\n\n    // Test several array-related selectors\n    _.each([[], [1, 2, 3], [{}]], function (selector) {\n      test.throws(function () {\n        collection.remove(selector);\n      });\n\n      test.throws(function () {\n        collection.update(selector, {$set: 5});\n      });\n    });\n\n    test.equal(collection.find().count(), 10);\n  });\n}\n\n// This is a regression test for https://github.com/meteor/meteor/issues/4839.\n// Prior to fixing the issue (but after applying\n// https://github.com/meteor/meteor/pull/4694), doing a Mongo write from a\n// timeout that ran after a method body (invoked via the client) would throw an\n// error \"fence has already activated -- too late to add a callback\" and not\n// properly call the Mongo write's callback.  In this test:\n//  - The client invokes a method (fenceOnBeforeFireError1) which\n//    - Starts an observe on a query\n//    - Creates a timeout (which shares a write fence with the method)\n//    - Lets the method return (firing the write fence)\n//  - The timeout runs and does a Mongo write. This write is inside a write\n//    fence (because timeouts preserve the fence, see dcd26415) but the write\n//    fence already fired.\n//  - The Mongo write's callback confirms that there is no error. This was\n//    not the case before fixing the bug!  (Note that the observe was necessary\n//    for the error to occur, because the error was thrown from the observe's\n//    crossbar listener callback).  It puts the confirmation into a Future.\n//  - The client invokes another method which reads the confirmation from\n//    the future. (Well, the invocation happened earlier but the use of the\n//    Future sequences it so that the confirmation only gets read at this point.)\nif (Meteor.isClient) {\n  testAsyncMulti(\"mongo-livedata - fence onBeforeFire error\", [\n    function (test, expect) {\n      var self = this;\n      self.nonce = Random.id();\n      Meteor.call('fenceOnBeforeFireError1', self.nonce, expect(function (err) {\n        test.isFalse(err);\n      }));\n    },\n    function (test, expect) {\n      var self = this;\n      Meteor.call('fenceOnBeforeFireError2', self.nonce, expect(\n        function (err, success) {\n          test.isFalse(err);\n          test.isTrue(success);\n        }\n      ));\n    }\n  ]);\n} else {\n  var fenceOnBeforeFireErrorCollection = new Mongo.Collection(\"FOBFE\");\n  var Future = Npm.require('fibers/future');\n  var futuresByNonce = {};\n  Meteor.methods({\n    fenceOnBeforeFireError1: function (nonce) {\n      futuresByNonce[nonce] = new Future;\n      var observe = fenceOnBeforeFireErrorCollection.find({nonce: nonce})\n            .observeChanges({added: function (){}});\n      Meteor.setTimeout(function () {\n        fenceOnBeforeFireErrorCollection.insert(\n          {nonce: nonce},\n          function (err, result) {\n            var success = !err && result;\n            futuresByNonce[nonce].return(success);\n            observe.stop();\n          }\n        );\n      }, 10);\n    },\n    fenceOnBeforeFireError2: function (nonce) {\n      try {\n        return futuresByNonce[nonce].wait();\n      } finally {\n        delete futuresByNonce[nonce];\n      }\n    }\n  });\n}\n"]},"hash":"b13e5566f9432c76141adee6acb4c55d7ab3f526"}
