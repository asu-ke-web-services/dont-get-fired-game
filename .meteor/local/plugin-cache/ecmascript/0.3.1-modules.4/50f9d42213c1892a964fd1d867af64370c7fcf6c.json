{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"LocalCollectionDriver = function () {\n  var self = this;\n  self.noConnCollections = {};\n};\n\nvar ensureCollection = function (name, collections) {\n  if (!(name in collections)) collections[name] = new LocalCollection(name);\n  return collections[name];\n};\n\n_.extend(LocalCollectionDriver.prototype, {\n  open: function (name, conn) {\n    var self = this;\n    if (!name) return new LocalCollection();\n    if (!conn) {\n      return ensureCollection(name, self.noConnCollections);\n    }\n    if (!conn._mongo_livedata_collections) conn._mongo_livedata_collections = {};\n    // XXX is there a way to keep track of a connection's collections without\n    // dangling it off the connection object?\n    return ensureCollection(name, conn._mongo_livedata_collections);\n  }\n});\n\n// singleton\nLocalCollectionDriver = new LocalCollectionDriver();","ast":null,"map":{"version":3,"sources":["/packages/mongo/local_collection_driver.js"],"names":[],"mappings":"AAAA,qBAAqB,GAAG,YAAY;AAClC,MAAI,IAAI,GAAG,IAAI,CAAC;AAChB,MAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;CAC7B,CAAC;;AAEF,IAAI,gBAAgB,GAAG,UAAU,IAAI,EAAE,WAAW,EAAE;AAClD,MAAI,EAAE,IAAI,IAAI,WAAW,CAAA,AAAC,EACxB,WAAW,CAAC,IAAI,CAAC,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;AAChD,SAAO,WAAW,CAAC,IAAI,CAAC,CAAC;CAC1B,CAAC;;AAEF,CAAC,CAAC,MAAM,CAAC,qBAAqB,CAAC,SAAS,EAAE;AACxC,MAAI,EAAE,UAAU,IAAI,EAAE,IAAI,EAAE;AAC1B,QAAI,IAAI,GAAG,IAAI,CAAC;AAChB,QAAI,CAAC,IAAI,EACP,OAAO,IAAI,eAAe,EAAA,CAAC;AAC7B,QAAI,CAAE,IAAI,EAAE;AACV,aAAO,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;KACvD;AACD,QAAI,CAAE,IAAI,CAAC,2BAA2B,EACpC,IAAI,CAAC,2BAA2B,GAAG,EAAE,CAAC;;;AAGxC,WAAO,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,2BAA2B,CAAC,CAAC;GACjE;CACF,CAAC,CAAC;;;AAGH,qBAAqB,GAAG,IAAI,qBAAqB,EAAA,CAAC","file":"/packages/mongo/local_collection_driver.js.map","sourcesContent":["LocalCollectionDriver = function () {\n  var self = this;\n  self.noConnCollections = {};\n};\n\nvar ensureCollection = function (name, collections) {\n  if (!(name in collections))\n    collections[name] = new LocalCollection(name);\n  return collections[name];\n};\n\n_.extend(LocalCollectionDriver.prototype, {\n  open: function (name, conn) {\n    var self = this;\n    if (!name)\n      return new LocalCollection;\n    if (! conn) {\n      return ensureCollection(name, self.noConnCollections);\n    }\n    if (! conn._mongo_livedata_collections)\n      conn._mongo_livedata_collections = {};\n    // XXX is there a way to keep track of a connection's collections without\n    // dangling it off the connection object?\n    return ensureCollection(name, conn._mongo_livedata_collections);\n  }\n});\n\n// singleton\nLocalCollectionDriver = new LocalCollectionDriver;\n"]},"hash":"50f9d42213c1892a964fd1d867af64370c7fcf6c"}
