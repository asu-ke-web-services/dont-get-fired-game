{"metadata":{"modules":{"imports":[{"source":"../rules/action-points-rule","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"ActionPointsRule"}]},{"source":"../rules/production-cap-rule","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"ProductionCapRule"}]},{"source":"../rules/material-costs-rule","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"MaterialCostsRule"}]},{"source":"../rules/quarter-sales-rule","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"QuarterSalesRule"}]},{"source":"../rules/quarter-costs-rule","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"QuarterCostsRule"}]},{"source":"../rules/quarter-cash-flow-rule","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"QuarterCashFlowRule"}]}],"exports":{"exported":["Company"],"specifiers":[{"kind":"local","local":"Company","exported":"default"}]}},"usedHelpers":["class-call-check","interop-require-default"]},"ignored":false,"code":"exports.__esModule = true;\n\nvar _rulesActionPointsRule = require('../rules/action-points-rule');\n\nvar _rulesActionPointsRule2 = babelHelpers.interopRequireDefault(_rulesActionPointsRule);\n\nvar _rulesProductionCapRule = require('../rules/production-cap-rule');\n\nvar _rulesProductionCapRule2 = babelHelpers.interopRequireDefault(_rulesProductionCapRule);\n\nvar _rulesMaterialCostsRule = require('../rules/material-costs-rule');\n\nvar _rulesMaterialCostsRule2 = babelHelpers.interopRequireDefault(_rulesMaterialCostsRule);\n\nvar _rulesQuarterSalesRule = require('../rules/quarter-sales-rule');\n\nvar _rulesQuarterSalesRule2 = babelHelpers.interopRequireDefault(_rulesQuarterSalesRule);\n\nvar _rulesQuarterCostsRule = require('../rules/quarter-costs-rule');\n\nvar _rulesQuarterCostsRule2 = babelHelpers.interopRequireDefault(_rulesQuarterCostsRule);\n\nvar _rulesQuarterCashFlowRule = require('../rules/quarter-cash-flow-rule');\n\nvar _rulesQuarterCashFlowRule2 = babelHelpers.interopRequireDefault(_rulesQuarterCashFlowRule);\n\nvar Company = (function () {\n    function Company(options) {\n        babelHelpers.classCallCheck(this, Company);\n\n        this.name = options.name;\n        this.capital = options.capital;\n        this.industry = options.industry;\n        this.goal = options.goal;\n        this.marketPenetration = options.marketPenetration;\n        this.numberOfFactories = options.numberOfFactories;\n        this.averageFactoryEfficiency = options.averageFactoryEfficiency;\n        this.programCosts = options.programCosts;\n        this.companySatisfaction = options.companySatisfaction;\n        this.customerSatisfaction = options.customerSatisfaction;\n\n        this.actionPointsRule = new _rulesActionPointsRule2['default']();\n        this.productionCapRule = new _rulesProductionCapRule2['default']();\n        this.materialCostsRule = new _rulesMaterialCostsRule2['default']();\n        this.salesRule = new _rulesQuarterSalesRule2['default']();\n        this.costsRule = new _rulesQuarterCostsRule2['default']();\n        this.cashFlowRule = new _rulesQuarterCashFlowRule2['default']();\n    }\n\n    Company.prototype.addFactory = (function () {\n        function addFactory() {\n            // TODO descrease cash\n            // TODO add a factory\n        }\n\n        return addFactory;\n    })();\n\n    Company.prototype.getCalculatedMetrics = (function () {\n        function getCalculatedMetrics() {\n            var actionPoints = this.actionPointsRule.calculate(this.companySatisfaction);\n            var productionCap = this.productionCapRule.calculate(this.industry.potentialSalesPerQuarter, this.marketPenetration, this.averageFactoryEfficiency, this.numberOfFactories, this.industry.maximumOutputPerFactory);\n            var sales = this.salesRule.calculate(this.marketPenetration, this.industry.getCalculatedMetrics().marketSizeInDollars, this.industry.maximumOutputPerFactory, this.averageFactoryEfficiency, this.numberOfFactories);\n            var costs = this.costsRule.calculate(this.industry.quarterCostPerFactory, this.numberOfFactories, this.averageFactoryEfficiency, this.materialCostsRule.calculate(this.industry.materialCostsPerSale, productionCap), this.programCosts);\n            var cashFlow = this.cashFlowRule.calculate(sales, costs);\n            // TODO calculate waste\n\n            return { actionPoints: actionPoints, productionCap: productionCap, sales: sales, costs: costs, cashFlow: cashFlow };\n        }\n\n        return getCalculatedMetrics;\n    })();\n\n    return Company;\n})();\n\nexports['default'] = Company;\nmodule.exports = exports['default'];","ast":null,"map":{"version":3,"sources":["/client/models/company.js"],"names":[],"mappings":";;qCAA6B,6BAA6B;;;;sCAC5B,8BAA8B;;;;sCAC9B,8BAA8B;;;;qCAC/B,6BAA6B;;;;qCAC7B,6BAA6B;;;;wCAC1B,iCAAiC;;;;IAE5C,OAAO;AACf,aADQ,OAAO,CACd,OAAO,EAAE;0CADF,OAAO;;AAExB,YAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;AACzB,YAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;AAC/B,YAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;AACjC,YAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;AACzB,YAAI,CAAC,iBAAiB,GAAG,OAAO,CAAC,iBAAiB,CAAC;AACnD,YAAI,CAAC,iBAAiB,GAAG,OAAO,CAAC,iBAAiB,CAAC;AACnD,YAAI,CAAC,wBAAwB,GAAG,OAAO,CAAC,wBAAwB,CAAC;AACjE,YAAI,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;AACzC,YAAI,CAAC,mBAAmB,GAAG,OAAO,CAAC,mBAAmB,CAAC;AACvD,YAAI,CAAC,oBAAoB,GAAG,OAAO,CAAC,oBAAoB,CAAC;;AAEzD,YAAI,CAAC,gBAAgB,GAAG,wCAAsB,CAAC;AAC/C,YAAI,CAAC,iBAAiB,GAAG,yCAAuB,CAAC;AACjD,YAAI,CAAC,iBAAiB,GAAG,yCAAuB,CAAC;AACjD,YAAI,CAAC,SAAS,GAAG,wCAAsB,CAAC;AACxC,YAAI,CAAC,SAAS,GAAG,wCAAsB,CAAC;AACxC,YAAI,CAAC,YAAY,GAAG,2CAAyB,CAAC;KAC/C;;AAnBkB,WAAO,WAqB1B,UAAU;AAAA,8BAAG;;;SAGZ;;;;;AAxBkB,WAAO,WA0B1B,oBAAoB;AAAA,wCAAG;AACrB,gBAAI,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAC9C,IAAI,CAAC,mBAAmB,CAC3B,CAAC;AACF,gBAAI,aAAa,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAChD,IAAI,CAAC,QAAQ,CAAC,wBAAwB,EACtC,IAAI,CAAC,iBAAiB,EACtB,IAAI,CAAC,wBAAwB,EAC7B,IAAI,CAAC,iBAAiB,EACtB,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CACxC,CAAC;AACF,gBAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAChC,IAAI,CAAC,iBAAiB,EACtB,IAAI,CAAC,QAAQ,CAAC,oBAAoB,EAAE,CAAC,mBAAmB,EACxD,IAAI,CAAC,QAAQ,CAAC,uBAAuB,EACrC,IAAI,CAAC,wBAAwB,EAC7B,IAAI,CAAC,iBAAiB,CACzB,CAAC;AACF,gBAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAChC,IAAI,CAAC,QAAQ,CAAC,qBAAqB,EACnC,IAAI,CAAC,iBAAiB,EACtB,IAAI,CAAC,wBAAwB,EAC7B,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAC5B,IAAI,CAAC,QAAQ,CAAC,oBAAoB,EAClC,aAAa,CAChB,EACD,IAAI,CAAC,YAAY,CACpB,CAAC;AACF,gBAAI,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CACtC,KAAK,EACL,KAAK,CACR,CAAC;;;AAGF,mBAAO,EAAC,YAAY,EAAZ,YAAY,EAAE,aAAa,EAAb,aAAa,EAAE,KAAK,EAAL,KAAK,EAAE,KAAK,EAAL,KAAK,EAAE,QAAQ,EAAR,QAAQ,EAAC,CAAC;SAC9D;;;;;WA7DkB,OAAO;;;qBAAP,OAAO","file":"/client/models/company.js.map","sourcesContent":["import ActionPointsRule from '../rules/action-points-rule';\nimport ProductionCapRule from '../rules/production-cap-rule';\nimport MaterialCostsRule from '../rules/material-costs-rule';\nimport QuarterSalesRule from '../rules/quarter-sales-rule';\nimport QuarterCostsRule from '../rules/quarter-costs-rule';\nimport QuarterCashFlowRule from '../rules/quarter-cash-flow-rule';\n\nexport default class Company {\n  constructor(options) {\n    this.name = options.name;\n    this.capital = options.capital;\n    this.industry = options.industry;\n    this.goal = options.goal;\n    this.marketPenetration = options.marketPenetration;\n    this.numberOfFactories = options.numberOfFactories;\n    this.averageFactoryEfficiency = options.averageFactoryEfficiency;\n    this.programCosts = options.programCosts;\n    this.companySatisfaction = options.companySatisfaction;\n    this.customerSatisfaction = options.customerSatisfaction;\n\n    this.actionPointsRule = new ActionPointsRule();\n    this.productionCapRule = new ProductionCapRule();\n    this.materialCostsRule = new MaterialCostsRule();\n    this.salesRule = new QuarterSalesRule();\n    this.costsRule = new QuarterCostsRule();\n    this.cashFlowRule = new QuarterCashFlowRule();\n  }\n\n  addFactory() {\n    // TODO descrease cash\n    // TODO add a factory\n  }\n\n  getCalculatedMetrics() {\n    let actionPoints = this.actionPointsRule.calculate(\n        this.companySatisfaction\n    );\n    let productionCap = this.productionCapRule.calculate(\n        this.industry.potentialSalesPerQuarter,\n        this.marketPenetration,\n        this.averageFactoryEfficiency,\n        this.numberOfFactories,\n        this.industry.maximumOutputPerFactory\n    );\n    let sales = this.salesRule.calculate(\n        this.marketPenetration,\n        this.industry.getCalculatedMetrics().marketSizeInDollars,\n        this.industry.maximumOutputPerFactory,\n        this.averageFactoryEfficiency,\n        this.numberOfFactories\n    );\n    let costs = this.costsRule.calculate(\n        this.industry.quarterCostPerFactory,\n        this.numberOfFactories,\n        this.averageFactoryEfficiency,\n        this.materialCostsRule.calculate(\n            this.industry.materialCostsPerSale,\n            productionCap\n        ),\n        this.programCosts\n    );\n    let cashFlow = this.cashFlowRule.calculate(\n        sales,\n        costs\n    );\n    // TODO calculate waste\n\n    return {actionPoints, productionCap, sales, costs, cashFlow};\n  }\n}\n"]},"hash":"5f1b81ed549710393e67b62946644124b8102676"}
