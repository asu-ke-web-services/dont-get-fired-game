{"source":"__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; },\n  slice = [].slice;\n\n_.extend(TAPi18n.prototype, {\n  _languageSpecificTranslators: null,\n  _languageSpecificTranslatorsTrackers: null,\n  _getLanguageFilePath: function(lang_tag) {\n    var path;\n    if (!this._enabled()) {\n      return null;\n    }\n    path = this.conf.cdn_path != null ? this.conf.cdn_path : this.conf.i18n_files_route;\n    path = path.replace(/\\/$/, \"\");\n    if (Meteor.isCordova && path[0] === \"/\") {\n      path = Meteor.absoluteUrl().replace(/\\/+$/, \"\") + path;\n    }\n    return path + \"/\" + lang_tag + \".json\";\n  },\n  _loadLanguage: function(languageTag) {\n    var dependencyLoadDfd, dfd, directDependencyLanguageTag, loadLanguageTag, project_languages;\n    dfd = new $.Deferred();\n    if (!this._enabled()) {\n      return dfd.reject(\"tap-i18n is not enabled in the project level, check tap-i18n README\");\n    }\n    project_languages = this._getProjectLanguages();\n    if (indexOf.call(project_languages, languageTag) >= 0) {\n      if (indexOf.call(this._loaded_languages, languageTag) < 0) {\n        loadLanguageTag = (function(_this) {\n          return function() {\n            var jqXHR;\n            jqXHR = $.getJSON(_this._getLanguageFilePath(languageTag));\n            jqXHR.done(function(data) {\n              _this._loadLangFileObject(languageTag, data);\n              _this._loaded_languages.push(languageTag);\n              return dfd.resolve();\n            });\n            return jqXHR.fail(function(xhr, error_code) {\n              return dfd.reject(\"Couldn't load language '\" + languageTag + \"' JSON: \" + error_code);\n            });\n          };\n        })(this);\n        directDependencyLanguageTag = indexOf.call(languageTag, \"-\") >= 0 ? languageTag.replace(/-.*/, \"\") : fallback_language;\n        if (languageTag !== fallback_language && indexOf.call(project_languages, directDependencyLanguageTag) >= 0) {\n          dependencyLoadDfd = this._loadLanguage(directDependencyLanguageTag);\n          dependencyLoadDfd.done((function(_this) {\n            return function() {\n              return loadLanguageTag();\n            };\n          })(this));\n          dependencyLoadDfd.fail((function(_this) {\n            return function(message) {\n              return dfd.reject((\"Loading process failed since dependency language '\" + directDependencyLanguageTag + \"' failed to load: \") + message);\n            };\n          })(this));\n        } else {\n          loadLanguageTag();\n        }\n      } else {\n        dfd.resolve();\n      }\n    } else {\n      dfd.reject([\"Language \" + languageTag + \" is not supported\"]);\n    }\n    return dfd.promise();\n  },\n  _registerHelpers: function(package_name, template) {\n    var helpers, tapI18nextProxy, underscore_helper;\n    if (package_name !== globals.project_translations_domain) {\n      tapI18nextProxy = this._getPackageI18nextProxy(this.packages[package_name].namespace);\n    } else {\n      tapI18nextProxy = this._getPackageI18nextProxy(globals.project_translations_domain);\n    }\n    underscore_helper = function() {\n      var args, key, options;\n      key = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n      options = (args.pop()).hash;\n      if (!_.isEmpty(args)) {\n        options.sprintf = args;\n      }\n      return tapI18nextProxy(key, options);\n    };\n    if (package_name !== globals.project_translations_domain) {\n      if ((Template[template] != null) && (Template[template].helpers != null)) {\n        helpers = {};\n        helpers[this.packages[package_name].helper_name] = underscore_helper;\n        return Template[template].helpers(helpers);\n      }\n    } else {\n      UI.registerHelper(this.conf.helper_name, underscore_helper);\n      return UI.registerHelper(\"languageTag\", (function(_this) {\n        return function() {\n          return _this.getLanguage();\n        };\n      })(this));\n    }\n  },\n  _getRegisterHelpersProxy: function(package_name) {\n    return (function(_this) {\n      return function(template) {\n        return _this._registerHelpers(package_name, template);\n      };\n    })(this);\n  },\n  _prepareLanguageSpecificTranslator: function(lang_tag) {\n    var dfd;\n    dfd = (new $.Deferred()).resolve().promise();\n    if (lang_tag in this._languageSpecificTranslatorsTrackers) {\n      return dfd;\n    }\n    this._languageSpecificTranslatorsTrackers[lang_tag] = new Tracker.Dependency;\n    if (!(lang_tag in this._languageSpecificTranslators)) {\n      dfd = this._loadLanguage(lang_tag).done((function(_this) {\n        return function() {\n          _this._languageSpecificTranslators[lang_tag] = _this._getSpecificLangTranslator(lang_tag);\n          return _this._languageSpecificTranslatorsTrackers[lang_tag].changed();\n        };\n      })(this));\n    }\n    return dfd;\n  },\n  _getPackageI18nextProxy: function(package_name) {\n    return (function(_this) {\n      return function(key, options, lang_tag) {\n        if (lang_tag == null) {\n          lang_tag = null;\n        }\n        if (((options != null ? options.lang : void 0) != null) && ((options != null ? options.lng : void 0) == null)) {\n          options.lng = options.lang;\n        }\n        if (((options != null ? options.lng : void 0) != null) && (lang_tag == null)) {\n          lang_tag = options.lng;\n          delete options.lng;\n        }\n        if (lang_tag != null) {\n          _this._prepareLanguageSpecificTranslator(lang_tag);\n          _this._languageSpecificTranslatorsTrackers[lang_tag].depend();\n          if (lang_tag in _this._languageSpecificTranslators) {\n            return _this._languageSpecificTranslators[lang_tag]((TAPi18n._getPackageDomain(package_name)) + \":\" + key, options);\n          } else {\n            return TAPi18next.t((TAPi18n._getPackageDomain(package_name)) + \":\" + key, options);\n          }\n        }\n        _this._language_changed_tracker.depend();\n        return TAPi18next.t((TAPi18n._getPackageDomain(package_name)) + \":\" + key, options);\n      };\n    })(this);\n  },\n  _onceEnabled: function() {\n    return this._registerHelpers(globals.project_translations_domain);\n  },\n  setLanguage: function(lang_tag) {\n    var self;\n    self = this;\n    return this._loadLanguage(lang_tag).then((function(_this) {\n      return function() {\n        TAPi18next.setLng(lang_tag);\n        _this._language_changed_tracker.changed();\n        return Session.set(_this._loaded_lang_session_key, lang_tag);\n      };\n    })(this));\n  },\n  getLanguage: function() {\n    var session_lang;\n    if (!this._enabled()) {\n      return null;\n    }\n    session_lang = Session.get(this._loaded_lang_session_key);\n    if (session_lang != null) {\n      return session_lang;\n    } else {\n      return this._fallback_language;\n    }\n  }\n});\n","sourceMap":{"version":3,"file":"/lib/tap_i18n/tap_i18n-client.coffee.js","sourceRoot":"","sources":["/packages/tap_i18n/lib/tap_i18n/tap_i18n-client.coffee"],"names":[],"mappings":"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","sourcesContent":["_.extend TAPi18n.prototype,\n  _languageSpecificTranslators: null\n  _languageSpecificTranslatorsTrackers: null\n\n  _getLanguageFilePath: (lang_tag) ->\n    if not @_enabled()\n      return null\n\n    path = if @.conf.cdn_path? then @.conf.cdn_path else @.conf.i18n_files_route\n    path = path.replace /\\/$/, \"\"\n    if Meteor.isCordova and path[0] == \"/\"\n      path = Meteor.absoluteUrl().replace(/\\/+$/, \"\") + path\n\n    \"#{path}/#{lang_tag}.json\"\n\n  _loadLanguage: (languageTag) ->\n    # Load languageTag and its dependencies languages to TAPi18next if we\n    # haven't loaded them already.\n    #\n    # languageTag dependencies languages are:\n    # * The base language if languageTag is a dialect.\n    # * The fallback language (en) if we haven't loaded it already.\n    #\n    # Returns a deferred object that resolves with no arguments if all files\n    # loaded successfully to TAPi18next and rejects with array of error\n    # messages otherwise\n    #\n    # Example:\n    # TAPi18n._loadLanguage(\"pt-BR\")\n    #   .done(function () {\n    #     console.log(\"languageLoaded successfully\");\n    #   })\n    #   .fail(function (messages) {\n    #     console.log(\"Couldn't load languageTag\", messages);\n    #   })\n    #\n    # The above example will attempt to load pt-BR, pt and en\n\n    dfd = new $.Deferred()\n\n    if not @_enabled()\n      return dfd.reject \"tap-i18n is not enabled in the project level, check tap-i18n README\"\n\n    project_languages = @_getProjectLanguages()\n\n    if languageTag in project_languages\n      if languageTag not in @_loaded_languages\n        loadLanguageTag = =>\n          jqXHR = $.getJSON(@_getLanguageFilePath(languageTag))\n\n          jqXHR.done (data) =>\n            @_loadLangFileObject(languageTag, data)\n\n            @_loaded_languages.push languageTag\n\n            dfd.resolve()\n\n          jqXHR.fail (xhr, error_code) =>\n            dfd.reject(\"Couldn't load language '#{languageTag}' JSON: #{error_code}\")\n\n        directDependencyLanguageTag = if \"-\" in languageTag then languageTag.replace(/-.*/, \"\") else fallback_language\n\n        # load dependency language if it is part of the project and not the fallback language\n        if languageTag != fallback_language and directDependencyLanguageTag in project_languages\n          dependencyLoadDfd = @_loadLanguage directDependencyLanguageTag\n\n          dependencyLoadDfd.done =>\n            # All dependencies loaded successfully\n            loadLanguageTag()\n\n          dependencyLoadDfd.fail (message) =>\n            dfd.reject(\"Loading process failed since dependency language\n              '#{directDependencyLanguageTag}' failed to load: \" + message)\n        else\n          loadLanguageTag()\n      else\n        # languageTag loaded already\n        dfd.resolve()\n    else\n      dfd.reject([\"Language #{languageTag} is not supported\"])\n\n    return dfd.promise()\n\n  _registerHelpers: (package_name, template) ->\n    if package_name != globals.project_translations_domain\n      tapI18nextProxy = @_getPackageI18nextProxy(@packages[package_name].namespace)\n    else\n      tapI18nextProxy = @_getPackageI18nextProxy(globals.project_translations_domain)\n\n    underscore_helper = (key, args...) ->\n      options = (args.pop()).hash\n      if not _.isEmpty(args)\n        options.sprintf = args\n\n      tapI18nextProxy(key, options)\n\n    # template specific helpers\n    if package_name != globals.project_translations_domain\n      # {{_ }}\n      if Template[template]? and Template[template].helpers?\n        helpers = {}\n        helpers[@packages[package_name].helper_name] = underscore_helper\n        Template[template].helpers(helpers)\n\n    # global helpers\n    else\n      # {{_ }}\n      UI.registerHelper @conf.helper_name, underscore_helper\n\n      # {{languageTag}}\n      UI.registerHelper \"languageTag\", () => @getLanguage()\n\n  _getRegisterHelpersProxy: (package_name) ->\n    # A proxy to _registerHelpers where the package_name is fixed to package_name\n    (template) =>\n      @_registerHelpers(package_name, template)\n\n  _prepareLanguageSpecificTranslator: (lang_tag) ->\n    dfd = (new $.Deferred()).resolve().promise()\n\n    if lang_tag of @_languageSpecificTranslatorsTrackers\n      return dfd\n\n    @_languageSpecificTranslatorsTrackers[lang_tag] = new Tracker.Dependency\n\n    if not(lang_tag of @_languageSpecificTranslators)\n      dfd = @_loadLanguage(lang_tag)\n        .done =>\n          @_languageSpecificTranslators[lang_tag] = @_getSpecificLangTranslator(lang_tag)\n\n          @_languageSpecificTranslatorsTrackers[lang_tag].changed()\n\n    return dfd\n\n  _getPackageI18nextProxy: (package_name) ->\n    # A proxy to TAPi18next.t where the namespace is preset to the package's\n\n    (key, options, lang_tag=null) =>\n      # Devs get confused and use lang option instead of lng option, make lang\n      # alias of lng\n      if options?.lang? and not options?.lng?\n        options.lng = options.lang\n\n      if options?.lng? and not lang_tag?\n        lang_tag = options.lng\n        # Remove options.lng so we won't pass it to the regular TAPi18next\n        # before the language specific translator is ready to keep behavior\n        # consistent.\n        # \n        # If lang is actually ready before the language specifc translator is\n        # ready, TAPi18next will translate to lang_tag if we won't remove\n        # options.lng.\n        delete options.lng\n\n      if lang_tag?\n        @_prepareLanguageSpecificTranslator(lang_tag)\n\n        @_languageSpecificTranslatorsTrackers[lang_tag].depend()\n\n        if lang_tag of @_languageSpecificTranslators\n          return @_languageSpecificTranslators[lang_tag] \"#{TAPi18n._getPackageDomain(package_name)}:#{key}\", options\n        else\n          return TAPi18next.t \"#{TAPi18n._getPackageDomain(package_name)}:#{key}\", options\n      \n      # If inside a reactive computation, we want to invalidate the computation if the client lang changes\n      @_language_changed_tracker.depend()\n\n\n      TAPi18next.t \"#{TAPi18n._getPackageDomain(package_name)}:#{key}\", options\n\n  _onceEnabled: () ->\n    @_registerHelpers globals.project_translations_domain\n\n  setLanguage: (lang_tag) ->\n    self = @\n\n    @_loadLanguage(lang_tag).then =>\n      TAPi18next.setLng(lang_tag)\n\n      @_language_changed_tracker.changed()\n      Session.set @_loaded_lang_session_key, lang_tag\n\n  getLanguage: ->\n    if not @._enabled()\n      return null\n\n    session_lang = Session.get @_loaded_lang_session_key\n\n    if session_lang? then session_lang else @._fallback_language"]}}