[{"type":"js","data":"(function () {\n\n/* Imports */\nvar process = Package.meteor.process;\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar Babel = Package['babel-compiler'].Babel;\nvar BabelCompiler = Package['babel-compiler'].BabelCompiler;\n\n/* Package-scope variables */\nvar ECMAScript;\n\n(function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// packages/ecmascript/ecmascript.js                                                                //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nECMAScript = {                                                                                      // 1\n  compileForShell: function (command) {                                                             // 2\n    var babelOptions = Babel.getDefaultOptions({ asyncAwait: true });                               // 3\n    babelOptions.sourceMap = false;                                                                 // 4\n    babelOptions.ast = false;                                                                       // 5\n    babelOptions.externalHelpers = true;                                                            // 6\n    return Babel.compile(command, babelOptions).code;                                               // 7\n  }                                                                                                 //\n};                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package.ecmascript = {}, {\n  ECMAScript: ECMAScript\n});\n\n})();\n","servePath":"/packages/ecmascript.js","sourceMap":{"version":3,"sources":["/packages/ecmascript/ecmascript.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,UAAU,GAAG;AACX,iBAAe,YAAC,OAAO,EAAE;AACvB,QAAM,YAAY,GAAG,KAAK,CAAC,iBAAiB,CAAC,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC,CAAC;AACjE,gBAAY,CAAC,SAAS,GAAG,KAAK,CAAC;AAC/B,gBAAY,CAAC,GAAG,GAAG,KAAK,CAAC;AACzB,gBAAY,CAAC,eAAe,GAAG,IAAI,CAAC;AACpC,WAAO,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC,IAAI,CAAC;GAClD;CACF,CAAC,oG","file":"/packages/ecmascript.js","sourcesContent":["ECMAScript = {\n  compileForShell(command) {\n    const babelOptions = Babel.getDefaultOptions({asyncAwait: true});\n    babelOptions.sourceMap = false;\n    babelOptions.ast = false;\n    babelOptions.externalHelpers = true;\n    return Babel.compile(command, babelOptions).code;\n  }\n};\n"]}}]