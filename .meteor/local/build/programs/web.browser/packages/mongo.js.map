{"version":3,"sources":["meteor://ðŸ’»app/packages/mongo/local_collection_driver.js","meteor://ðŸ’»app/packages/mongo/collection.js"],"names":[],"mappings":"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","file":"/packages/mongo.js","sourcesContent":["LocalCollectionDriver = function () {\n  var self = this;\n  self.noConnCollections = {};\n};\n\nvar ensureCollection = function (name, collections) {\n  if (!(name in collections))\n    collections[name] = new LocalCollection(name);\n  return collections[name];\n};\n\n_.extend(LocalCollectionDriver.prototype, {\n  open: function (name, conn) {\n    var self = this;\n    if (!name)\n      return new LocalCollection;\n    if (! conn) {\n      return ensureCollection(name, self.noConnCollections);\n    }\n    if (! conn._mongo_livedata_collections)\n      conn._mongo_livedata_collections = {};\n    // XXX is there a way to keep track of a connection's collections without\n    // dangling it off the connection object?\n    return ensureCollection(name, conn._mongo_livedata_collections);\n  }\n});\n\n// singleton\nLocalCollectionDriver = new LocalCollectionDriver;\n","// options.connection, if given, is a LivedataClient or LivedataServer\n// XXX presently there is no way to destroy/clean up a Collection\n\n/**\n * @summary Namespace for MongoDB-related items\n * @namespace\n */\nMongo = {};\n\n/**\n * @summary Constructor for a Collection\n * @locus Anywhere\n * @instancename collection\n * @class\n * @param {String} name The name of the collection.  If null, creates an unmanaged (unsynchronized) local collection.\n * @param {Object} [options]\n * @param {Object} options.connection The server connection that will manage this collection. Uses the default connection if not specified.  Pass the return value of calling [`DDP.connect`](#ddp_connect) to specify a different server. Pass `null` to specify no connection. Unmanaged (`name` is null) collections cannot specify a connection.\n * @param {String} options.idGeneration The method of generating the `_id` fields of new documents in this collection.  Possible values:\n\n - **`'STRING'`**: random strings\n - **`'MONGO'`**:  random [`Mongo.ObjectID`](#mongo_object_id) values\n\nThe default id generation technique is `'STRING'`.\n * @param {Function} options.transform An optional transformation function. Documents will be passed through this function before being returned from `fetch` or `findOne`, and before being passed to callbacks of `observe`, `map`, `forEach`, `allow`, and `deny`. Transforms are *not* applied for the callbacks of `observeChanges` or to cursors returned from publish functions.\n */\nMongo.Collection = function (name, options) {\n  var self = this;\n  if (! (self instanceof Mongo.Collection))\n    throw new Error('use \"new\" to construct a Mongo.Collection');\n\n  if (!name && (name !== null)) {\n    Meteor._debug(\"Warning: creating anonymous collection. It will not be \" +\n                  \"saved or synchronized over the network. (Pass null for \" +\n                  \"the collection name to turn off this warning.)\");\n    name = null;\n  }\n\n  if (name !== null && typeof name !== \"string\") {\n    throw new Error(\n      \"First argument to new Mongo.Collection must be a string or null\");\n  }\n\n  if (options && options.methods) {\n    // Backwards compatibility hack with original signature (which passed\n    // \"connection\" directly instead of in options. (Connections must have a \"methods\"\n    // method.)\n    // XXX remove before 1.0\n    options = {connection: options};\n  }\n  // Backwards compatibility: \"connection\" used to be called \"manager\".\n  if (options && options.manager && !options.connection) {\n    options.connection = options.manager;\n  }\n  options = _.extend({\n    connection: undefined,\n    idGeneration: 'STRING',\n    transform: null,\n    _driver: undefined,\n    _preventAutopublish: false\n  }, options);\n\n  switch (options.idGeneration) {\n  case 'MONGO':\n    self._makeNewID = function () {\n      var src = name\n            ? DDP.randomStream('/collection/' + name)\n            : Random.insecure;\n      return new Mongo.ObjectID(src.hexString(24));\n    };\n    break;\n  case 'STRING':\n  default:\n    self._makeNewID = function () {\n      var src = name\n            ? DDP.randomStream('/collection/' + name)\n            : Random.insecure;\n      return src.id();\n    };\n    break;\n  }\n\n  self._transform = LocalCollection.wrapTransform(options.transform);\n\n  if (! name || options.connection === null)\n    // note: nameless collections never have a connection\n    self._connection = null;\n  else if (options.connection)\n    self._connection = options.connection;\n  else if (Meteor.isClient)\n    self._connection = Meteor.connection;\n  else\n    self._connection = Meteor.server;\n\n  if (!options._driver) {\n    // XXX This check assumes that webapp is loaded so that Meteor.server !==\n    // null. We should fully support the case of \"want to use a Mongo-backed\n    // collection from Node code without webapp\", but we don't yet.\n    // #MeteorServerNull\n    if (name && self._connection === Meteor.server &&\n        typeof MongoInternals !== \"undefined\" &&\n        MongoInternals.defaultRemoteCollectionDriver) {\n      options._driver = MongoInternals.defaultRemoteCollectionDriver();\n    } else {\n      options._driver = LocalCollectionDriver;\n    }\n  }\n\n  self._collection = options._driver.open(name, self._connection);\n  self._name = name;\n  self._driver = options._driver;\n\n  if (self._connection && self._connection.registerStore) {\n    // OK, we're going to be a slave, replicating some remote\n    // database, except possibly with some temporary divergence while\n    // we have unacknowledged RPC's.\n    var ok = self._connection.registerStore(name, {\n      // Called at the beginning of a batch of updates. batchSize is the number\n      // of update calls to expect.\n      //\n      // XXX This interface is pretty janky. reset probably ought to go back to\n      // being its own function, and callers shouldn't have to calculate\n      // batchSize. The optimization of not calling pause/remove should be\n      // delayed until later: the first call to update() should buffer its\n      // message, and then we can either directly apply it at endUpdate time if\n      // it was the only update, or do pauseObservers/apply/apply at the next\n      // update() if there's another one.\n      beginUpdate: function (batchSize, reset) {\n        // pause observers so users don't see flicker when updating several\n        // objects at once (including the post-reconnect reset-and-reapply\n        // stage), and so that a re-sorting of a query can take advantage of the\n        // full _diffQuery moved calculation instead of applying change one at a\n        // time.\n        if (batchSize > 1 || reset)\n          self._collection.pauseObservers();\n\n        if (reset)\n          self._collection.remove({});\n      },\n\n      // Apply an update.\n      // XXX better specify this interface (not in terms of a wire message)?\n      update: function (msg) {\n        var mongoId = MongoID.idParse(msg.id);\n        var doc = self._collection.findOne(mongoId);\n\n        // Is this a \"replace the whole doc\" message coming from the quiescence\n        // of method writes to an object? (Note that 'undefined' is a valid\n        // value meaning \"remove it\".)\n        if (msg.msg === 'replace') {\n          var replace = msg.replace;\n          if (!replace) {\n            if (doc)\n              self._collection.remove(mongoId);\n          } else if (!doc) {\n            self._collection.insert(replace);\n          } else {\n            // XXX check that replace has no $ ops\n            self._collection.update(mongoId, replace);\n          }\n          return;\n        } else if (msg.msg === 'added') {\n          if (doc) {\n            throw new Error(\"Expected not to find a document already present for an add\");\n          }\n          self._collection.insert(_.extend({_id: mongoId}, msg.fields));\n        } else if (msg.msg === 'removed') {\n          if (!doc)\n            throw new Error(\"Expected to find a document already present for removed\");\n          self._collection.remove(mongoId);\n        } else if (msg.msg === 'changed') {\n          if (!doc)\n            throw new Error(\"Expected to find a document to change\");\n          if (!_.isEmpty(msg.fields)) {\n            var modifier = {};\n            _.each(msg.fields, function (value, key) {\n              if (value === undefined) {\n                if (!modifier.$unset)\n                  modifier.$unset = {};\n                modifier.$unset[key] = 1;\n              } else {\n                if (!modifier.$set)\n                  modifier.$set = {};\n                modifier.$set[key] = value;\n              }\n            });\n            self._collection.update(mongoId, modifier);\n          }\n        } else {\n          throw new Error(\"I don't know how to deal with this message\");\n        }\n\n      },\n\n      // Called at the end of a batch of updates.\n      endUpdate: function () {\n        self._collection.resumeObservers();\n      },\n\n      // Called around method stub invocations to capture the original versions\n      // of modified documents.\n      saveOriginals: function () {\n        self._collection.saveOriginals();\n      },\n      retrieveOriginals: function () {\n        return self._collection.retrieveOriginals();\n      },\n\n      // Used to preserve current versions of documents across a store reset.\n      getDoc: function(id) {\n        return self.findOne(id);\n      },\n    });\n\n    if (!ok)\n      throw new Error(\"There is already a collection named '\" + name + \"'\");\n  }\n\n  // XXX don't define these until allow or deny is actually used for this\n  // collection. Could be hard if the security rules are only defined on the\n  // server.\n  self._defineMutationMethods();\n\n  // autopublish\n  if (Package.autopublish && !options._preventAutopublish && self._connection\n      && self._connection.publish) {\n    self._connection.publish(null, function () {\n      return self.find();\n    }, {is_auto: true});\n  }\n};\n\n///\n/// Main collection API\n///\n\n\n_.extend(Mongo.Collection.prototype, {\n\n  _getFindSelector: function (args) {\n    if (args.length == 0)\n      return {};\n    else\n      return args[0];\n  },\n\n  _getFindOptions: function (args) {\n    var self = this;\n    if (args.length < 2) {\n      return { transform: self._transform };\n    } else {\n      check(args[1], Match.Optional(Match.ObjectIncluding({\n        fields: Match.Optional(Match.OneOf(Object, undefined)),\n        sort: Match.Optional(Match.OneOf(Object, Array, undefined)),\n        limit: Match.Optional(Match.OneOf(Number, undefined)),\n        skip: Match.Optional(Match.OneOf(Number, undefined))\n     })));\n\n      return _.extend({\n        transform: self._transform\n      }, args[1]);\n    }\n  },\n\n  /**\n   * @summary Find the documents in a collection that match the selector.\n   * @locus Anywhere\n   * @method find\n   * @memberOf Mongo.Collection\n   * @instance\n   * @param {MongoSelector} [selector] A query describing the documents to find\n   * @param {Object} [options]\n   * @param {MongoSortSpecifier} options.sort Sort order (default: natural order)\n   * @param {Number} options.skip Number of results to skip at the beginning\n   * @param {Number} options.limit Maximum number of results to return\n   * @param {MongoFieldSpecifier} options.fields Dictionary of fields to return or exclude.\n   * @param {Boolean} options.reactive (Client only) Default `true`; pass `false` to disable reactivity\n   * @param {Function} options.transform Overrides `transform` on the  [`Collection`](#collections) for this cursor.  Pass `null` to disable transformation.\n   * @returns {Mongo.Cursor}\n   */\n  find: function (/* selector, options */) {\n    // Collection.find() (return all docs) behaves differently\n    // from Collection.find(undefined) (return 0 docs).  so be\n    // careful about the length of arguments.\n    var self = this;\n    var argArray = _.toArray(arguments);\n    return self._collection.find(self._getFindSelector(argArray),\n                                 self._getFindOptions(argArray));\n  },\n\n  /**\n   * @summary Finds the first document that matches the selector, as ordered by sort and skip options.\n   * @locus Anywhere\n   * @method findOne\n   * @memberOf Mongo.Collection\n   * @instance\n   * @param {MongoSelector} [selector] A query describing the documents to find\n   * @param {Object} [options]\n   * @param {MongoSortSpecifier} options.sort Sort order (default: natural order)\n   * @param {Number} options.skip Number of results to skip at the beginning\n   * @param {MongoFieldSpecifier} options.fields Dictionary of fields to return or exclude.\n   * @param {Boolean} options.reactive (Client only) Default true; pass false to disable reactivity\n   * @param {Function} options.transform Overrides `transform` on the [`Collection`](#collections) for this cursor.  Pass `null` to disable transformation.\n   * @returns {Object}\n   */\n  findOne: function (/* selector, options */) {\n    var self = this;\n    var argArray = _.toArray(arguments);\n    return self._collection.findOne(self._getFindSelector(argArray),\n                                    self._getFindOptions(argArray));\n  }\n\n});\n\nMongo.Collection._publishCursor = function (cursor, sub, collection) {\n  var observeHandle = cursor.observeChanges({\n    added: function (id, fields) {\n      sub.added(collection, id, fields);\n    },\n    changed: function (id, fields) {\n      sub.changed(collection, id, fields);\n    },\n    removed: function (id) {\n      sub.removed(collection, id);\n    }\n  });\n\n  // We don't call sub.ready() here: it gets called in livedata_server, after\n  // possibly calling _publishCursor on multiple returned cursors.\n\n  // register stop callback (expects lambda w/ no args).\n  sub.onStop(function () {observeHandle.stop();});\n\n  // return the observeHandle in case it needs to be stopped early\n  return observeHandle;\n};\n\n// protect against dangerous selectors.  falsey and {_id: falsey} are both\n// likely programmer error, and not what you want, particularly for destructive\n// operations.  JS regexps don't serialize over DDP but can be trivially\n// replaced by $regex.\nMongo.Collection._rewriteSelector = function (selector) {\n  // shorthand -- scalars match _id\n  if (LocalCollection._selectorIsId(selector))\n    selector = {_id: selector};\n\n  if (_.isArray(selector)) {\n    // This is consistent with the Mongo console itself; if we don't do this\n    // check passing an empty array ends up selecting all items\n    throw new Error(\"Mongo selector can't be an array.\");\n  }\n\n  if (!selector || (('_id' in selector) && !selector._id))\n    // can't match anything\n    return {_id: Random.id()};\n\n  var ret = {};\n  _.each(selector, function (value, key) {\n    // Mongo supports both {field: /foo/} and {field: {$regex: /foo/}}\n    if (value instanceof RegExp) {\n      ret[key] = convertRegexpToMongoSelector(value);\n    } else if (value && value.$regex instanceof RegExp) {\n      ret[key] = convertRegexpToMongoSelector(value.$regex);\n      // if value is {$regex: /foo/, $options: ...} then $options\n      // override the ones set on $regex.\n      if (value.$options !== undefined)\n        ret[key].$options = value.$options;\n    }\n    else if (_.contains(['$or','$and','$nor'], key)) {\n      // Translate lower levels of $and/$or/$nor\n      ret[key] = _.map(value, function (v) {\n        return Mongo.Collection._rewriteSelector(v);\n      });\n    } else {\n      ret[key] = value;\n    }\n  });\n  return ret;\n};\n\n// convert a JS RegExp object to a Mongo {$regex: ..., $options: ...}\n// selector\nfunction convertRegexpToMongoSelector(regexp) {\n  check(regexp, RegExp); // safety belt\n\n  var selector = {$regex: regexp.source};\n  var regexOptions = '';\n  // JS RegExp objects support 'i', 'm', and 'g'. Mongo regex $options\n  // support 'i', 'm', 'x', and 's'. So we support 'i' and 'm' here.\n  if (regexp.ignoreCase)\n    regexOptions += 'i';\n  if (regexp.multiline)\n    regexOptions += 'm';\n  if (regexOptions)\n    selector.$options = regexOptions;\n\n  return selector;\n};\n\n// 'insert' immediately returns the inserted document's new _id.\n// The others return values immediately if you are in a stub, an in-memory\n// unmanaged collection, or a mongo-backed collection and you don't pass a\n// callback. 'update' and 'remove' return the number of affected\n// documents. 'upsert' returns an object with keys 'numberAffected' and, if an\n// insert happened, 'insertedId'.\n//\n// Otherwise, the semantics are exactly like other methods: they take\n// a callback as an optional last argument; if no callback is\n// provided, they block until the operation is complete, and throw an\n// exception if it fails; if a callback is provided, then they don't\n// necessarily block, and they call the callback when they finish with error and\n// result arguments.  (The insert method provides the document ID as its result;\n// update and remove provide the number of affected docs as the result; upsert\n// provides an object with numberAffected and maybe insertedId.)\n//\n// On the client, blocking is impossible, so if a callback\n// isn't provided, they just return immediately and any error\n// information is lost.\n//\n// There's one more tweak. On the client, if you don't provide a\n// callback, then if there is an error, a message will be logged with\n// Meteor._debug.\n//\n// The intent (though this is actually determined by the underlying\n// drivers) is that the operations should be done synchronously, not\n// generating their result until the database has acknowledged\n// them. In the future maybe we should provide a flag to turn this\n// off.\n\n/**\n * @summary Insert a document in the collection.  Returns its unique _id.\n * @locus Anywhere\n * @method  insert\n * @memberOf Mongo.Collection\n * @instance\n * @param {Object} doc The document to insert. May not yet have an _id attribute, in which case Meteor will generate one for you.\n * @param {Function} [callback] Optional.  If present, called with an error object as the first argument and, if no error, the _id as the second.\n */\nMongo.Collection.prototype.insert = function insert(doc, callback) {\n  // Make sure we were passed a document to insert\n  if (!doc) {\n    throw new Error(\"insert requires an argument\");\n  }\n\n  // Shallow-copy the document and possibly generate an ID\n  doc = _.extend({}, doc);\n\n  if ('_id' in doc) {\n    if (!doc._id || !(typeof doc._id === 'string'\n          || doc._id instanceof Mongo.ObjectID)) {\n      throw new Error(\"Meteor requires document _id fields to be non-empty strings or ObjectIDs\");\n    }\n  } else {\n    let generateId = true;\n\n    // Don't generate the id if we're the client and the 'outermost' call\n    // This optimization saves us passing both the randomSeed and the id\n    // Passing both is redundant.\n    if (this._isRemoteCollection()) {\n      const enclosing = DDP._CurrentInvocation.get();\n      if (!enclosing) {\n        generateId = false;\n      }\n    }\n\n    if (generateId) {\n      doc._id = this._makeNewID();\n    }\n  }\n\n  // On inserts, always return the id that we generated; on all other\n  // operations, just return the result from the collection.\n  var chooseReturnValueFromCollectionResult = function (result) {\n    if (doc._id) {\n      return doc._id;\n    }\n\n    // XXX what is this for??\n    // It's some iteraction between the callback to _callMutatorMethod and\n    // the return value conversion\n    doc._id = result;\n\n    return result;\n  };\n\n  const wrappedCallback = wrapCallback(\n    callback, chooseReturnValueFromCollectionResult);\n\n  if (this._isRemoteCollection()) {\n    const result = this._callMutatorMethod(\"insert\", [doc], wrappedCallback);\n    return chooseReturnValueFromCollectionResult(result);\n  }\n\n  // it's my collection.  descend into the collection object\n  // and propagate any exception.\n  try {\n    // If the user provided a callback and the collection implements this\n    // operation asynchronously, then queryRet will be undefined, and the\n    // result will be returned through the callback instead.\n    const result = this._collection.insert(doc, wrappedCallback);\n    return chooseReturnValueFromCollectionResult(result);\n  } catch (e) {\n    if (callback) {\n      callback(e);\n      return null;\n    }\n    throw e;\n  }\n}\n\n/**\n * @summary Modify one or more documents in the collection. Returns the number of affected documents.\n * @locus Anywhere\n * @method update\n * @memberOf Mongo.Collection\n * @instance\n * @param {MongoSelector} selector Specifies which documents to modify\n * @param {MongoModifier} modifier Specifies how to modify the documents\n * @param {Object} [options]\n * @param {Boolean} options.multi True to modify all matching documents; false to only modify one of the matching documents (the default).\n * @param {Boolean} options.upsert True to insert a document if no matching documents are found.\n * @param {Function} [callback] Optional.  If present, called with an error object as the first argument and, if no error, the number of affected documents as the second.\n */\nMongo.Collection.prototype.update = function update(selector, modifier, ...optionsAndCallback) {\n  const callback = popCallbackFromArgs(optionsAndCallback);\n\n  selector = Mongo.Collection._rewriteSelector(selector);\n\n  // We've already popped off the callback, so we are left with an array\n  // of one or zero items\n  const options = _.clone(optionsAndCallback[0]) || {};\n  if (options && options.upsert) {\n    // set `insertedId` if absent.  `insertedId` is a Meteor extension.\n    if (options.insertedId) {\n      if (!(typeof options.insertedId === 'string'\n            || options.insertedId instanceof Mongo.ObjectID))\n        throw new Error(\"insertedId must be string or ObjectID\");\n    } else if (! selector._id) {\n      options.insertedId = this._makeNewID();\n    }\n  }\n\n  const wrappedCallback = wrapCallback(callback);\n\n  if (this._isRemoteCollection()) {\n    const args = [\n      selector,\n      modifier,\n      options\n    ];\n\n    return this._callMutatorMethod(\"update\", args, wrappedCallback);\n  }\n\n  // it's my collection.  descend into the collection object\n  // and propagate any exception.\n  try {\n    // If the user provided a callback and the collection implements this\n    // operation asynchronously, then queryRet will be undefined, and the\n    // result will be returned through the callback instead.\n    return this._collection.update(\n      selector, modifier, options, wrappedCallback);\n  } catch (e) {\n    if (callback) {\n      callback(e);\n      return null;\n    }\n    throw e;\n  }\n}\n\n/**\n * @summary Remove documents from the collection\n * @locus Anywhere\n * @method remove\n * @memberOf Mongo.Collection\n * @instance\n * @param {MongoSelector} selector Specifies which documents to remove\n * @param {Function} [callback] Optional.  If present, called with an error object as its argument.\n */\nMongo.Collection.prototype.remove = function remove(selector, callback) {\n  selector = Mongo.Collection._rewriteSelector(selector);\n\n  const wrappedCallback = wrapCallback(callback);\n\n  if (this._isRemoteCollection()) {\n    return this._callMutatorMethod(\"remove\", [selector], wrappedCallback);\n  }\n\n  // it's my collection.  descend into the collection object\n  // and propagate any exception.\n  try {\n    // If the user provided a callback and the collection implements this\n    // operation asynchronously, then queryRet will be undefined, and the\n    // result will be returned through the callback instead.\n    return this._collection.remove(selector, wrappedCallback);\n  } catch (e) {\n    if (callback) {\n      callback(e);\n      return null;\n    }\n    throw e;\n  }\n};\n\n// Determine if this collection is simply a minimongo representation of a real\n// database on another server\nMongo.Collection.prototype._isRemoteCollection = function _isRemoteCollection() {\n  // XXX see #MeteorServerNull\n  return this._connection && this._connection !== Meteor.server;\n}\n\n// Convert the callback to not return a result if there is an error\nfunction wrapCallback(callback, convertResult) {\n  if (!callback) {\n    return;\n  }\n\n  // If no convert function was passed in, just use a \"blank function\"\n  convertResult = convertResult || _.identity;\n\n  return (error, result) => {\n    callback(error, ! error && convertResult(result));\n  };\n}\n\n/**\n * @summary Modify one or more documents in the collection, or insert one if no matching documents were found. Returns an object with keys `numberAffected` (the number of documents modified)  and `insertedId` (the unique _id of the document that was inserted, if any).\n * @locus Anywhere\n * @param {MongoSelector} selector Specifies which documents to modify\n * @param {MongoModifier} modifier Specifies how to modify the documents\n * @param {Object} [options]\n * @param {Boolean} options.multi True to modify all matching documents; false to only modify one of the matching documents (the default).\n * @param {Function} [callback] Optional.  If present, called with an error object as the first argument and, if no error, the number of affected documents as the second.\n */\nMongo.Collection.prototype.upsert = function upsert(\n    selector, modifier, options, callback) {\n  if (! callback && typeof options === \"function\") {\n    callback = options;\n    options = {};\n  }\n\n  const updateOptions = _.extend({}, options, {\n    _returnObject: true,\n    upsert: true\n  });\n\n  return this.update(selector, modifier, updateOptions, callback);\n};\n\n// We'll actually design an index API later. For now, we just pass through to\n// Mongo's, but make it synchronous.\nMongo.Collection.prototype._ensureIndex = function (index, options) {\n  var self = this;\n  if (!self._collection._ensureIndex)\n    throw new Error(\"Can only call _ensureIndex on server collections\");\n  self._collection._ensureIndex(index, options);\n};\nMongo.Collection.prototype._dropIndex = function (index) {\n  var self = this;\n  if (!self._collection._dropIndex)\n    throw new Error(\"Can only call _dropIndex on server collections\");\n  self._collection._dropIndex(index);\n};\nMongo.Collection.prototype._dropCollection = function () {\n  var self = this;\n  if (!self._collection.dropCollection)\n    throw new Error(\"Can only call _dropCollection on server collections\");\n  self._collection.dropCollection();\n};\nMongo.Collection.prototype._createCappedCollection = function (byteSize, maxDocuments) {\n  var self = this;\n  if (!self._collection._createCappedCollection)\n    throw new Error(\"Can only call _createCappedCollection on server collections\");\n  self._collection._createCappedCollection(byteSize, maxDocuments);\n};\n\n/**\n * @summary Returns the [`Collection`](http://mongodb.github.io/node-mongodb-native/1.4/api-generated/collection.html) object corresponding to this collection from the [npm `mongodb` driver module](https://www.npmjs.com/package/mongodb) which is wrapped by `Mongo.Collection`.\n * @locus Server\n */\nMongo.Collection.prototype.rawCollection = function () {\n  var self = this;\n  if (! self._collection.rawCollection) {\n    throw new Error(\"Can only call rawCollection on server collections\");\n  }\n  return self._collection.rawCollection();\n};\n\n/**\n * @summary Returns the [`Db`](http://mongodb.github.io/node-mongodb-native/1.4/api-generated/db.html) object corresponding to this collection's database connection from the [npm `mongodb` driver module](https://www.npmjs.com/package/mongodb) which is wrapped by `Mongo.Collection`.\n * @locus Server\n */\nMongo.Collection.prototype.rawDatabase = function () {\n  var self = this;\n  if (! (self._driver.mongo && self._driver.mongo.db)) {\n    throw new Error(\"Can only call rawDatabase on server collections\");\n  }\n  return self._driver.mongo.db;\n};\n\n\n/**\n * @summary Create a Mongo-style `ObjectID`.  If you don't specify a `hexString`, the `ObjectID` will generated randomly (not using MongoDB's ID construction rules).\n * @locus Anywhere\n * @class\n * @param {String} [hexString] Optional.  The 24-character hexadecimal contents of the ObjectID to create\n */\nMongo.ObjectID = MongoID.ObjectID;\n\n/**\n * @summary To create a cursor, use find. To access the documents in a cursor, use forEach, map, or fetch.\n * @class\n * @instanceName cursor\n */\nMongo.Cursor = LocalCollection.Cursor;\n\n/**\n * @deprecated in 0.9.1\n */\nMongo.Collection.Cursor = Mongo.Cursor;\n\n/**\n * @deprecated in 0.9.1\n */\nMongo.Collection.ObjectID = Mongo.ObjectID;\n\n/**\n * @deprecated in 0.9.1\n */\nMeteor.Collection = Mongo.Collection;\n\n// Allow deny stuff is now in the allow-deny package\n_.extend(Meteor.Collection.prototype, AllowDeny.CollectionPrototype);\n\nfunction popCallbackFromArgs(args) {\n  // Pull off any callback (or perhaps a 'callback' variable that was passed\n  // in undefined, like how 'upsert' does it).\n  if (args.length &&\n      (args[args.length - 1] === undefined ||\n       args[args.length - 1] instanceof Function)) {\n    return args.pop();\n  }\n}\n"]}